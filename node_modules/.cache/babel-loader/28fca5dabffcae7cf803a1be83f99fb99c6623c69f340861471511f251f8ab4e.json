{"ast":null,"code":"import _toConsumableArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"as\", \"children\", \"isLoaded\", \"className\", \"classNames\"];\n// src/use-skeleton.ts\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\nimport { skeleton } from \"@nextui-org/theme\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nfunction useSkeleton(originalProps) {\n  var _mapPropsVariants = mapPropsVariants(originalProps, skeleton.variantKeys),\n    _mapPropsVariants2 = _slicedToArray(_mapPropsVariants, 2),\n    props = _mapPropsVariants2[0],\n    variantProps = _mapPropsVariants2[1];\n  var as = props.as,\n    children = props.children,\n    _props$isLoaded = props.isLoaded,\n    isLoaded = _props$isLoaded === void 0 ? false : _props$isLoaded,\n    className = props.className,\n    classNames = props.classNames,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var Component = as || \"div\";\n  var slots = useMemo(function () {\n    return skeleton(_objectSpread({}, variantProps));\n  }, [].concat(_toConsumableArray(Object.values(variantProps)), [children]));\n  var baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  var getSkeletonProps = function getSkeletonProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"data-loaded\": dataAttr(isLoaded),\n      className: slots.base({\n        class: clsx(baseStyles, props2 == null ? void 0 : props2.className)\n      })\n    }, otherProps);\n  };\n  var getContentProps = function getContentProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      className: slots.content({\n        class: clsx(classNames == null ? void 0 : classNames.content, props2 == null ? void 0 : props2.className)\n      })\n    };\n  };\n  return {\n    Component: Component,\n    children: children,\n    slots: slots,\n    classNames: classNames,\n    getSkeletonProps: getSkeletonProps,\n    getContentProps: getContentProps\n  };\n}\nexport { useSkeleton };","map":{"version":3,"names":["mapPropsVariants","skeleton","clsx","dataAttr","useMemo","useSkeleton","originalProps","_mapPropsVariants","variantKeys","_mapPropsVariants2","_slicedToArray","props","variantProps","as","children","_props$isLoaded","isLoaded","className","classNames","otherProps","_objectWithoutProperties","_excluded","Component","slots","_objectSpread","concat","_toConsumableArray","Object","values","baseStyles","base","getSkeletonProps","props2","arguments","length","undefined","class","getContentProps","content"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@nextui-org/skeleton/dist/chunk-Q572LSEI.mjs"],"sourcesContent":["// src/use-skeleton.ts\r\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\r\nimport { skeleton } from \"@nextui-org/theme\";\r\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\r\nimport { useMemo } from \"react\";\r\nfunction useSkeleton(originalProps) {\r\n  const [props, variantProps] = mapPropsVariants(originalProps, skeleton.variantKeys);\r\n  const { as, children, isLoaded = false, className, classNames, ...otherProps } = props;\r\n  const Component = as || \"div\";\r\n  const slots = useMemo(\r\n    () => skeleton({\r\n      ...variantProps\r\n    }),\r\n    [...Object.values(variantProps), children]\r\n  );\r\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\r\n  const getSkeletonProps = (props2 = {}) => {\r\n    return {\r\n      \"data-loaded\": dataAttr(isLoaded),\r\n      className: slots.base({ class: clsx(baseStyles, props2 == null ? void 0 : props2.className) }),\r\n      ...otherProps\r\n    };\r\n  };\r\n  const getContentProps = (props2 = {}) => {\r\n    return {\r\n      className: slots.content({ class: clsx(classNames == null ? void 0 : classNames.content, props2 == null ? void 0 : props2.className) })\r\n    };\r\n  };\r\n  return { Component, children, slots, classNames, getSkeletonProps, getContentProps };\r\n}\r\n\r\nexport {\r\n  useSkeleton\r\n};\r\n"],"mappings":";;;;;AAAA;AACA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,0BAA0B;AACzD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,WAAWA,CAACC,aAAa,EAAE;EAClC,IAAAC,iBAAA,GAA8BP,gBAAgB,CAACM,aAAa,EAAEL,QAAQ,CAACO,WAAW,CAAC;IAAAC,kBAAA,GAAAC,cAAA,CAAAH,iBAAA;IAA5EI,KAAK,GAAAF,kBAAA;IAAEG,YAAY,GAAAH,kBAAA;EAC1B,IAAQI,EAAE,GAAuEF,KAAK,CAA9EE,EAAE;IAAEC,QAAQ,GAA6DH,KAAK,CAA1EG,QAAQ;IAAAC,eAAA,GAA6DJ,KAAK,CAAhEK,QAAQ;IAARA,QAAQ,GAAAD,eAAA,cAAG,KAAK,GAAAA,eAAA;IAAEE,SAAS,GAAgCN,KAAK,CAA9CM,SAAS;IAAEC,UAAU,GAAoBP,KAAK,CAAnCO,UAAU;IAAKC,UAAU,GAAAC,wBAAA,CAAKT,KAAK,EAAAU,SAAA;EACtF,IAAMC,SAAS,GAAGT,EAAE,IAAI,KAAK;EAC7B,IAAMU,KAAK,GAAGnB,OAAO,CACnB;IAAA,OAAMH,QAAQ,CAAAuB,aAAA,KACTZ,YAAY,EACf;EAAA,MAAAa,MAAA,CAAAC,kBAAA,CACEC,MAAM,CAACC,MAAM,CAAChB,YAAY,CAAC,IAAEE,QAAQ,GAC1C;EACD,IAAMe,UAAU,GAAG3B,IAAI,CAACgB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACY,IAAI,EAAEb,SAAS,CAAC;EACjF,IAAMc,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAoB;IAAA,IAAhBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACnC,OAAAT,aAAA;MACE,aAAa,EAAErB,QAAQ,CAACa,QAAQ,CAAC;MACjCC,SAAS,EAAEM,KAAK,CAACO,IAAI,CAAC;QAAEM,KAAK,EAAElC,IAAI,CAAC2B,UAAU,EAAEG,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACf,SAAS;MAAE,CAAC;IAAC,GAC3FE,UAAU;EAEjB,CAAC;EACD,IAAMkB,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAoB;IAAA,IAAhBL,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAClC,OAAO;MACLhB,SAAS,EAAEM,KAAK,CAACe,OAAO,CAAC;QAAEF,KAAK,EAAElC,IAAI,CAACgB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACoB,OAAO,EAAEN,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACf,SAAS;MAAE,CAAC;IACxI,CAAC;EACH,CAAC;EACD,OAAO;IAAEK,SAAS,EAATA,SAAS;IAAER,QAAQ,EAARA,QAAQ;IAAES,KAAK,EAALA,KAAK;IAAEL,UAAU,EAAVA,UAAU;IAAEa,gBAAgB,EAAhBA,gBAAgB;IAAEM,eAAe,EAAfA;EAAgB,CAAC;AACtF;AAEA,SACEhC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}