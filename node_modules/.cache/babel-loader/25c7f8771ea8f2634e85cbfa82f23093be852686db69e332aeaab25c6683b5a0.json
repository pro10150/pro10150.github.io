{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _createForOfIteratorHelper from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _excluded = [\"itemProps\"];\nimport $682989befd4f478d$exports from \"./ar-AE.mjs\";\nimport $f7fca02019afd941$exports from \"./bg-BG.mjs\";\nimport $8f86f40be75387f1$exports from \"./cs-CZ.mjs\";\nimport $db24ba43c8d652ee$exports from \"./da-DK.mjs\";\nimport $f8f1e72c8b5447d6$exports from \"./de-DE.mjs\";\nimport $9a73ed2983c3ab0b$exports from \"./el-GR.mjs\";\nimport $583de0b3587601b9$exports from \"./en-US.mjs\";\nimport $147159c978043442$exports from \"./es-ES.mjs\";\nimport $5cbb62c8a19173ac$exports from \"./et-EE.mjs\";\nimport $a33d71dc804cc59e$exports from \"./fi-FI.mjs\";\nimport $92d800447793d084$exports from \"./fr-FR.mjs\";\nimport $fe732cdb32124ea8$exports from \"./he-IL.mjs\";\nimport $e41234e934efb4f5$exports from \"./hr-HR.mjs\";\nimport $1b0393182473bf9e$exports from \"./hu-HU.mjs\";\nimport $2eed782c1c110ce7$exports from \"./it-IT.mjs\";\nimport $8b5d459f86e9b23c$exports from \"./ja-JP.mjs\";\nimport $1949c3ad17295fd4$exports from \"./ko-KR.mjs\";\nimport $f5e3df4dc8aa7b54$exports from \"./lt-LT.mjs\";\nimport $9dd86690a5c2b2c5$exports from \"./lv-LV.mjs\";\nimport $843964c3bf9a7d24$exports from \"./nb-NO.mjs\";\nimport $73f50e845f9ef3b4$exports from \"./nl-NL.mjs\";\nimport $87f92a7e077514b2$exports from \"./pl-PL.mjs\";\nimport $c28c98d58ee9ff6f$exports from \"./pt-BR.mjs\";\nimport $b6b1503b17b2254d$exports from \"./pt-PT.mjs\";\nimport $8bdaeb71e50c3e1a$exports from \"./ro-RO.mjs\";\nimport $ec2b852dd7c3d1f2$exports from \"./ru-RU.mjs\";\nimport $79e6d900d6a4f82d$exports from \"./sk-SK.mjs\";\nimport $f4c1f0d5d4d03d80$exports from \"./sl-SI.mjs\";\nimport $46252cd87269b10b$exports from \"./sr-SP.mjs\";\nimport $d4d5d8dab362555c$exports from \"./sv-SE.mjs\";\nimport $3d55d1f97c377e83$exports from \"./tr-TR.mjs\";\nimport $5368512f1c703a3f$exports from \"./uk-UA.mjs\";\nimport $f1316b1074463583$exports from \"./zh-CN.mjs\";\nimport $7e60654723031b6f$exports from \"./zh-TW.mjs\";\nimport { getNthItem as $cVkRF$getNthItem, getChildNodes as $cVkRF$getChildNodes, getLastItem as $cVkRF$getLastItem, getFirstItem as $cVkRF$getFirstItem } from \"@react-stately/collections\";\nimport { Rect as $cVkRF$Rect } from \"@react-stately/virtualizer\";\nimport { useId as $cVkRF$useId, filterDOMProps as $cVkRF$filterDOMProps, mergeProps as $cVkRF$mergeProps, useUpdateEffect as $cVkRF$useUpdateEffect, useDescription as $cVkRF$useDescription, scrollIntoViewport as $cVkRF$scrollIntoViewport, getScrollParent as $cVkRF$getScrollParent } from \"@react-aria/utils\";\nimport { useMemo as $cVkRF$useMemo, useCallback as $cVkRF$useCallback, useRef as $cVkRF$useRef } from \"react\";\nimport { useCollator as $cVkRF$useCollator, useLocale as $cVkRF$useLocale, useLocalizedStringFormatter as $cVkRF$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useHasTabbableChild as $cVkRF$useHasTabbableChild, getFocusableTreeWalker as $cVkRF$getFocusableTreeWalker, focusSafely as $cVkRF$focusSafely } from \"@react-aria/focus\";\nimport { useSelectableCollection as $cVkRF$useSelectableCollection, useSelectableItem as $cVkRF$useSelectableItem } from \"@react-aria/selection\";\nimport { announce as $cVkRF$announce } from \"@react-aria/live-announcer\";\nimport { useInteractionModality as $cVkRF$useInteractionModality, isFocusVisible as $cVkRF$isFocusVisible } from \"@react-aria/interactions\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\nvar $d1c300d9c497e402$export$de9feff04fda126e = /*#__PURE__*/function () {\n  function $d1c300d9c497e402$export$de9feff04fda126e(options) {\n    _classCallCheck(this, $d1c300d9c497e402$export$de9feff04fda126e);\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || \"row\";\n  }\n  _createClass($d1c300d9c497e402$export$de9feff04fda126e, [{\n    key: \"isCell\",\n    value: function isCell(node) {\n      return node.type === \"cell\";\n    }\n  }, {\n    key: \"isRow\",\n    value: function isRow(node) {\n      return node.type === \"row\" || node.type === \"item\";\n    }\n  }, {\n    key: \"findPreviousKey\",\n    value: function findPreviousKey(fromKey, pred) {\n      var key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();\n      while (key != null) {\n        var item = this.collection.getItem(key);\n        if (!this.disabledKeys.has(key) && (!pred || pred(item))) return key;\n        key = this.collection.getKeyBefore(key);\n      }\n    }\n  }, {\n    key: \"findNextKey\",\n    value: function findNextKey(fromKey, pred) {\n      var key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();\n      while (key != null) {\n        var item = this.collection.getItem(key);\n        if (!this.disabledKeys.has(key) && (!pred || pred(item))) return key;\n        key = this.collection.getKeyAfter(key);\n      }\n    }\n  }, {\n    key: \"getKeyBelow\",\n    value: function getKeyBelow(key) {\n      var startItem = this.collection.getItem(key);\n      if (!startItem) return;\n      // If focus was on a cell, start searching from the parent row\n      if (this.isCell(startItem)) key = startItem.parentKey;\n      // Find the next item\n      key = this.findNextKey(key);\n      if (key != null) {\n        // If focus was on a cell, focus the cell with the same index in the next row.\n        if (this.isCell(startItem)) {\n          var item = this.collection.getItem(key);\n          return (0, $cVkRF$getNthItem)((0, $cVkRF$getChildNodes)(item, this.collection), startItem.index).key;\n        }\n        // Otherwise, focus the next row\n        if (this.focusMode === \"row\") return key;\n      }\n    }\n  }, {\n    key: \"getKeyAbove\",\n    value: function getKeyAbove(key) {\n      var startItem = this.collection.getItem(key);\n      if (!startItem) return;\n      // If focus is on a cell, start searching from the parent row\n      if (this.isCell(startItem)) key = startItem.parentKey;\n      // Find the previous item\n      key = this.findPreviousKey(key);\n      if (key != null) {\n        // If focus was on a cell, focus the cell with the same index in the previous row.\n        if (this.isCell(startItem)) {\n          var item = this.collection.getItem(key);\n          return (0, $cVkRF$getNthItem)((0, $cVkRF$getChildNodes)(item, this.collection), startItem.index).key;\n        }\n        // Otherwise, focus the previous row\n        if (this.focusMode === \"row\") return key;\n      }\n    }\n  }, {\n    key: \"getKeyRightOf\",\n    value: function getKeyRightOf(key) {\n      var item = this.collection.getItem(key);\n      if (!item) return;\n      // If focus is on a row, focus the first child cell.\n      if (this.isRow(item)) {\n        var children = (0, $cVkRF$getChildNodes)(item, this.collection);\n        return this.direction === \"rtl\" ? (0, $cVkRF$getLastItem)(children).key : (0, $cVkRF$getFirstItem)(children).key;\n      }\n      // If focus is on a cell, focus the next cell if any,\n      // otherwise focus the parent row.\n      if (this.isCell(item)) {\n        var parent = this.collection.getItem(item.parentKey);\n        var _children = (0, $cVkRF$getChildNodes)(parent, this.collection);\n        var next = this.direction === \"rtl\" ? (0, $cVkRF$getNthItem)(_children, item.index - 1) : (0, $cVkRF$getNthItem)(_children, item.index + 1);\n        if (next) return next.key;\n        // focus row only if focusMode is set to row\n        if (this.focusMode === \"row\") return item.parentKey;\n        return this.direction === \"rtl\" ? this.getFirstKey(key) : this.getLastKey(key);\n      }\n    }\n  }, {\n    key: \"getKeyLeftOf\",\n    value: function getKeyLeftOf(key) {\n      var item = this.collection.getItem(key);\n      if (!item) return;\n      // If focus is on a row, focus the last child cell.\n      if (this.isRow(item)) {\n        var children = (0, $cVkRF$getChildNodes)(item, this.collection);\n        return this.direction === \"rtl\" ? (0, $cVkRF$getFirstItem)(children).key : (0, $cVkRF$getLastItem)(children).key;\n      }\n      // If focus is on a cell, focus the previous cell if any,\n      // otherwise focus the parent row.\n      if (this.isCell(item)) {\n        var parent = this.collection.getItem(item.parentKey);\n        var _children2 = (0, $cVkRF$getChildNodes)(parent, this.collection);\n        var prev = this.direction === \"rtl\" ? (0, $cVkRF$getNthItem)(_children2, item.index + 1) : (0, $cVkRF$getNthItem)(_children2, item.index - 1);\n        if (prev) return prev.key;\n        // focus row only if focusMode is set to row\n        if (this.focusMode === \"row\") return item.parentKey;\n        return this.direction === \"rtl\" ? this.getLastKey(key) : this.getFirstKey(key);\n      }\n    }\n  }, {\n    key: \"getFirstKey\",\n    value: function getFirstKey(key, global) {\n      var item;\n      if (key != null) {\n        item = this.collection.getItem(key);\n        if (!item) return;\n        // If global flag is not set, and a cell is currently focused,\n        // move focus to the first cell in the parent row.\n        if (this.isCell(item) && !global) {\n          var parent = this.collection.getItem(item.parentKey);\n          return (0, $cVkRF$getFirstItem)((0, $cVkRF$getChildNodes)(parent, this.collection)).key;\n        }\n      }\n      // Find the first row\n      key = this.findNextKey();\n      // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n      if (key != null && item && this.isCell(item) && global || this.focusMode === \"cell\") {\n        var _item = this.collection.getItem(key);\n        key = (0, $cVkRF$getFirstItem)((0, $cVkRF$getChildNodes)(_item, this.collection)).key;\n      }\n      // Otherwise, focus the row itself.\n      return key;\n    }\n  }, {\n    key: \"getLastKey\",\n    value: function getLastKey(key, global) {\n      var item;\n      if (key != null) {\n        item = this.collection.getItem(key);\n        if (!item) return;\n        // If global flag is not set, and a cell is currently focused,\n        // move focus to the last cell in the parent row.\n        if (this.isCell(item) && !global) {\n          var parent = this.collection.getItem(item.parentKey);\n          var children = (0, $cVkRF$getChildNodes)(parent, this.collection);\n          return (0, $cVkRF$getLastItem)(children).key;\n        }\n      }\n      // Find the last row\n      key = this.findPreviousKey();\n      // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n      if (key != null && item && this.isCell(item) && global || this.focusMode === \"cell\") {\n        var _item2 = this.collection.getItem(key);\n        var _children3 = (0, $cVkRF$getChildNodes)(_item2, this.collection);\n        key = (0, $cVkRF$getLastItem)(_children3).key;\n      }\n      // Otherwise, focus the row itself.\n      return key;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.ref.current.querySelector(\"[data-key=\\\"\".concat(CSS.escape(key.toString()), \"\\\"]\"));\n    }\n  }, {\n    key: \"getItemRect\",\n    value: function getItemRect(key) {\n      var _this_layout_getLayoutInfo;\n      if (this.layout) return (_this_layout_getLayoutInfo = this.layout.getLayoutInfo(key)) === null || _this_layout_getLayoutInfo === void 0 ? void 0 : _this_layout_getLayoutInfo.rect;\n      var item = this.getItem(key);\n      if (item) return new (0, $cVkRF$Rect)(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }, {\n    key: \"getPageHeight\",\n    value: function getPageHeight() {\n      var _this_layout_virtualizer, _this_ref_current, _this_ref;\n      if (this.layout) return (_this_layout_virtualizer = this.layout.virtualizer) === null || _this_layout_virtualizer === void 0 ? void 0 : _this_layout_virtualizer.visibleRect.height;\n      return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.offsetHeight;\n    }\n  }, {\n    key: \"getContentHeight\",\n    value: function getContentHeight() {\n      var _this_ref_current, _this_ref;\n      if (this.layout) return this.layout.getContentSize().height;\n      return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.scrollHeight;\n    }\n  }, {\n    key: \"getKeyPageAbove\",\n    value: function getKeyPageAbove(key) {\n      var itemRect = this.getItemRect(key);\n      if (!itemRect) return null;\n      var pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n      while (itemRect && itemRect.y > pageY) {\n        key = this.getKeyAbove(key);\n        itemRect = this.getItemRect(key);\n      }\n      return key;\n    }\n  }, {\n    key: \"getKeyPageBelow\",\n    value: function getKeyPageBelow(key) {\n      var itemRect = this.getItemRect(key);\n      if (!itemRect) return null;\n      var pageHeight = this.getPageHeight();\n      var pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n      while (itemRect && itemRect.maxY < pageY) {\n        var nextKey = this.getKeyBelow(key);\n        itemRect = this.getItemRect(nextKey);\n        // Guard against case where maxY of the last key is barely less than pageY due to rounding\n        // and thus it attempts to set key to null\n        if (nextKey != null) key = nextKey;\n      }\n      return key;\n    }\n  }, {\n    key: \"getKeyForSearch\",\n    value: function getKeyForSearch(search, fromKey) {\n      if (!this.collator) return null;\n      var collection = this.collection;\n      var key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n      // If the starting key is a cell, search from its parent row.\n      var startItem = collection.getItem(key);\n      if (startItem.type === \"cell\") key = startItem.parentKey;\n      var hasWrapped = false;\n      while (key != null) {\n        var item = collection.getItem(key);\n        // check row text value for match\n        if (item.textValue) {\n          var substring = item.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            if (this.isRow(item) && this.focusMode === \"cell\") return (0, $cVkRF$getFirstItem)((0, $cVkRF$getChildNodes)(item, this.collection)).key;\n            return item.key;\n          }\n        }\n        key = this.findNextKey(key);\n        // Wrap around when reaching the end of the collection\n        if (key == null && !hasWrapped) {\n          key = this.getFirstKey();\n          hasWrapped = true;\n        }\n      }\n      return null;\n    }\n  }]);\n  return $d1c300d9c497e402$export$de9feff04fda126e;\n}();\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nvar $1af922eb41e03c8f$export$e6235c0d09b995d0 = new WeakMap();\n\n/*\r\n * Copyright 2022 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nvar $835c96616a7cb4f9$exports = {};\n$835c96616a7cb4f9$exports = {\n  \"ar-AE\": $682989befd4f478d$exports,\n  \"bg-BG\": $f7fca02019afd941$exports,\n  \"cs-CZ\": $8f86f40be75387f1$exports,\n  \"da-DK\": $db24ba43c8d652ee$exports,\n  \"de-DE\": $f8f1e72c8b5447d6$exports,\n  \"el-GR\": $9a73ed2983c3ab0b$exports,\n  \"en-US\": $583de0b3587601b9$exports,\n  \"es-ES\": $147159c978043442$exports,\n  \"et-EE\": $5cbb62c8a19173ac$exports,\n  \"fi-FI\": $a33d71dc804cc59e$exports,\n  \"fr-FR\": $92d800447793d084$exports,\n  \"he-IL\": $fe732cdb32124ea8$exports,\n  \"hr-HR\": $e41234e934efb4f5$exports,\n  \"hu-HU\": $1b0393182473bf9e$exports,\n  \"it-IT\": $2eed782c1c110ce7$exports,\n  \"ja-JP\": $8b5d459f86e9b23c$exports,\n  \"ko-KR\": $1949c3ad17295fd4$exports,\n  \"lt-LT\": $f5e3df4dc8aa7b54$exports,\n  \"lv-LV\": $9dd86690a5c2b2c5$exports,\n  \"nb-NO\": $843964c3bf9a7d24$exports,\n  \"nl-NL\": $73f50e845f9ef3b4$exports,\n  \"pl-PL\": $87f92a7e077514b2$exports,\n  \"pt-BR\": $c28c98d58ee9ff6f$exports,\n  \"pt-PT\": $b6b1503b17b2254d$exports,\n  \"ro-RO\": $8bdaeb71e50c3e1a$exports,\n  \"ru-RU\": $ec2b852dd7c3d1f2$exports,\n  \"sk-SK\": $79e6d900d6a4f82d$exports,\n  \"sl-SI\": $f4c1f0d5d4d03d80$exports,\n  \"sr-SP\": $46252cd87269b10b$exports,\n  \"sv-SE\": $d4d5d8dab362555c$exports,\n  \"tr-TR\": $3d55d1f97c377e83$exports,\n  \"uk-UA\": $5368512f1c703a3f$exports,\n  \"zh-CN\": $f1316b1074463583$exports,\n  \"zh-TW\": $7e60654723031b6f$exports\n};\nfunction $92599c3fd427b763$export$137e594ef3218a10(props, state) {\n  var _props$getRowText = props.getRowText,\n    getRowText = _props$getRowText === void 0 ? function (key) {\n      var _state_collection_getTextValue, _state_collection, _state_collection_getItem;\n      var _state_collection_getTextValue1;\n      return (_state_collection_getTextValue1 = (_state_collection_getTextValue = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue === void 0 ? void 0 : _state_collection_getTextValue.call(_state_collection, key)) !== null && _state_collection_getTextValue1 !== void 0 ? _state_collection_getTextValue1 : (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;\n    } : _props$getRowText;\n  var stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($835c96616a7cb4f9$exports)), \"@react-aria/grid\");\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  var selection = state.selectionManager.rawSelection;\n  var lastSelection = (0, $cVkRF$useRef)(selection);\n  (0, $cVkRF$useUpdateEffect)(function () {\n    var _lastSelection_current;\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n      return;\n    }\n    var addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);\n    var removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);\n    // If adding or removing a single row from the selection, announce the name of that item.\n    var isReplace = state.selectionManager.selectionBehavior === \"replace\";\n    var messages = [];\n    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        var currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) messages.push(stringFormatter.format(\"selectedItem\", {\n          item: currentSelectionText\n        }));\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      var addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) messages.push(stringFormatter.format(\"selectedItem\", {\n        item: addedText\n      }));\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        var removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) messages.push(stringFormatter.format(\"deselectedItem\", {\n          item: removedText\n        }));\n      }\n    }\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === \"multiple\") {\n      if (messages.length === 0 || selection === \"all\" || selection.size > 1 || lastSelection.current === \"all\" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1) messages.push(selection === \"all\" ? stringFormatter.format(\"selectedAll\") : stringFormatter.format(\"selectedCount\", {\n        count: selection.size\n      }));\n    }\n    if (messages.length > 0) (0, $cVkRF$announce)(messages.join(\" \"));\n    lastSelection.current = selection;\n  }, [selection]);\n}\nfunction $92599c3fd427b763$var$diffSelection(a, b) {\n  var res = new Set();\n  if (a === \"all\" || b === \"all\") return res;\n  var _iterator = _createForOfIteratorHelper(a.keys()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      if (!b.has(key)) res.add(key);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return res;\n}\n\n/*\r\n * Copyright 2021 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {\n  var stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($835c96616a7cb4f9$exports)), \"@react-aria/grid\");\n  var modality = (0, $cVkRF$useInteractionModality)();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  var shouldLongPress = (modality === \"pointer\" || modality === \"virtual\" || modality == null) && typeof window !== \"undefined\" && \"ontouchstart\" in window;\n  var interactionDescription = (0, $cVkRF$useMemo)(function () {\n    var selectionMode = props.selectionManager.selectionMode;\n    var selectionBehavior = props.selectionManager.selectionBehavior;\n    var message = undefined;\n    if (shouldLongPress) message = stringFormatter.format(\"longPressToSelect\");\n    return selectionBehavior === \"replace\" && selectionMode !== \"none\" && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n  var descriptionProps = (0, $cVkRF$useDescription)(interactionDescription);\n  return descriptionProps;\n}\nfunction $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {\n  var isVirtualized = props.isVirtualized,\n    keyboardDelegate = props.keyboardDelegate,\n    focusMode = props.focusMode,\n    scrollRef = props.scrollRef,\n    getRowText = props.getRowText,\n    onRowAction = props.onRowAction,\n    onCellAction = props.onCellAction;\n  var manager = state.selectionManager;\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) console.warn(\"An aria-label or aria-labelledby prop is required for accessibility.\");\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  var collator = (0, $cVkRF$useCollator)({\n    usage: \"search\",\n    sensitivity: \"base\"\n  });\n  var _ref = (0, $cVkRF$useLocale)(),\n    direction = _ref.direction;\n  var disabledBehavior = state.selectionManager.disabledBehavior;\n  var delegate = (0, $cVkRF$useMemo)(function () {\n    return keyboardDelegate || new (0, $d1c300d9c497e402$export$de9feff04fda126e)({\n      collection: state.collection,\n      disabledKeys: disabledBehavior === \"selection\" ? new Set() : state.disabledKeys,\n      ref: ref,\n      direction: direction,\n      collator: collator,\n      focusMode: focusMode\n    });\n  }, [keyboardDelegate, state.collection, state.disabledKeys, disabledBehavior, ref, direction, collator, focusMode]);\n  var _ref2 = (0, $cVkRF$useSelectableCollection)({\n      ref: ref,\n      selectionManager: manager,\n      keyboardDelegate: delegate,\n      isVirtualized: isVirtualized,\n      scrollRef: scrollRef\n    }),\n    collectionProps = _ref2.collectionProps;\n  var id = (0, $cVkRF$useId)(props.id);\n  (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).set(state, {\n    keyboardDelegate: delegate,\n    actions: {\n      onRowAction: onRowAction,\n      onCellAction: onCellAction\n    }\n  });\n  var descriptionProps = (0, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2)({\n    selectionManager: manager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n  var domProps = (0, $cVkRF$filterDOMProps)(props, {\n    labelable: true\n  });\n  var onFocus = (0, $cVkRF$useCallback)(function (e) {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) manager.setFocused(false);\n      return;\n    }\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) return;\n    manager.setFocused(true);\n  }, [manager]);\n  // Continue to track collection focused state even if keyboard navigation is disabled\n  var navDisabledHandlers = (0, $cVkRF$useMemo)(function () {\n    return {\n      onBlur: collectionProps.onBlur,\n      onFocus: onFocus\n    };\n  }, [onFocus, collectionProps.onBlur]);\n  var hasTabbableChild = (0, $cVkRF$useHasTabbableChild)(ref, {\n    isDisabled: state.collection.size !== 0\n  });\n  var gridProps = (0, $cVkRF$mergeProps)(domProps, {\n    role: \"grid\",\n    id: id,\n    \"aria-multiselectable\": manager.selectionMode === \"multiple\" ? \"true\" : undefined\n  }, state.isKeyboardNavigationDisabled ? navDisabledHandlers : collectionProps,\n  // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.\n  state.collection.size === 0 && {\n    tabIndex: hasTabbableChild ? -1 : 0\n  }, descriptionProps);\n  if (isVirtualized) {\n    gridProps[\"aria-rowcount\"] = state.collection.size;\n    gridProps[\"aria-colcount\"] = state.collection.columnCount;\n  }\n  (0, $92599c3fd427b763$export$137e594ef3218a10)({\n    getRowText: getRowText\n  }, state);\n  return {\n    gridProps: gridProps\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nfunction $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {\n  return {\n    rowGroupProps: {\n      role: \"rowgroup\"\n    }\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  var node = props.node,\n    isVirtualized = props.isVirtualized,\n    shouldSelectOnPressUp = props.shouldSelectOnPressUp,\n    onAction = props.onAction;\n  var _get = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state),\n    onRowAction = _get.actions.onRowAction;\n  var _ref3 = (0, $cVkRF$useSelectableItem)({\n      selectionManager: state.selectionManager,\n      key: node.key,\n      ref: ref,\n      isVirtualized: isVirtualized,\n      shouldSelectOnPressUp: shouldSelectOnPressUp,\n      onAction: onRowAction ? function () {\n        return onRowAction(node.key);\n      } : onAction,\n      isDisabled: state.collection.size === 0\n    }),\n    itemProps = _ref3.itemProps,\n    states = _objectWithoutProperties(_ref3, _excluded);\n  var isSelected = state.selectionManager.isSelected(node.key);\n  var rowProps = _objectSpread({\n    role: \"row\",\n    \"aria-selected\": state.selectionManager.selectionMode !== \"none\" ? isSelected : undefined,\n    \"aria-disabled\": states.isDisabled || undefined\n  }, itemProps);\n  if (isVirtualized) rowProps[\"aria-rowindex\"] = node.index + 1; // aria-rowindex is 1 based\n  return _objectSpread({\n    rowProps: rowProps\n  }, states);\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {\n  var node = props.node,\n    isVirtualized = props.isVirtualized,\n    _props$focusMode = props.focusMode,\n    focusMode = _props$focusMode === void 0 ? \"child\" : _props$focusMode,\n    shouldSelectOnPressUp = props.shouldSelectOnPressUp,\n    onAction = props.onAction;\n  var _ref4 = (0, $cVkRF$useLocale)(),\n    direction = _ref4.direction;\n  var _get2 = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state),\n    keyboardDelegate = _get2.keyboardDelegate,\n    onCellAction = _get2.actions.onCellAction;\n  // We need to track the key of the item at the time it was last focused so that we force\n  // focus to go to the item when the DOM node is reused for a different item in a virtualizer.\n  var keyWhenFocused = (0, $cVkRF$useRef)(null);\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  var focus = function focus() {\n    var treeWalker = (0, $cVkRF$getFocusableTreeWalker)(ref.current);\n    if (focusMode === \"child\") {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) return;\n      var focusable = state.selectionManager.childFocusStrategy === \"last\" ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();\n      if (focusable) {\n        (0, $cVkRF$focusSafely)(focusable);\n        return;\n      }\n    }\n    if (keyWhenFocused.current != null && node.key !== keyWhenFocused.current || !ref.current.contains(document.activeElement)) (0, $cVkRF$focusSafely)(ref.current);\n  };\n  var _ref5 = (0, $cVkRF$useSelectableItem)({\n      selectionManager: state.selectionManager,\n      key: node.key,\n      ref: ref,\n      isVirtualized: isVirtualized,\n      focus: focus,\n      shouldSelectOnPressUp: shouldSelectOnPressUp,\n      onAction: onCellAction ? function () {\n        return onCellAction(node.key);\n      } : onAction,\n      isDisabled: state.collection.size === 0\n    }),\n    itemProps = _ref5.itemProps,\n    isPressed = _ref5.isPressed;\n  var onKeyDownCapture = function onKeyDownCapture(e) {\n    if (!e.currentTarget.contains(e.target) || state.isKeyboardNavigationDisabled) return;\n    var walker = (0, $cVkRF$getFocusableTreeWalker)(ref.current);\n    walker.currentNode = document.activeElement;\n    switch (e.key) {\n      case \"ArrowLeft\":\n        {\n          // Find the next focusable element within the cell.\n          var focusable = direction === \"rtl\" ? walker.nextNode() : walker.previousNode();\n          // Don't focus the cell itself if focusMode is \"child\"\n          if (focusMode === \"child\" && focusable === ref.current) focusable = null;\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            (0, $cVkRF$focusSafely)(focusable);\n            (0, $cVkRF$scrollIntoViewport)(focusable, {\n              containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n            });\n          } else {\n            // If there is no next focusable child, then move to the next cell to the left of this one.\n            // This will be handled by useSelectableCollection. However, if there is no cell to the left\n            // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n            // same as this one. In that case we need to handle focusing either the cell or the first/last\n            // child, depending on the focus mode.\n            var prev = keyboardDelegate.getKeyLeftOf(node.key);\n            if (prev !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === \"cell\" && direction === \"rtl\") {\n              (0, $cVkRF$focusSafely)(ref.current);\n              (0, $cVkRF$scrollIntoViewport)(ref.current, {\n                containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n              });\n            } else {\n              walker.currentNode = ref.current;\n              focusable = direction === \"rtl\" ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);\n              if (focusable) {\n                (0, $cVkRF$focusSafely)(focusable);\n                (0, $cVkRF$scrollIntoViewport)(focusable, {\n                  containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n                });\n              }\n            }\n          }\n          break;\n        }\n      case \"ArrowRight\":\n        {\n          var _focusable = direction === \"rtl\" ? walker.previousNode() : walker.nextNode();\n          if (focusMode === \"child\" && _focusable === ref.current) _focusable = null;\n          if (_focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            (0, $cVkRF$focusSafely)(_focusable);\n            (0, $cVkRF$scrollIntoViewport)(_focusable, {\n              containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n            });\n          } else {\n            var next = keyboardDelegate.getKeyRightOf(node.key);\n            if (next !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === \"cell\" && direction === \"ltr\") {\n              (0, $cVkRF$focusSafely)(ref.current);\n              (0, $cVkRF$scrollIntoViewport)(ref.current, {\n                containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n              });\n            } else {\n              walker.currentNode = ref.current;\n              _focusable = direction === \"rtl\" ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();\n              if (_focusable) {\n                (0, $cVkRF$focusSafely)(_focusable);\n                (0, $cVkRF$scrollIntoViewport)(_focusable, {\n                  containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n                });\n              }\n            }\n          }\n          break;\n        }\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));\n        }\n        break;\n    }\n  };\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  var onFocus = function onFocus(e) {\n    keyWhenFocused.current = node.key;\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!(0, $cVkRF$isFocusVisible)()) state.selectionManager.setFocusedKey(node.key);\n      return;\n    }\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(function () {\n      if (focusMode === \"child\" && document.activeElement === ref.current) focus();\n    });\n  };\n  var gridCellProps = (0, $cVkRF$mergeProps)(itemProps, {\n    role: \"gridcell\",\n    onKeyDownCapture: onKeyDownCapture,\n    onFocus: onFocus\n  });\n  var _node_colIndex;\n  if (isVirtualized) gridCellProps[\"aria-colindex\"] = ((_node_colIndex = node.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node.index) + 1; // aria-colindex is 1-based\n  // When pressing with a pointer and cell selection is not enabled, usePress will be applied to the\n  // row rather than the cell. However, when the row is draggable, usePress cannot preventDefault\n  // on pointer down, so the browser will try to focus the cell which has a tabIndex applied.\n  // To avoid this, remove the tabIndex from the cell briefly on pointer down.\n  if (shouldSelectOnPressUp && gridCellProps.tabIndex != null && gridCellProps.onPointerDown == null) gridCellProps.onPointerDown = function (e) {\n    var el = e.currentTarget;\n    var tabindex = el.getAttribute(\"tabindex\");\n    el.removeAttribute(\"tabindex\");\n    requestAnimationFrame(function () {\n      el.setAttribute(\"tabindex\", tabindex);\n    });\n  };\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\nfunction $ab90dcbc1b5466d0$var$last(walker) {\n  var next;\n  var last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n  var key = props.key;\n  var manager = state.selectionManager;\n  var checkboxId = (0, $cVkRF$useId)();\n  var isDisabled = !state.selectionManager.canSelectItem(key);\n  var isSelected = state.selectionManager.isSelected(key);\n  var onChange = function onChange() {\n    return manager.select(key);\n  };\n  var stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($835c96616a7cb4f9$exports)), \"@react-aria/grid\");\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      \"aria-label\": stringFormatter.format(\"select\"),\n      isSelected: isSelected,\n      isDisabled: isDisabled,\n      onChange: onChange\n    }\n  };\n}\nexport { $d1c300d9c497e402$export$de9feff04fda126e as GridKeyboardDelegate, $83c6e2eafa584c67$export$f6b86a04e5d66d90 as useGrid, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf as useGridRowGroup, $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c as useGridCell, $7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2 as useHighlightSelectionDescription, $92599c3fd427b763$export$137e594ef3218a10 as useGridSelectionAnnouncement };","map":{"version":3,"names":["$d1c300d9c497e402$export$de9feff04fda126e","options","_classCallCheck","collection","disabledKeys","ref","direction","collator","layout","focusMode","_createClass","key","value","isCell","node","type","isRow","findPreviousKey","fromKey","pred","getKeyBefore","getLastKey","item","getItem","has","findNextKey","getKeyAfter","getFirstKey","getKeyBelow","startItem","parentKey","$cVkRF$getNthItem","$cVkRF$getChildNodes","index","getKeyAbove","getKeyRightOf","children","$cVkRF$getLastItem","$cVkRF$getFirstItem","parent","next","getKeyLeftOf","prev","global","current","querySelector","concat","CSS","escape","toString","getItemRect","_this_layout_getLayoutInfo","getLayoutInfo","rect","$cVkRF$Rect","offsetLeft","offsetTop","offsetWidth","offsetHeight","getPageHeight","_this_layout_virtualizer","_this_ref_current","_this_ref","virtualizer","visibleRect","height","getContentHeight","getContentSize","scrollHeight","getKeyPageAbove","itemRect","pageY","Math","max","maxY","y","getKeyPageBelow","pageHeight","min","nextKey","getKeyForSearch","search","hasWrapped","textValue","substring","slice","length","compare","$1af922eb41e03c8f$export$e6235c0d09b995d0","WeakMap","$835c96616a7cb4f9$exports","$682989befd4f478d$exports","$f7fca02019afd941$exports","$8f86f40be75387f1$exports","$db24ba43c8d652ee$exports","$f8f1e72c8b5447d6$exports","$9a73ed2983c3ab0b$exports","$583de0b3587601b9$exports","$147159c978043442$exports","$5cbb62c8a19173ac$exports","$a33d71dc804cc59e$exports","$92d800447793d084$exports","$fe732cdb32124ea8$exports","$e41234e934efb4f5$exports","$1b0393182473bf9e$exports","$2eed782c1c110ce7$exports","$8b5d459f86e9b23c$exports","$1949c3ad17295fd4$exports","$f5e3df4dc8aa7b54$exports","$9dd86690a5c2b2c5$exports","$843964c3bf9a7d24$exports","$73f50e845f9ef3b4$exports","$87f92a7e077514b2$exports","$c28c98d58ee9ff6f$exports","$b6b1503b17b2254d$exports","$8bdaeb71e50c3e1a$exports","$ec2b852dd7c3d1f2$exports","$79e6d900d6a4f82d$exports","$f4c1f0d5d4d03d80$exports","$46252cd87269b10b$exports","$d4d5d8dab362555c$exports","$3d55d1f97c377e83$exports","$5368512f1c703a3f$exports","$f1316b1074463583$exports","$7e60654723031b6f$exports","$92599c3fd427b763$export$137e594ef3218a10","props","state","_props$getRowText","getRowText","_state_collection_getTextValue","_state_collection","_state_collection_getItem","_state_collection_getTextValue1","getTextValue","call","stringFormatter","$cVkRF$useLocalizedStringFormatter","$parcel$interopDefault","selection","selectionManager","rawSelection","lastSelection","$cVkRF$useRef","$cVkRF$useUpdateEffect","_lastSelection_current","isFocused","addedKeys","$92599c3fd427b763$var$diffSelection","removedKeys","isReplace","selectionBehavior","messages","selectedKeys","size","keys","currentSelectionText","push","format","addedText","removedText","selectionMode","count","$cVkRF$announce","join","a","b","res","Set","_iterator","_createForOfIteratorHelper","_step","s","n","done","add","err","e","f","$5b9b5b5723db6ae1$export$be42ebdab07ae4c2","modality","$cVkRF$useInteractionModality","shouldLongPress","window","interactionDescription","$cVkRF$useMemo","message","undefined","hasItemActions","descriptionProps","$cVkRF$useDescription","$83c6e2eafa584c67$export$f6b86a04e5d66d90","isVirtualized","keyboardDelegate","scrollRef","onRowAction","onCellAction","manager","console","warn","$cVkRF$useCollator","usage","sensitivity","_ref","$cVkRF$useLocale","disabledBehavior","delegate","_ref2","$cVkRF$useSelectableCollection","collectionProps","id","$cVkRF$useId","set","actions","domProps","$cVkRF$filterDOMProps","labelable","onFocus","$cVkRF$useCallback","currentTarget","contains","target","setFocused","navDisabledHandlers","onBlur","hasTabbableChild","$cVkRF$useHasTabbableChild","isDisabled","gridProps","$cVkRF$mergeProps","role","isKeyboardNavigationDisabled","tabIndex","columnCount","$e45487f8ba1cbdbf$export$d3037f5d3f3e51bf","rowGroupProps","$4159a7a9cbb0cc18$export$96357d5a73f686fa","shouldSelectOnPressUp","onAction","_get","get","_ref3","$cVkRF$useSelectableItem","itemProps","states","_objectWithoutProperties","_excluded","isSelected","rowProps","_objectSpread","$ab90dcbc1b5466d0$export$c7e10bfc0c59f67c","_props$focusMode","_ref4","_get2","keyWhenFocused","focus","treeWalker","$cVkRF$getFocusableTreeWalker","document","activeElement","focusable","childFocusStrategy","$ab90dcbc1b5466d0$var$last","firstChild","$cVkRF$focusSafely","_ref5","isPressed","onKeyDownCapture","walker","currentNode","nextNode","previousNode","preventDefault","stopPropagation","$cVkRF$scrollIntoViewport","containingElement","$cVkRF$getScrollParent","altKey","parentElement","dispatchEvent","KeyboardEvent","nativeEvent","$cVkRF$isFocusVisible","setFocusedKey","requestAnimationFrame","gridCellProps","_node_colIndex","colIndex","onPointerDown","el","tabindex","getAttribute","removeAttribute","setAttribute","last","lastChild","$7cb39d07f245a780$export$70e2eed1a92976ad","checkboxId","canSelectItem","onChange","select","checkboxProps"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\GridKeyboardDelegate.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGrid.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\utils.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridSelectionAnnouncement.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\*.js","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useHighlightSelectionDescription.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridRowGroup.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridRow.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridCell.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridSelectionCheckbox.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nexport {useGrid} from './useGrid';\nexport {useGridRowGroup} from './useGridRowGroup';\nexport {useGridRow} from './useGridRow';\nexport {useGridCell} from './useGridCell';\nexport {useGridSelectionCheckbox} from './useGridSelectionCheckbox';\nexport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nexport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\n\nexport type {GridProps, GridAria} from './useGrid';\nexport type {GridCellAria, GridCellProps} from './useGridCell';\nexport type {GridRowGroupAria} from './useGridRowGroup';\nexport type {GridRowProps, GridRowAria} from './useGridRow';\nexport type {GridKeyboardDelegateOptions} from './GridKeyboardDelegate';\nexport type {AriaGridSelectionCheckboxProps, GridSelectionCheckboxAria} from './useGridSelectionCheckbox';\nexport type {HighlightSelectionDescriptionProps} from './useHighlightSelectionDescription';\nexport type {GridSelectionAnnouncementProps} from './useGridSelectionAnnouncement';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, Key, KeyboardDelegate, Node} from '@react-types/shared';\nimport {getChildNodes, getFirstItem, getLastItem, getNthItem} from '@react-stately/collections';\nimport {GridCollection} from '@react-types/grid';\nimport {Layout, Rect} from '@react-stately/virtualizer';\nimport {RefObject} from 'react';\n\nexport interface GridKeyboardDelegateOptions<T, C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  ref?: RefObject<HTMLElement>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layout?: Layout<Node<T>>,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected ref: RefObject<HTMLElement>;\n  protected direction: Direction;\n  protected collator: Intl.Collator;\n  protected layout: Layout<Node<T>>;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<T, C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!this.disabledKeys.has(key) && (!pred || pred(item))) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!this.disabledKeys.has(key) && (!pred || pred(item))) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return getNthItem(getChildNodes(item, this.collection), startItem.index).key;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return getNthItem(getChildNodes(item, this.collection), startItem.index).key;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = getChildNodes(item, this.collection);\n      return this.direction === 'rtl'\n        ? getLastItem(children).key\n        : getFirstItem(children).key;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = getChildNodes(parent, this.collection);\n      let next = this.direction === 'rtl'\n        ? getNthItem(children, item.index - 1)\n        : getNthItem(children, item.index + 1);\n\n      if (next) {\n        return next.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = getChildNodes(item, this.collection);\n      return this.direction === 'rtl'\n        ? getFirstItem(children).key\n        : getLastItem(children).key;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = getChildNodes(parent, this.collection);\n      let prev = this.direction === 'rtl'\n        ? getNthItem(children, item.index + 1)\n        : getNthItem(children, item.index - 1);\n\n      if (prev) {\n        return prev.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return getFirstItem(getChildNodes(parent, this.collection)).key;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey();\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = getFirstItem(getChildNodes(item, this.collection)).key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = getChildNodes(parent, this.collection);\n        return getLastItem(children).key;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey();\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = getChildNodes(item, this.collection);\n      key = getLastItem(children).key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${CSS.escape(key.toString())}\"]`);\n  }\n\n  private getItemRect(key: Key): Rect {\n    if (this.layout) {\n      return this.layout.getLayoutInfo(key)?.rect;\n    }\n\n    let item = this.getItem(key);\n    if (item) {\n      return new Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }\n\n  private getPageHeight(): number {\n    if (this.layout) {\n      return this.layout.virtualizer?.visibleRect.height;\n    }\n\n    return this.ref?.current?.offsetHeight;\n  }\n\n  private getContentHeight(): number {\n    if (this.layout) {\n      return this.layout.getContentSize().height;\n    }\n\n    return this.ref?.current?.scrollHeight;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let itemRect = this.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) {\n        key = nextKey;\n      }\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return getFirstItem(getChildNodes(item, this.collection)).key;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, Key, KeyboardDelegate} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {RefObject, useCallback, useMemo} from 'react';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\nimport {useHasTabbableChild} from '@react-aria/focus';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    scrollRef,\n    getRowText,\n    onRowAction,\n    onCellAction\n  } = props;\n  let {selectionManager: manager} = state;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let disabledBehavior = state.selectionManager.disabledBehavior;\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: disabledBehavior === 'selection' ? new Set() : state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, disabledBehavior, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId(props.id);\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: manager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  let onFocus = useCallback((e) => {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) {\n        manager.setFocused(false);\n      }\n\n      return;\n    }\n\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    manager.setFocused(true);\n  }, [manager]);\n\n  // Continue to track collection focused state even if keyboard navigation is disabled\n  let navDisabledHandlers = useMemo(() => ({\n    onBlur: collectionProps.onBlur,\n    onFocus\n  }), [onFocus, collectionProps.onBlur]);\n\n  let hasTabbableChild = useHasTabbableChild(ref, {\n    isDisabled: state.collection.size !== 0\n  });\n\n  let gridProps: DOMAttributes = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': manager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    state.isKeyboardNavigationDisabled ? navDisabledHandlers : collectionProps,\n    // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.\n    state.collection.size === 0 && {tabIndex: hasTabbableChild ? -1 : 0},\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  useGridSelectionAnnouncement({getRowText}, state);\n  return {\n    gridProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport type {Key, KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction: (key: Key) => void,\n    onCellAction: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {Collection, Key, Node, Selection} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {SelectionManager} from '@react-stately/selection';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useRef} from 'react';\nimport {useUpdateEffect} from '@react-aria/utils';\n\nexport interface GridSelectionAnnouncementProps {\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string\n}\n\ninterface GridSelectionState<T> {\n  /** A collection of items in the grid. */\n  collection: Collection<Node<T>>,\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\nexport function useGridSelectionAnnouncement<T>(props: GridSelectionAnnouncementProps, state: GridSelectionState<T>) {\n  let {\n    getRowText = (key) => state.collection.getTextValue?.(key) ?? state.collection.getItem(key)?.textValue\n  } = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/grid');\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(stringFormatter.format('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(stringFormatter.format('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(stringFormatter.format('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? stringFormatter.format('selectedAll')\n          : stringFormatter.format('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n","const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface HighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: HighlightSelectionDescriptionProps): AriaLabelingProps {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/grid');\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message = undefined;\n    if (shouldLongPress) {\n      message = stringFormatter.format('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {RefObject} from 'react';\nimport {SelectableItemStates, useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: GridNode<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria extends SelectableItemStates {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<FocusableElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions: {onRowAction}} = gridMap.get(state);\n  let {itemProps, ...states} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: DOMAttributes = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    'aria-disabled': states.isDisabled || undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    ...states\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {getScrollParent, mergeProps, scrollIntoViewport} from '@react-aria/utils';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {KeyboardEvent as ReactKeyboardEvent, RefObject, useRef} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: GridNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<FocusableElement>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state);\n\n  // We need to track the key of the item at the time it was last focused so that we force\n  // focus to go to the item when the DOM node is reused for a different item in a virtualizer.\n  let keyWhenFocused = useRef(null);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) {\n        return;\n      }\n\n      let focusable = state.selectionManager.childFocusStrategy === 'last'\n        ? last(treeWalker)\n        : treeWalker.firstChild() as FocusableElement;\n      if (focusable) {\n        focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (\n      (keyWhenFocused.current != null && node.key !== keyWhenFocused.current) ||\n      !ref.current.contains(document.activeElement)\n    ) {\n      focusSafely(ref.current);\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let onKeyDownCapture = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as Element) || state.isKeyboardNavigationDisabled) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable = direction === 'rtl'\n          ? walker.nextNode() as FocusableElement\n          : walker.previousNode() as FocusableElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n          scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf(node.key);\n          if (prev !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n            scrollIntoViewport(ref.current, {containingElement: getScrollParent(ref.current)});\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as FocusableElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n              scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable = direction === 'rtl'\n          ? walker.previousNode() as FocusableElement\n          : walker.nextNode() as FocusableElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n          scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n        } else {\n          let next = keyboardDelegate.getKeyRightOf(node.key);\n          if (next !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n            scrollIntoViewport(ref.current, {containingElement: getScrollParent(ref.current)});\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as FocusableElement;\n            if (focusable) {\n              focusSafely(focusable);\n              scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as Element)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    keyWhenFocused.current = node.key;\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: DOMAttributes = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = (node.colIndex ?? node.index) + 1; // aria-colindex is 1-based\n  }\n\n  // When pressing with a pointer and cell selection is not enabled, usePress will be applied to the\n  // row rather than the cell. However, when the row is draggable, usePress cannot preventDefault\n  // on pointer down, so the browser will try to focus the cell which has a tabIndex applied.\n  // To avoid this, remove the tabIndex from the cell briefly on pointer down.\n  if (shouldSelectOnPressUp && gridCellProps.tabIndex != null && gridCellProps.onPointerDown == null) {\n    gridCellProps.onPointerDown = (e) => {\n      let el = e.currentTarget;\n      let tabindex = el.getAttribute('tabindex');\n      el.removeAttribute('tabindex');\n      requestAnimationFrame(() => {\n        el.setAttribute('tabindex', tabindex);\n      });\n    };\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from '@react-types/shared';\nimport {useId} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaGridSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface GridSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: AriaGridSelectionCheckboxProps, state: GridState<T, C>): GridSelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/grid');\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': stringFormatter.format('select'),\n      isSelected,\n      isDisabled,\n      onChange\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}