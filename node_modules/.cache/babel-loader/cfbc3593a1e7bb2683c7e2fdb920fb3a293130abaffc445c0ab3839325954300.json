{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"as\", \"children\", \"isLoaded\", \"className\", \"classNames\"];\n// src/use-skeleton.ts\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\nimport { skeleton } from \"@nextui-org/theme\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nfunction useSkeleton(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, skeleton.variantKeys);\n  const {\n      as,\n      children,\n      isLoaded = false,\n      className,\n      classNames\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  const Component = as || \"div\";\n  const slots = useMemo(() => skeleton(_objectSpread({}, variantProps)), [...Object.values(variantProps), children]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getSkeletonProps = function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"data-loaded\": dataAttr(isLoaded),\n      className: slots.base({\n        class: clsx(baseStyles, props2 == null ? void 0 : props2.className)\n      })\n    }, otherProps);\n  };\n  const getContentProps = function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      className: slots.content({\n        class: clsx(classNames == null ? void 0 : classNames.content, props2 == null ? void 0 : props2.className)\n      })\n    };\n  };\n  return {\n    Component,\n    children,\n    slots,\n    classNames,\n    getSkeletonProps,\n    getContentProps\n  };\n}\nexport { useSkeleton };","map":{"version":3,"names":["mapPropsVariants","skeleton","clsx","dataAttr","useMemo","useSkeleton","originalProps","props","variantProps","variantKeys","as","children","isLoaded","className","classNames","otherProps","_objectWithoutProperties","_excluded","Component","slots","_objectSpread","Object","values","baseStyles","base","getSkeletonProps","props2","arguments","length","undefined","class","getContentProps","content"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@nextui-org/skeleton/dist/chunk-Q572LSEI.mjs"],"sourcesContent":["// src/use-skeleton.ts\r\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\r\nimport { skeleton } from \"@nextui-org/theme\";\r\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\r\nimport { useMemo } from \"react\";\r\nfunction useSkeleton(originalProps) {\r\n  const [props, variantProps] = mapPropsVariants(originalProps, skeleton.variantKeys);\r\n  const { as, children, isLoaded = false, className, classNames, ...otherProps } = props;\r\n  const Component = as || \"div\";\r\n  const slots = useMemo(\r\n    () => skeleton({\r\n      ...variantProps\r\n    }),\r\n    [...Object.values(variantProps), children]\r\n  );\r\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\r\n  const getSkeletonProps = (props2 = {}) => {\r\n    return {\r\n      \"data-loaded\": dataAttr(isLoaded),\r\n      className: slots.base({ class: clsx(baseStyles, props2 == null ? void 0 : props2.className) }),\r\n      ...otherProps\r\n    };\r\n  };\r\n  const getContentProps = (props2 = {}) => {\r\n    return {\r\n      className: slots.content({ class: clsx(classNames == null ? void 0 : classNames.content, props2 == null ? void 0 : props2.className) })\r\n    };\r\n  };\r\n  return { Component, children, slots, classNames, getSkeletonProps, getContentProps };\r\n}\r\n\r\nexport {\r\n  useSkeleton\r\n};\r\n"],"mappings":";;;AAAA;AACA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,0BAA0B;AACzD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,WAAWA,CAACC,aAAa,EAAE;EAClC,MAAM,CAACC,KAAK,EAAEC,YAAY,CAAC,GAAGR,gBAAgB,CAACM,aAAa,EAAEL,QAAQ,CAACQ,WAAW,CAAC;EACnF,MAAM;MAAEC,EAAE;MAAEC,QAAQ;MAAEC,QAAQ,GAAG,KAAK;MAAEC,SAAS;MAAEC;IAA0B,CAAC,GAAGP,KAAK;IAApBQ,UAAU,GAAAC,wBAAA,CAAKT,KAAK,EAAAU,SAAA;EACtF,MAAMC,SAAS,GAAGR,EAAE,IAAI,KAAK;EAC7B,MAAMS,KAAK,GAAGf,OAAO,CACnB,MAAMH,QAAQ,CAAAmB,aAAA,KACTZ,YAAY,CAChB,CAAC,EACF,CAAC,GAAGa,MAAM,CAACC,MAAM,CAACd,YAAY,CAAC,EAAEG,QAAQ,CAC3C,CAAC;EACD,MAAMY,UAAU,GAAGrB,IAAI,CAACY,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACU,IAAI,EAAEX,SAAS,CAAC;EACjF,MAAMY,gBAAgB,GAAG,SAAAA,CAAA,EAAiB;IAAA,IAAhBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACnC,OAAAP,aAAA;MACE,aAAa,EAAEjB,QAAQ,CAACS,QAAQ,CAAC;MACjCC,SAAS,EAAEM,KAAK,CAACK,IAAI,CAAC;QAAEM,KAAK,EAAE5B,IAAI,CAACqB,UAAU,EAAEG,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACb,SAAS;MAAE,CAAC;IAAC,GAC3FE,UAAU;EAEjB,CAAC;EACD,MAAMgB,eAAe,GAAG,SAAAA,CAAA,EAAiB;IAAA,IAAhBL,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAClC,OAAO;MACLd,SAAS,EAAEM,KAAK,CAACa,OAAO,CAAC;QAAEF,KAAK,EAAE5B,IAAI,CAACY,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACkB,OAAO,EAAEN,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACb,SAAS;MAAE,CAAC;IACxI,CAAC;EACH,CAAC;EACD,OAAO;IAAEK,SAAS;IAAEP,QAAQ;IAAEQ,KAAK;IAAEL,UAAU;IAAEW,gBAAgB;IAAEM;EAAgB,CAAC;AACtF;AAEA,SACE1B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}