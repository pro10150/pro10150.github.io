{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { appendOwnerState, resolveComponentProps, mergeSlotProps } from '@mui/base/utils';\n/**\r\n * An internal function to create a Material UI slot.\r\n *\r\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\r\n * while Base UI does not need to support leaf component customization.\r\n *\r\n * @param {string} name: name of the slot\r\n * @param {object} parameters\r\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\r\n *\r\n * Note: the returned slot's props\r\n * - will never contain `component` prop.\r\n * - might contain `as` prop.\r\n */\nexport default function useSlot(\n/**\r\n * The slot's name. All Material UI components should have `root` slot.\r\n *\r\n * If the name is `root`, the logic behaves differently from other slots,\r\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\r\n */\nname, parameters) {\n  var className = parameters.className,\n    initialElementType = parameters.elementType,\n    ownerState = parameters.ownerState,\n    externalForwardedProps = parameters.externalForwardedProps,\n    getSlotOwnerState = parameters.getSlotOwnerState,\n    internalForwardedProps = parameters.internalForwardedProps,\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n  var rootComponent = externalForwardedProps.component,\n    _externalForwardedPro = externalForwardedProps.slots,\n    slots = _externalForwardedPro === void 0 ? _defineProperty({}, name, undefined) : _externalForwardedPro,\n    _externalForwardedPro2 = externalForwardedProps.slotProps,\n    slotProps = _externalForwardedPro2 === void 0 ? _defineProperty({}, name, undefined) : _externalForwardedPro2,\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n  var elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  var resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  var _mergeSlotProps = mergeSlotProps(_extends({\n      className: className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    slotComponent = _mergeSlotProps.props.component,\n    internalRef = _mergeSlotProps.internalRef,\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n  var ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  var slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  var finalOwnerState = _extends({}, ownerState, slotOwnerState);\n  var LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  var props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref: ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(function (propName) {\n    delete props[propName];\n  });\n  return [elementType, props];\n}","map":{"version":3,"names":["_defineProperty","_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","unstable_useForkRef","useForkRef","appendOwnerState","resolveComponentProps","mergeSlotProps","useSlot","name","parameters","className","initialElementType","elementType","ownerState","externalForwardedProps","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","rootComponent","component","_externalForwardedPro","slots","undefined","_externalForwardedPro2","slotProps","other","resolvedComponentsProps","_mergeSlotProps","externalSlotProps","slotComponent","props","internalRef","mergedProps","ref","slotOwnerState","finalOwnerState","LeafComponent","as","Object","keys","forEach","propName"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@mui/material/utils/useSlot.js"],"sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\r\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\r\n  _excluded3 = [\"component\"];\r\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport { appendOwnerState, resolveComponentProps, mergeSlotProps } from '@mui/base/utils';\r\n/**\r\n * An internal function to create a Material UI slot.\r\n *\r\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\r\n * while Base UI does not need to support leaf component customization.\r\n *\r\n * @param {string} name: name of the slot\r\n * @param {object} parameters\r\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\r\n *\r\n * Note: the returned slot's props\r\n * - will never contain `component` prop.\r\n * - might contain `as` prop.\r\n */\r\nexport default function useSlot(\r\n/**\r\n * The slot's name. All Material UI components should have `root` slot.\r\n *\r\n * If the name is `root`, the logic behaves differently from other slots,\r\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\r\n */\r\nname, parameters) {\r\n  const {\r\n      className,\r\n      elementType: initialElementType,\r\n      ownerState,\r\n      externalForwardedProps,\r\n      getSlotOwnerState,\r\n      internalForwardedProps\r\n    } = parameters,\r\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\r\n  const {\r\n      component: rootComponent,\r\n      slots = {\r\n        [name]: undefined\r\n      },\r\n      slotProps = {\r\n        [name]: undefined\r\n      }\r\n    } = externalForwardedProps,\r\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\r\n  const elementType = slots[name] || initialElementType;\r\n\r\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\r\n  // `resolvedComponentsProps` is always a plain object.\r\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\r\n  const _mergeSlotProps = mergeSlotProps(_extends({\r\n      className\r\n    }, useSlotPropsParams, {\r\n      externalForwardedProps: name === 'root' ? other : undefined,\r\n      externalSlotProps: resolvedComponentsProps\r\n    })),\r\n    {\r\n      props: {\r\n        component: slotComponent\r\n      },\r\n      internalRef\r\n    } = _mergeSlotProps,\r\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\r\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\r\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\r\n  const finalOwnerState = _extends({}, ownerState, slotOwnerState);\r\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\r\n  const props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\r\n    as: LeafComponent\r\n  }, {\r\n    ref\r\n  }), finalOwnerState);\r\n  Object.keys(slotOwnerState).forEach(propName => {\r\n    delete props[propName];\r\n  });\r\n  return [elementType, props];\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}