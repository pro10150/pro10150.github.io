{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { filterDOMProps as $e3Dei$filterDOMProps, clamp as $e3Dei$clamp, mergeProps as $e3Dei$mergeProps } from \"@react-aria/utils\";\nimport { useLabel as $e3Dei$useLabel } from \"@react-aria/label\";\nimport { useNumberFormatter as $e3Dei$useNumberFormatter } from \"@react-aria/i18n\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\n\nfunction $204d9ebcedfb8806$export$ed5abd763a836edc(props) {\n  var _props$value = props.value,\n    value = _props$value === void 0 ? 0 : _props$value,\n    _props$minValue = props.minValue,\n    minValue = _props$minValue === void 0 ? 0 : _props$minValue,\n    _props$maxValue = props.maxValue,\n    maxValue = _props$maxValue === void 0 ? 100 : _props$maxValue,\n    valueLabel = props.valueLabel,\n    isIndeterminate = props.isIndeterminate,\n    _props$formatOptions = props.formatOptions,\n    formatOptions = _props$formatOptions === void 0 ? {\n      style: \"percent\"\n    } : _props$formatOptions;\n  var domProps = (0, $e3Dei$filterDOMProps)(props, {\n    labelable: true\n  });\n  var _ref = (0, $e3Dei$useLabel)(_objectSpread(_objectSpread({}, props), {}, {\n      // Progress bar is not an HTML input element so it\n      // shouldn't be labeled by a <label> element.\n      labelElementType: \"span\"\n    })),\n    labelProps = _ref.labelProps,\n    fieldProps = _ref.fieldProps;\n  value = (0, $e3Dei$clamp)(value, minValue, maxValue);\n  var percentage = (value - minValue) / (maxValue - minValue);\n  var formatter = (0, $e3Dei$useNumberFormatter)(formatOptions);\n  if (!isIndeterminate && !valueLabel) {\n    var valueToFormat = formatOptions.style === \"percent\" ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n  return {\n    progressBarProps: (0, $e3Dei$mergeProps)(domProps, _objectSpread(_objectSpread({}, fieldProps), {}, {\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuemin\": minValue,\n      \"aria-valuemax\": maxValue,\n      \"aria-valuetext\": isIndeterminate ? undefined : valueLabel,\n      role: \"progressbar\"\n    })),\n    labelProps: labelProps\n  };\n}\nexport { $204d9ebcedfb8806$export$ed5abd763a836edc as useProgressBar };","map":{"version":3,"names":["$204d9ebcedfb8806$export$ed5abd763a836edc","props","_props$value","value","_props$minValue","minValue","_props$maxValue","maxValue","valueLabel","isIndeterminate","_props$formatOptions","formatOptions","style","domProps","$e3Dei$filterDOMProps","labelable","_ref","$e3Dei$useLabel","_objectSpread","labelElementType","labelProps","fieldProps","$e3Dei$clamp","percentage","formatter","$e3Dei$useNumberFormatter","valueToFormat","format","progressBarProps","$e3Dei$mergeProps","undefined","role"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\progress\\dist\\packages\\@react-aria\\progress\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\progress\\dist\\packages\\@react-aria\\progress\\src\\useProgressBar.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useProgressBar} from './useProgressBar';\nexport type {AriaProgressBarProps} from '@react-types/progress';\nexport type {ProgressBarAria} from './useProgressBar';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaProgressBarProps} from '@react-types/progress';\nimport {clamp, filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {DOMAttributes} from '@react-types/shared';\nimport {useLabel} from '@react-aria/label';\nimport {useNumberFormatter} from '@react-aria/i18n';\n\nexport interface ProgressBarAria {\n  /** Props for the progress bar container element. */\n  progressBarProps: DOMAttributes,\n  /** Props for the progress bar's visual label element (if any). */\n  labelProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a progress bar component.\n * Progress bars show either determinate or indeterminate progress of an operation\n * over time.\n */\nexport function useProgressBar(props: AriaProgressBarProps): ProgressBarAria {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    valueLabel,\n    isIndeterminate,\n    formatOptions = {\n      style: 'percent'\n    }\n  } = props;\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let {labelProps, fieldProps} = useLabel({\n    ...props,\n    // Progress bar is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n\n  value = clamp(value, minValue, maxValue);\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let formatter = useNumberFormatter(formatOptions);\n\n  if (!isIndeterminate && !valueLabel) {\n    let valueToFormat = formatOptions.style === 'percent' ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n\n  return {\n    progressBarProps: mergeProps(domProps, {\n      ...fieldProps,\n      'aria-valuenow': isIndeterminate ? undefined : value,\n      'aria-valuemin': minValue,\n      'aria-valuemax': maxValue,\n      'aria-valuetext': isIndeterminate ? undefined : valueLabel as string,\n      role: 'progressbar'\n    }),\n    labelProps\n  };\n}\n"],"mappings":";;;;;AAAA;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;;;AA8BO,SAASA,0CAAeC,KAA2B;EACxD,IAAAC,YAAA,GASID,KAAA,CATAE,KAAA;IACFA,KAAA,GAAAD,YAAA,cAAQ,IAAAA,YAAA;IAAAE,eAAA,GAQNH,KAAA,CARMI,QAAA;IACRA,QAAA,GAAAD,eAAA,cAAW,IAAAA,eAAA;IAAAE,eAAA,GAOTL,KAAA,CAPSM,QAAA;IACXA,QAAA,GAAAD,eAAA,cAAW,MAAAA,eAAA;IACXE,UAAU,GAKRP,KAAA,CANSO,UAAA;IAEXC,eAAe,GAIbR,KAAA,CALQQ,eAAA;IAAAC,oBAAA,GAKRT,KAAA,CAJaU,aAAA;IACfA,aAAA,GAAAD,oBAAA,cAAgB;MACdE,KAAA,EAAO;IACT,IAAAF,oBAAA;EAGF,IAAIG,QAAA,GAAW,IAAAC,qBAAa,EAAEb,KAAA,EAAO;IAACc,SAAA,EAAW;EAAI;EACrD,IAAAC,IAAA,GAA+B,IAAAC,eAAO,EAAAC,aAAA,CAAAA,aAAA,KACjCjB,KAAK;MACR;MACA;MACAkB,gBAAA,EAAkB;IAAA,GACpB;IALKC,UAAU,GAAAJ,IAAA,CAAXI,UAAA;IAAaC,UAAU,GAAAL,IAAA,CAAZK,UAAA;EAOflB,KAAA,GAAQ,IAAAmB,YAAI,EAAEnB,KAAA,EAAOE,QAAA,EAAUE,QAAA;EAC/B,IAAIgB,UAAA,GAAa,CAACpB,KAAA,GAAQE,QAAO,KAAME,QAAA,GAAWF,QAAO;EACzD,IAAImB,SAAA,GAAY,IAAAC,yBAAiB,EAAEd,aAAA;EAEnC,IAAI,CAACF,eAAA,IAAmB,CAACD,UAAA,EAAY;IACnC,IAAIkB,aAAA,GAAgBf,aAAA,CAAcC,KAAK,KAAK,YAAYW,UAAA,GAAapB,KAAA;IACrEK,UAAA,GAAagB,SAAA,CAAUG,MAAM,CAACD,aAAA;EAChC;EAEA,OAAO;IACLE,gBAAA,EAAkB,IAAAC,iBAAS,EAAEhB,QAAA,EAAAK,aAAA,CAAAA,aAAA,KACxBG,UAAU;MACb,iBAAiBZ,eAAA,GAAkBqB,SAAA,GAAY3B,KAAA;MAC/C,iBAAiBE,QAAA;MACjB,iBAAiBE,QAAA;MACjB,kBAAkBE,eAAA,GAAkBqB,SAAA,GAAYtB,UAAA;MAChDuB,IAAA,EAAM;IAAA,GACR;gBACAX;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}