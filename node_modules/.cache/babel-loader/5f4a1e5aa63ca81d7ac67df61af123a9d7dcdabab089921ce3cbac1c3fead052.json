{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// src/use-multiselect.ts\nimport { useCollator } from \"@react-aria/i18n\";\nimport { setInteractionModality } from \"@react-aria/interactions\";\nimport { useField } from \"@react-aria/label\";\nimport { useMenuTrigger } from \"@react-aria/menu\";\nimport { ListKeyboardDelegate, useTypeSelect } from \"@react-aria/selection\";\nimport { chain, filterDOMProps, mergeProps, useId } from \"@react-aria/utils\";\nimport { useMemo } from \"react\";\nfunction useMultiSelect(props, state, ref) {\n  var disallowEmptySelection = props.disallowEmptySelection,\n    isDisabled = props.isDisabled;\n  var collator = useCollator({\n    usage: \"search\",\n    sensitivity: \"base\"\n  });\n  var delegate = useMemo(function () {\n    return new ListKeyboardDelegate(state.collection, state.disabledKeys, null, collator);\n  }, [state.collection, state.disabledKeys, collator]);\n  var _useMenuTrigger = useMenuTrigger({\n      isDisabled: isDisabled,\n      type: \"listbox\"\n    }, state, ref),\n    menuTriggerProps = _useMenuTrigger.menuTriggerProps,\n    menuProps = _useMenuTrigger.menuProps;\n  var triggerOnKeyDown = function triggerOnKeyDown(e) {\n    if (state.selectionMode === \"single\") {\n      switch (e.key) {\n        case \"ArrowLeft\":\n          {\n            e.preventDefault();\n            var key = state.selectedKeys.size > 0 ? delegate.getKeyAbove(state.selectedKeys.values().next().value) : delegate.getFirstKey();\n            if (key) {\n              state.setSelectedKeys([key]);\n            }\n            break;\n          }\n        case \"ArrowRight\":\n          {\n            e.preventDefault();\n            var _key = state.selectedKeys.size > 0 ? delegate.getKeyBelow(state.selectedKeys.values().next().value) : delegate.getFirstKey();\n            if (_key) {\n              state.setSelectedKeys([_key]);\n            }\n            break;\n          }\n      }\n    }\n  };\n  var _useTypeSelect = useTypeSelect({\n      keyboardDelegate: delegate,\n      selectionManager: state.selectionManager,\n      onTypeSelect: function onTypeSelect(key) {\n        state.setSelectedKeys([key]);\n      }\n    }),\n    typeSelectProps = _useTypeSelect.typeSelectProps;\n  var _useField = useField(_objectSpread(_objectSpread({}, props), {}, {\n      labelElementType: \"span\"\n    })),\n    labelProps = _useField.labelProps,\n    fieldProps = _useField.fieldProps,\n    descriptionProps = _useField.descriptionProps,\n    errorMessageProps = _useField.errorMessageProps;\n  typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;\n  delete typeSelectProps.onKeyDownCapture;\n  var domProps = filterDOMProps(props, {\n    labelable: true\n  });\n  var triggerProps = mergeProps(typeSelectProps, menuTriggerProps, fieldProps);\n  var valueId = useId();\n  return {\n    labelProps: _objectSpread(_objectSpread({}, labelProps), {}, {\n      onClick: function onClick() {\n        var _a;\n        if (!props.isDisabled) {\n          (_a = ref.current) == null ? void 0 : _a.focus();\n          setInteractionModality(\"keyboard\");\n        }\n      }\n    }),\n    triggerProps: mergeProps(domProps, _objectSpread(_objectSpread({}, triggerProps), {}, {\n      onKeyDown: chain(triggerProps.onKeyDown, triggerOnKeyDown, props.onKeyDown),\n      onKeyUp: props.onKeyUp,\n      \"aria-labelledby\": [valueId, domProps[\"aria-label\"] !== void 0 ? domProps[\"aria-labelledby\"] !== void 0 ? domProps[\"aria-labelledby\"] : triggerProps.id : triggerProps[\"aria-labelledby\"]].join(\" \"),\n      onFocus: function onFocus(e) {\n        if (state.isFocused) {\n          return;\n        }\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n        state.setFocused(true);\n      },\n      onBlur: function onBlur(e) {\n        if (state.isOpen) {\n          return;\n        }\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n        state.setFocused(false);\n      }\n    })),\n    valueProps: {\n      id: valueId\n    },\n    menuProps: _objectSpread(_objectSpread({}, menuProps), {}, {\n      disallowEmptySelection: disallowEmptySelection,\n      autoFocus: state.focusStrategy || true,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true,\n      onBlur: function onBlur(e) {\n        if (e.currentTarget.contains(e.relatedTarget)) {\n          return;\n        }\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n        state.setFocused(false);\n      },\n      onFocus: menuProps == null ? void 0 : menuProps.onFocus,\n      \"aria-labelledby\": [fieldProps[\"aria-labelledby\"], triggerProps[\"aria-label\"] && !fieldProps[\"aria-labelledby\"] ? triggerProps.id : null].filter(Boolean).join(\" \")\n    }),\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\nexport { useMultiSelect };","map":{"version":3,"names":["useCollator","setInteractionModality","useField","useMenuTrigger","ListKeyboardDelegate","useTypeSelect","chain","filterDOMProps","mergeProps","useId","useMemo","useMultiSelect","props","state","ref","disallowEmptySelection","isDisabled","collator","usage","sensitivity","delegate","collection","disabledKeys","_useMenuTrigger","type","menuTriggerProps","menuProps","triggerOnKeyDown","e","selectionMode","key","preventDefault","selectedKeys","size","getKeyAbove","values","next","value","getFirstKey","setSelectedKeys","getKeyBelow","_useTypeSelect","keyboardDelegate","selectionManager","onTypeSelect","typeSelectProps","_useField","_objectSpread","labelElementType","labelProps","fieldProps","descriptionProps","errorMessageProps","onKeyDown","onKeyDownCapture","domProps","labelable","triggerProps","valueId","onClick","_a","current","focus","onKeyUp","id","join","onFocus","isFocused","setFocused","onBlur","isOpen","valueProps","autoFocus","focusStrategy","shouldSelectOnPressUp","shouldFocusOnHover","currentTarget","contains","relatedTarget","filter","Boolean"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@nextui-org/use-aria-multiselect/dist/chunk-3L3RM3MK.mjs"],"sourcesContent":["// src/use-multiselect.ts\r\nimport { useCollator } from \"@react-aria/i18n\";\r\nimport { setInteractionModality } from \"@react-aria/interactions\";\r\nimport { useField } from \"@react-aria/label\";\r\nimport { useMenuTrigger } from \"@react-aria/menu\";\r\nimport { ListKeyboardDelegate, useTypeSelect } from \"@react-aria/selection\";\r\nimport { chain, filterDOMProps, mergeProps, useId } from \"@react-aria/utils\";\r\nimport { useMemo } from \"react\";\r\nfunction useMultiSelect(props, state, ref) {\r\n  const { disallowEmptySelection, isDisabled } = props;\r\n  const collator = useCollator({ usage: \"search\", sensitivity: \"base\" });\r\n  const delegate = useMemo(\r\n    () => new ListKeyboardDelegate(state.collection, state.disabledKeys, null, collator),\r\n    [state.collection, state.disabledKeys, collator]\r\n  );\r\n  const { menuTriggerProps, menuProps } = useMenuTrigger(\r\n    {\r\n      isDisabled,\r\n      type: \"listbox\"\r\n    },\r\n    state,\r\n    ref\r\n  );\r\n  const triggerOnKeyDown = (e) => {\r\n    if (state.selectionMode === \"single\") {\r\n      switch (e.key) {\r\n        case \"ArrowLeft\": {\r\n          e.preventDefault();\r\n          const key = state.selectedKeys.size > 0 ? delegate.getKeyAbove(state.selectedKeys.values().next().value) : delegate.getFirstKey();\r\n          if (key) {\r\n            state.setSelectedKeys([key]);\r\n          }\r\n          break;\r\n        }\r\n        case \"ArrowRight\": {\r\n          e.preventDefault();\r\n          const key = state.selectedKeys.size > 0 ? delegate.getKeyBelow(state.selectedKeys.values().next().value) : delegate.getFirstKey();\r\n          if (key) {\r\n            state.setSelectedKeys([key]);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const { typeSelectProps } = useTypeSelect({\r\n    keyboardDelegate: delegate,\r\n    selectionManager: state.selectionManager,\r\n    onTypeSelect(key) {\r\n      state.setSelectedKeys([key]);\r\n    }\r\n  });\r\n  const { labelProps, fieldProps, descriptionProps, errorMessageProps } = useField({\r\n    ...props,\r\n    labelElementType: \"span\"\r\n  });\r\n  typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;\r\n  delete typeSelectProps.onKeyDownCapture;\r\n  const domProps = filterDOMProps(props, { labelable: true });\r\n  const triggerProps = mergeProps(typeSelectProps, menuTriggerProps, fieldProps);\r\n  const valueId = useId();\r\n  return {\r\n    labelProps: {\r\n      ...labelProps,\r\n      onClick: () => {\r\n        var _a;\r\n        if (!props.isDisabled) {\r\n          (_a = ref.current) == null ? void 0 : _a.focus();\r\n          setInteractionModality(\"keyboard\");\r\n        }\r\n      }\r\n    },\r\n    triggerProps: mergeProps(domProps, {\r\n      ...triggerProps,\r\n      onKeyDown: chain(triggerProps.onKeyDown, triggerOnKeyDown, props.onKeyDown),\r\n      onKeyUp: props.onKeyUp,\r\n      \"aria-labelledby\": [\r\n        valueId,\r\n        domProps[\"aria-label\"] !== void 0 ? domProps[\"aria-labelledby\"] !== void 0 ? domProps[\"aria-labelledby\"] : triggerProps.id : triggerProps[\"aria-labelledby\"]\r\n      ].join(\" \"),\r\n      onFocus(e) {\r\n        if (state.isFocused) {\r\n          return;\r\n        }\r\n        if (props.onFocus) {\r\n          props.onFocus(e);\r\n        }\r\n        state.setFocused(true);\r\n      },\r\n      onBlur(e) {\r\n        if (state.isOpen) {\r\n          return;\r\n        }\r\n        if (props.onBlur) {\r\n          props.onBlur(e);\r\n        }\r\n        state.setFocused(false);\r\n      }\r\n    }),\r\n    valueProps: {\r\n      id: valueId\r\n    },\r\n    menuProps: {\r\n      ...menuProps,\r\n      disallowEmptySelection,\r\n      autoFocus: state.focusStrategy || true,\r\n      shouldSelectOnPressUp: true,\r\n      shouldFocusOnHover: true,\r\n      onBlur: (e) => {\r\n        if (e.currentTarget.contains(e.relatedTarget)) {\r\n          return;\r\n        }\r\n        if (props.onBlur) {\r\n          props.onBlur(e);\r\n        }\r\n        state.setFocused(false);\r\n      },\r\n      onFocus: menuProps == null ? void 0 : menuProps.onFocus,\r\n      \"aria-labelledby\": [\r\n        fieldProps[\"aria-labelledby\"],\r\n        triggerProps[\"aria-label\"] && !fieldProps[\"aria-labelledby\"] ? triggerProps.id : null\r\n      ].filter(Boolean).join(\" \")\r\n    },\r\n    descriptionProps,\r\n    errorMessageProps\r\n  };\r\n}\r\n\r\nexport {\r\n  useMultiSelect\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}