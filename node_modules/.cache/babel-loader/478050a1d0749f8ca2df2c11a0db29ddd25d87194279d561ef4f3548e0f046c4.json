{"ast":null,"code":"import _toConsumableArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useFormValidationState as $b3nuO$useFormValidationState, mergeValidation as $b3nuO$mergeValidation } from \"@react-stately/form\";\nimport { useControlledState as $b3nuO$useControlledState } from \"@react-stately/utils\";\nimport { useRef as $b3nuO$useRef } from \"react\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\n\nfunction $587d3ad58be6d31f$export$daff6da51032a415() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _ref = (0, $b3nuO$useControlledState)(props.value, props.defaultValue || [], props.onChange),\n    _ref2 = _slicedToArray(_ref, 2),\n    selectedValues = _ref2[0],\n    _setValue = _ref2[1];\n  var isRequired = !!props.isRequired && selectedValues.length === 0;\n  var invalidValues = (0, $b3nuO$useRef)(new Map());\n  var validation = (0, $b3nuO$useFormValidationState)(_objectSpread(_objectSpread({}, props), {}, {\n    value: selectedValues\n  }));\n  var isInvalid = validation.displayValidation.isInvalid;\n  var _props_validationState;\n  var state = _objectSpread(_objectSpread({}, validation), {}, {\n    value: selectedValues,\n    setValue: function setValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      _setValue(value);\n    },\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isSelected: function isSelected(value) {\n      return selectedValues.includes(value);\n    },\n    addValue: function addValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (!selectedValues.includes(value)) _setValue(selectedValues.concat(value));\n    },\n    removeValue: function removeValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (selectedValues.includes(value)) _setValue(selectedValues.filter(function (existingValue) {\n        return existingValue !== value;\n      }));\n    },\n    toggleValue: function toggleValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (selectedValues.includes(value)) _setValue(selectedValues.filter(function (existingValue) {\n        return existingValue !== value;\n      }));else _setValue(selectedValues.concat(value));\n    },\n    setInvalid: function setInvalid(value, v) {\n      var s = new Map(invalidValues.current);\n      if (v.isInvalid) s.set(value, v);else s.delete(value);\n      invalidValues.current = s;\n      validation.updateValidation((0, $b3nuO$mergeValidation).apply(void 0, _toConsumableArray(s.values())));\n    },\n    validationState: (_props_validationState = props.validationState) !== null && _props_validationState !== void 0 ? _props_validationState : isInvalid ? \"invalid\" : null,\n    isInvalid: isInvalid,\n    isRequired: isRequired\n  });\n  return state;\n}\nexport { $587d3ad58be6d31f$export$daff6da51032a415 as useCheckboxGroupState };","map":{"version":3,"names":["$587d3ad58be6d31f$export$daff6da51032a415","props","arguments","length","undefined","_ref","$b3nuO$useControlledState","value","defaultValue","onChange","_ref2","_slicedToArray","selectedValues","setValue","isRequired","invalidValues","$b3nuO$useRef","Map","validation","$b3nuO$useFormValidationState","_objectSpread","isInvalid","displayValidation","_props_validationState","state","isReadOnly","isDisabled","isSelected","includes","addValue","concat","removeValue","filter","existingValue","toggleValue","setInvalid","v","s","current","set","delete","updateValidation","$b3nuO$mergeValidation","apply","_toConsumableArray","values","validationState"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-stately\\checkbox\\dist\\packages\\@react-stately\\checkbox\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-stately\\checkbox\\dist\\packages\\@react-stately\\checkbox\\src\\useCheckboxGroupState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useCheckboxGroupState} from './useCheckboxGroupState';\n\nexport type {CheckboxGroupProps} from '@react-types/checkbox';\nexport type {CheckboxGroupState} from './useCheckboxGroupState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupProps} from '@react-types/checkbox';\nimport {FormValidationState, mergeValidation, useFormValidationState} from '@react-stately/form';\nimport {useControlledState} from '@react-stately/utils';\nimport {useRef} from 'react';\nimport {ValidationResult, ValidationState} from '@react-types/shared';\n\nexport interface CheckboxGroupState extends FormValidationState {\n  /** Current selected values. */\n  readonly value: readonly string[],\n\n  /** Whether the checkbox group is disabled. */\n  readonly isDisabled: boolean,\n\n  /** Whether the checkbox group is read only. */\n  readonly isReadOnly: boolean,\n\n  /**\n   * The current validation state of the checkbox group.\n   * @deprecated Use `isInvalid` instead.\n   */\n  readonly validationState: ValidationState | null,\n\n  /** Whether the checkbox group is invalid. */\n  readonly isInvalid: boolean,\n\n  /**\n   * Whether the checkboxes in the group are required.\n   * This changes to false once at least one item is selected.\n   */\n  readonly isRequired: boolean,\n\n  /** Returns whether the given value is selected. */\n  isSelected(value: string): boolean,\n\n  /** Sets the selected values. */\n  setValue(value: string[]): void,\n\n  /** Adds a value to the set of selected values. */\n  addValue(value: string): void,\n\n  /** Removes a value from the set of selected values. */\n  removeValue(value: string): void,\n\n  /** Toggles a value in the set of selected values. */\n  toggleValue(value: string): void,\n\n  /** Sets whether one of the checkboxes is invalid. */\n  setInvalid(value: string, validation: ValidationResult): void\n}\n\n/**\n * Provides state management for a checkbox group component. Provides a name for the group,\n * and manages selection and focus state.\n */\nexport function useCheckboxGroupState(props: CheckboxGroupProps = {}): CheckboxGroupState {\n  let [selectedValues, setValue] = useControlledState(props.value, props.defaultValue || [], props.onChange);\n  let isRequired = !!props.isRequired && selectedValues.length === 0;\n\n  let invalidValues = useRef(new Map<string, ValidationResult>());\n  let validation = useFormValidationState({\n    ...props,\n    value: selectedValues\n  });\n\n  let isInvalid = validation.displayValidation.isInvalid;\n  const state: CheckboxGroupState = {\n    ...validation,\n    value: selectedValues,\n    setValue(value) {\n      if (props.isReadOnly || props.isDisabled) {\n        return;\n      }\n\n      setValue(value);\n    },\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isSelected(value) {\n      return selectedValues.includes(value);\n    },\n    addValue(value) {\n      if (props.isReadOnly || props.isDisabled) {\n        return;\n      }\n      if (!selectedValues.includes(value)) {\n        setValue(selectedValues.concat(value));\n      }\n    },\n    removeValue(value) {\n      if (props.isReadOnly || props.isDisabled) {\n        return;\n      }\n      if (selectedValues.includes(value)) {\n        setValue(selectedValues.filter(existingValue => existingValue !== value));\n      }\n    },\n    toggleValue(value) {\n      if (props.isReadOnly || props.isDisabled) {\n        return;\n      }\n      if (selectedValues.includes(value)) {\n        setValue(selectedValues.filter(existingValue => existingValue !== value));\n      } else {\n        setValue(selectedValues.concat(value));\n      }\n    },\n    setInvalid(value, v) {\n      let s = new Map(invalidValues.current);\n      if (v.isInvalid) {\n        s.set(value, v);\n      } else {\n        s.delete(value);\n      }\n\n      invalidValues.current = s;\n      validation.updateValidation(mergeValidation(...s.values()));\n    },\n    validationState: props.validationState ?? (isInvalid ? 'invalid' : null),\n    isInvalid,\n    isRequired\n  };\n\n  return state;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}