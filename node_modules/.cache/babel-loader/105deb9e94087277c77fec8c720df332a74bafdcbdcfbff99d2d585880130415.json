{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\r\n * The {@link lastDayOfWeek} function options.\r\n */\n\n/**\r\n * @name lastDayOfWeek\r\n * @category Week Helpers\r\n * @summary Return the last day of a week for the given date.\r\n *\r\n * @description\r\n * Return the last day of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The last day of a week\r\n *\r\n * @example\r\n * // The last day of a week for 2 September 2014 11:55:00:\r\n * const result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sat Sep 06 2014 00:00:00\r\n *\r\n * @example\r\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\r\n * const result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\nexport function lastDayOfWeek(date, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = (_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0;\n  var _date = toDate(date);\n  var day = _date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  _date.setHours(0, 0, 0, 0);\n  _date.setDate(_date.getDate() + diff);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default lastDayOfWeek;","map":{"version":3,"names":["toDate","getDefaultOptions","lastDayOfWeek","date","options","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","defaultOptions","weekStartsOn","locale","_date","day","getDay","diff","setHours","setDate","getDate"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/date-fns/lastDayOfWeek.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\r\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\r\n\r\n/**\r\n * The {@link lastDayOfWeek} function options.\r\n */\r\n\r\n/**\r\n * @name lastDayOfWeek\r\n * @category Week Helpers\r\n * @summary Return the last day of a week for the given date.\r\n *\r\n * @description\r\n * Return the last day of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The last day of a week\r\n *\r\n * @example\r\n * // The last day of a week for 2 September 2014 11:55:00:\r\n * const result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sat Sep 06 2014 00:00:00\r\n *\r\n * @example\r\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\r\n * const result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\r\nexport function lastDayOfWeek(date, options) {\r\n  const defaultOptions = getDefaultOptions();\r\n  const weekStartsOn =\r\n    options?.weekStartsOn ??\r\n    options?.locale?.options?.weekStartsOn ??\r\n    defaultOptions.weekStartsOn ??\r\n    defaultOptions.locale?.options?.weekStartsOn ??\r\n    0;\r\n\r\n  const _date = toDate(date);\r\n  const day = _date.getDay();\r\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\r\n\r\n  _date.setHours(0, 0, 0, 0);\r\n  _date.setDate(_date.getDate() + diff);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default lastDayOfWeek;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AACrC,SAASC,iBAAiB,QAAQ,2BAA2B;;AAE7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAAA,IAAAC,IAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,eAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA;EAC3C,IAAMC,cAAc,GAAGZ,iBAAiB,EAAE;EAC1C,IAAMa,YAAY,IAAAT,IAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,qBAAA,GAChBJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,YAAY,cAAAN,qBAAA,cAAAA,qBAAA,GACrBJ,OAAO,aAAPA,OAAO,wBAAAK,eAAA,GAAPL,OAAO,CAAEW,MAAM,cAAAN,eAAA,wBAAAC,qBAAA,GAAfD,eAAA,CAAiBL,OAAO,cAAAM,qBAAA,uBAAxBA,qBAAA,CAA0BI,YAAY,cAAAP,KAAA,cAAAA,KAAA,GACtCM,cAAc,CAACC,YAAY,cAAAR,KAAA,cAAAA,KAAA,IAAAK,qBAAA,GAC3BE,cAAc,CAACE,MAAM,cAAAJ,qBAAA,wBAAAC,sBAAA,GAArBD,qBAAA,CAAuBP,OAAO,cAAAQ,sBAAA,uBAA9BA,sBAAA,CAAgCE,YAAY,cAAAT,IAAA,cAAAA,IAAA,GAC5C,CAAC;EAEH,IAAMW,KAAK,GAAGhB,MAAM,CAACG,IAAI,CAAC;EAC1B,IAAMc,GAAG,GAAGD,KAAK,CAACE,MAAM,EAAE;EAC1B,IAAMC,IAAI,GAAG,CAACF,GAAG,GAAGH,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAIG,GAAG,GAAGH,YAAY,CAAC;EAErEE,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1BJ,KAAK,CAACK,OAAO,CAACL,KAAK,CAACM,OAAO,EAAE,GAAGH,IAAI,CAAC;EACrC,OAAOH,KAAK;AACd;;AAEA;AACA,eAAed,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}