{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n\n/**\r\n * @name isSameMonth\r\n * @category Month Helpers\r\n * @summary Are the given dates in the same month (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same month (and year)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same month (and year)\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2014 in the same month?\r\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2015 in the same month?\r\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\r\n * //=> false\r\n */\nexport function isSameMonth(dateLeft, dateRight) {\n  var _dateLeft = toDate(dateLeft);\n  var _dateRight = toDate(dateRight);\n  return _dateLeft.getFullYear() === _dateRight.getFullYear() && _dateLeft.getMonth() === _dateRight.getMonth();\n}\n\n// Fallback for modularized imports:\nexport default isSameMonth;","map":{"version":3,"names":["toDate","isSameMonth","dateLeft","dateRight","_dateLeft","_dateRight","getFullYear","getMonth"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/date-fns/isSameMonth.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\r\n\r\n/**\r\n * @name isSameMonth\r\n * @category Month Helpers\r\n * @summary Are the given dates in the same month (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same month (and year)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same month (and year)\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2014 in the same month?\r\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2015 in the same month?\r\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\r\n * //=> false\r\n */\r\nexport function isSameMonth(dateLeft, dateRight) {\r\n  const _dateLeft = toDate(dateLeft);\r\n  const _dateRight = toDate(dateRight);\r\n  return (\r\n    _dateLeft.getFullYear() === _dateRight.getFullYear() &&\r\n    _dateLeft.getMonth() === _dateRight.getMonth()\r\n  );\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isSameMonth;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,QAAQ,EAAEC,SAAS,EAAE;EAC/C,IAAMC,SAAS,GAAGJ,MAAM,CAACE,QAAQ,CAAC;EAClC,IAAMG,UAAU,GAAGL,MAAM,CAACG,SAAS,CAAC;EACpC,OACEC,SAAS,CAACE,WAAW,EAAE,KAAKD,UAAU,CAACC,WAAW,EAAE,IACpDF,SAAS,CAACG,QAAQ,EAAE,KAAKF,UAAU,CAACE,QAAQ,EAAE;AAElD;;AAEA;AACA,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}