{"ast":null,"code":"\"use client\";\n\n// src/use-aria-popover.ts\nimport _objectSpread from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"triggerRef\", \"popoverRef\", \"showArrow\", \"offset\", \"crossOffset\", \"scrollRef\", \"shouldFlip\", \"boundaryElement\", \"shouldCloseOnBlur\", \"placement\", \"containerPadding\", \"shouldCloseOnInteractOutside\", \"isNonModal\", \"isKeyboardDismissDisabled\"];\nimport { useEffect } from \"react\";\nimport { useOverlay, useOverlayPosition } from \"@react-aria/overlays\";\nimport { ariaHideOutside, toReactAriaPlacement } from \"@nextui-org/aria-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useReactAriaPopover(props, state) {\n  const {\n      triggerRef,\n      popoverRef,\n      showArrow,\n      offset = 7,\n      crossOffset = 0,\n      scrollRef,\n      shouldFlip,\n      boundaryElement,\n      shouldCloseOnBlur = true,\n      placement: placementProp = \"top\",\n      containerPadding,\n      shouldCloseOnInteractOutside,\n      isNonModal: isNonModalProp,\n      isKeyboardDismissDisabled\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  const isNonModal = isNonModalProp || true;\n  const {\n    overlayProps,\n    underlayProps\n  } = useOverlay({\n    isOpen: state.isOpen,\n    onClose: state.close,\n    shouldCloseOnBlur,\n    isDismissable: true,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside: shouldCloseOnInteractOutside ? shouldCloseOnInteractOutside : element => {\n      let trigger = triggerRef == null ? void 0 : triggerRef.current;\n      return !trigger || !trigger.contains(element);\n    }\n  }, popoverRef);\n  const {\n    overlayProps: positionProps,\n    arrowProps,\n    placement\n  } = useOverlayPosition(_objectSpread(_objectSpread({}, otherProps), {}, {\n    shouldFlip,\n    crossOffset,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    scrollRef,\n    boundaryElement,\n    containerPadding,\n    placement: toReactAriaPlacement(placementProp),\n    offset: showArrow ? offset + 3 : offset,\n    onClose: () => {}\n  }));\n  useEffect(() => {\n    if (state.isOpen && !isNonModal && popoverRef.current) {\n      return ariaHideOutside([popoverRef.current]);\n    }\n  }, [isNonModal, state.isOpen, popoverRef]);\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps,\n    underlayProps,\n    placement\n  };\n}\nexport { useReactAriaPopover };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","useEffect","useOverlay","useOverlayPosition","ariaHideOutside","toReactAriaPlacement","mergeProps","useReactAriaPopover","props","state","triggerRef","popoverRef","showArrow","offset","crossOffset","scrollRef","shouldFlip","boundaryElement","shouldCloseOnBlur","placement","placementProp","containerPadding","shouldCloseOnInteractOutside","isNonModal","isNonModalProp","isKeyboardDismissDisabled","otherProps","overlayProps","underlayProps","isOpen","onClose","close","isDismissable","element","trigger","current","contains","positionProps","arrowProps","targetRef","overlayRef","popoverProps"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@nextui-org/popover/dist/chunk-JGMU3RCI.mjs"],"sourcesContent":["\"use client\";\r\n\r\n// src/use-aria-popover.ts\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  useOverlay,\r\n  useOverlayPosition\r\n} from \"@react-aria/overlays\";\r\nimport { ariaHideOutside, toReactAriaPlacement } from \"@nextui-org/aria-utils\";\r\nimport { mergeProps } from \"@react-aria/utils\";\r\nfunction useReactAriaPopover(props, state) {\r\n  const {\r\n    triggerRef,\r\n    popoverRef,\r\n    showArrow,\r\n    offset = 7,\r\n    crossOffset = 0,\r\n    scrollRef,\r\n    shouldFlip,\r\n    boundaryElement,\r\n    shouldCloseOnBlur = true,\r\n    placement: placementProp = \"top\",\r\n    containerPadding,\r\n    shouldCloseOnInteractOutside,\r\n    isNonModal: isNonModalProp,\r\n    isKeyboardDismissDisabled,\r\n    ...otherProps\r\n  } = props;\r\n  const isNonModal = isNonModalProp || true;\r\n  const { overlayProps, underlayProps } = useOverlay(\r\n    {\r\n      isOpen: state.isOpen,\r\n      onClose: state.close,\r\n      shouldCloseOnBlur,\r\n      isDismissable: true,\r\n      isKeyboardDismissDisabled,\r\n      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside ? shouldCloseOnInteractOutside : (element) => {\r\n        let trigger = triggerRef == null ? void 0 : triggerRef.current;\r\n        return !trigger || !trigger.contains(element);\r\n      }\r\n    },\r\n    popoverRef\r\n  );\r\n  const {\r\n    overlayProps: positionProps,\r\n    arrowProps,\r\n    placement\r\n  } = useOverlayPosition({\r\n    ...otherProps,\r\n    shouldFlip,\r\n    crossOffset,\r\n    targetRef: triggerRef,\r\n    overlayRef: popoverRef,\r\n    isOpen: state.isOpen,\r\n    scrollRef,\r\n    boundaryElement,\r\n    containerPadding,\r\n    placement: toReactAriaPlacement(placementProp),\r\n    offset: showArrow ? offset + 3 : offset,\r\n    onClose: () => {\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    if (state.isOpen && !isNonModal && popoverRef.current) {\r\n      return ariaHideOutside([popoverRef.current]);\r\n    }\r\n  }, [isNonModal, state.isOpen, popoverRef]);\r\n  return {\r\n    popoverProps: mergeProps(overlayProps, positionProps),\r\n    arrowProps,\r\n    underlayProps,\r\n    placement\r\n  };\r\n}\r\n\r\nexport {\r\n  useReactAriaPopover\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AAAA,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,MAAAC,SAAA;AACA,SAASC,SAAS,QAAQ,OAAO;AACjC,SACEC,UAAU,EACVC,kBAAkB,QACb,sBAAsB;AAC7B,SAASC,eAAe,EAAEC,oBAAoB,QAAQ,wBAAwB;AAC9E,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,mBAAmBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACzC,MAAM;MACJC,UAAU;MACVC,UAAU;MACVC,SAAS;MACTC,MAAM,GAAG,CAAC;MACVC,WAAW,GAAG,CAAC;MACfC,SAAS;MACTC,UAAU;MACVC,eAAe;MACfC,iBAAiB,GAAG,IAAI;MACxBC,SAAS,EAAEC,aAAa,GAAG,KAAK;MAChCC,gBAAgB;MAChBC,4BAA4B;MAC5BC,UAAU,EAAEC,cAAc;MAC1BC;IAEF,CAAC,GAAGjB,KAAK;IADJkB,UAAU,GAAA3B,wBAAA,CACXS,KAAK,EAAAR,SAAA;EACT,MAAMuB,UAAU,GAAGC,cAAc,IAAI,IAAI;EACzC,MAAM;IAAEG,YAAY;IAAEC;EAAc,CAAC,GAAG1B,UAAU,CAChD;IACE2B,MAAM,EAAEpB,KAAK,CAACoB,MAAM;IACpBC,OAAO,EAAErB,KAAK,CAACsB,KAAK;IACpBb,iBAAiB;IACjBc,aAAa,EAAE,IAAI;IACnBP,yBAAyB;IACzBH,4BAA4B,EAAEA,4BAA4B,GAAGA,4BAA4B,GAAIW,OAAO,IAAK;MACvG,IAAIC,OAAO,GAAGxB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACyB,OAAO;MAC9D,OAAO,CAACD,OAAO,IAAI,CAACA,OAAO,CAACE,QAAQ,CAACH,OAAO,CAAC;IAC/C;EACF,CAAC,EACDtB,UACF,CAAC;EACD,MAAM;IACJgB,YAAY,EAAEU,aAAa;IAC3BC,UAAU;IACVnB;EACF,CAAC,GAAGhB,kBAAkB,CAAAL,aAAA,CAAAA,aAAA,KACjB4B,UAAU;IACbV,UAAU;IACVF,WAAW;IACXyB,SAAS,EAAE7B,UAAU;IACrB8B,UAAU,EAAE7B,UAAU;IACtBkB,MAAM,EAAEpB,KAAK,CAACoB,MAAM;IACpBd,SAAS;IACTE,eAAe;IACfI,gBAAgB;IAChBF,SAAS,EAAEd,oBAAoB,CAACe,aAAa,CAAC;IAC9CP,MAAM,EAAED,SAAS,GAAGC,MAAM,GAAG,CAAC,GAAGA,MAAM;IACvCiB,OAAO,EAAEA,CAAA,KAAM,CACf;EAAC,EACF,CAAC;EACF7B,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,CAACoB,MAAM,IAAI,CAACN,UAAU,IAAIZ,UAAU,CAACwB,OAAO,EAAE;MACrD,OAAO/B,eAAe,CAAC,CAACO,UAAU,CAACwB,OAAO,CAAC,CAAC;IAC9C;EACF,CAAC,EAAE,CAACZ,UAAU,EAAEd,KAAK,CAACoB,MAAM,EAAElB,UAAU,CAAC,CAAC;EAC1C,OAAO;IACL8B,YAAY,EAAEnC,UAAU,CAACqB,YAAY,EAAEU,aAAa,CAAC;IACrDC,UAAU;IACVV,aAAa;IACbT;EACF,CAAC;AACH;AAEA,SACEZ,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}