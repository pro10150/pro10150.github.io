{"ast":null,"code":"import { useRef, useEffect } from 'react';\n\n/**\r\n * Track whether a component is current mounted. Generally less preferable than\r\n * properlly canceling effects so they don't run after a component is unmounted,\r\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\r\n *\r\n * @returns a function that returns the current isMounted state of the component\r\n *\r\n * ```ts\r\n * const [data, setData] = useState(null)\r\n * const isMounted = useMounted()\r\n *\r\n * useEffect(() => {\r\n *   fetchdata().then((newData) => {\r\n *      if (isMounted()) {\r\n *        setData(newData);\r\n *      }\r\n *   })\r\n * })\r\n * ```\r\n */\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","map":{"version":3,"names":["useRef","useEffect","useMounted","mounted","isMounted","current"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@restart/hooks/esm/useMounted.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\n\r\n/**\r\n * Track whether a component is current mounted. Generally less preferable than\r\n * properlly canceling effects so they don't run after a component is unmounted,\r\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\r\n *\r\n * @returns a function that returns the current isMounted state of the component\r\n *\r\n * ```ts\r\n * const [data, setData] = useState(null)\r\n * const isMounted = useMounted()\r\n *\r\n * useEffect(() => {\r\n *   fetchdata().then((newData) => {\r\n *      if (isMounted()) {\r\n *        setData(newData);\r\n *      }\r\n *   })\r\n * })\r\n * ```\r\n */\r\nexport default function useMounted() {\r\n  const mounted = useRef(true);\r\n  const isMounted = useRef(() => mounted.current);\r\n  useEffect(() => {\r\n    mounted.current = true;\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n  return isMounted.current;\r\n}"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,IAAMC,OAAO,GAAGH,MAAM,CAAC,IAAI,CAAC;EAC5B,IAAMI,SAAS,GAAGJ,MAAM,CAAC;IAAA,OAAMG,OAAO,CAACE,OAAO;EAAA,EAAC;EAC/CJ,SAAS,CAAC,YAAM;IACdE,OAAO,CAACE,OAAO,GAAG,IAAI;IACtB,OAAO,YAAM;MACXF,OAAO,CAACE,OAAO,GAAG,KAAK;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAOD,SAAS,CAACC,OAAO;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}