{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport $1DoQa$intlmessageformat from \"intl-messageformat\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\nvar $d6fd23bc337660df$export$64839e615120df17 = /*#__PURE__*/function () {\n  function $d6fd23bc337660df$export$64839e615120df17(messages) {\n    var defaultLocale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"en-US\";\n    _classCallCheck(this, $d6fd23bc337660df$export$64839e615120df17);\n    // Clone messages so we don't modify the original object.\n    this.messages = _objectSpread({}, messages);\n    this.defaultLocale = defaultLocale;\n  }\n  _createClass($d6fd23bc337660df$export$64839e615120df17, [{\n    key: \"getStringForLocale\",\n    value: function getStringForLocale(key, locale) {\n      var strings = this.messages[locale];\n      if (!strings) {\n        strings = $d6fd23bc337660df$var$getStringsForLocale(locale, this.messages, this.defaultLocale);\n        this.messages[locale] = strings;\n      }\n      var string = strings[key];\n      if (!string) throw new Error(\"Could not find intl message \".concat(key, \" in \").concat(locale, \" locale\"));\n      return string;\n    }\n  }]);\n  return $d6fd23bc337660df$export$64839e615120df17;\n}();\nfunction $d6fd23bc337660df$var$getStringsForLocale(locale, strings) {\n  var defaultLocale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"en-US\";\n  // If there is an exact match, use it.\n  if (strings[locale]) return strings[locale];\n  // Attempt to find the closest match by language.\n  // For example, if the locale is fr-CA (French Canadian), but there is only\n  // an fr-FR (France) set of strings, use that.\n  // This could be replaced with Intl.LocaleMatcher once it is supported.\n  // https://github.com/tc39/proposal-intl-localematcher\n  var language = $d6fd23bc337660df$var$getLanguage(locale);\n  if (strings[language]) return strings[language];\n  for (var key in strings) {\n    if (key.startsWith(language + \"-\")) return strings[key];\n  }\n  // Nothing close, use english.\n  return strings[defaultLocale];\n}\nfunction $d6fd23bc337660df$var$getLanguage(locale) {\n  // @ts-ignore\n  if (Intl.Locale)\n    // @ts-ignore\n    return new Intl.Locale(locale).language;\n  return locale.split(\"-\")[0];\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nvar $972eb555d604f491$export$526ebc05ff964723 = /*#__PURE__*/function () {\n  function $972eb555d604f491$export$526ebc05ff964723(locale, messages) {\n    _classCallCheck(this, $972eb555d604f491$export$526ebc05ff964723);\n    this.locale = locale;\n    this.messages = messages;\n    this.cache = {};\n  }\n  _createClass($972eb555d604f491$export$526ebc05ff964723, [{\n    key: \"format\",\n    value: function format(key, variables) {\n      var message = this.cache[key];\n      if (!message) {\n        var msg = this.messages.getStringForLocale(key, this.locale);\n        if (!msg) throw new Error(\"Could not find intl message \".concat(key, \" in \").concat(this.locale, \" locale\"));\n        message = new (0, $1DoQa$intlmessageformat)(msg, this.locale);\n        this.cache[key] = message;\n      }\n      var varCopy;\n      if (variables) varCopy = Object.keys(variables).reduce(function (acc, key) {\n        acc[key] = variables[key] == null ? false : variables[key];\n        return acc;\n      }, {});\n      return message.format(varCopy);\n    }\n  }]);\n  return $972eb555d604f491$export$526ebc05ff964723;\n}();\nexport { $d6fd23bc337660df$export$64839e615120df17 as MessageDictionary, $972eb555d604f491$export$526ebc05ff964723 as MessageFormatter };","map":{"version":3,"names":["$d6fd23bc337660df$export$64839e615120df17","messages","defaultLocale","arguments","length","undefined","_classCallCheck","_objectSpread","_createClass","key","value","getStringForLocale","locale","strings","$d6fd23bc337660df$var$getStringsForLocale","string","Error","concat","language","$d6fd23bc337660df$var$getLanguage","startsWith","Intl","Locale","split","$972eb555d604f491$export$526ebc05ff964723","cache","format","variables","message","msg","$1DoQa$intlmessageformat","varCopy","Object","keys","reduce","acc"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@internationalized\\message\\dist\\packages\\@internationalized\\message\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@internationalized\\message\\dist\\packages\\@internationalized\\message\\src\\MessageDictionary.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@internationalized\\message\\dist\\packages\\@internationalized\\message\\src\\MessageFormatter.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {LocalizedStrings} from './MessageDictionary';\nexport {MessageDictionary} from './MessageDictionary';\nexport {MessageFormatter} from './MessageFormatter';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type LocalizedStrings = {\n  [lang: string]: {\n    [key: string]: string\n  }\n};\n\n/**\n * Stores a mapping of localized strings. Can be used to find the\n * closest available string for a given locale.\n */\nexport class MessageDictionary {\n  private messages: LocalizedStrings;\n  private defaultLocale: string;\n\n  constructor(messages: LocalizedStrings, defaultLocale: string = 'en-US') {\n    // Clone messages so we don't modify the original object.\n    this.messages = {...messages};\n    this.defaultLocale = defaultLocale;\n  }\n\n  getStringForLocale(key: string, locale: string) {\n    let strings = this.messages[locale];\n    if (!strings) {\n      strings = getStringsForLocale(locale, this.messages, this.defaultLocale);\n      this.messages[locale] = strings;\n    }\n\n    let string = strings[key];\n    if (!string) {\n      throw new Error(`Could not find intl message ${key} in ${locale} locale`);\n    }\n\n    return string;\n  }\n}\n\nfunction getStringsForLocale(locale: string, strings: LocalizedStrings, defaultLocale = 'en-US') {\n  // If there is an exact match, use it.\n  if (strings[locale]) {\n    return strings[locale];\n  }\n\n  // Attempt to find the closest match by language.\n  // For example, if the locale is fr-CA (French Canadian), but there is only\n  // an fr-FR (France) set of strings, use that.\n  // This could be replaced with Intl.LocaleMatcher once it is supported.\n  // https://github.com/tc39/proposal-intl-localematcher\n  let language = getLanguage(locale);\n  if (strings[language]) {\n    return strings[language];\n  }\n\n  for (let key in strings) {\n    if (key.startsWith(language + '-')) {\n      return strings[key];\n    }\n  }\n\n  // Nothing close, use english.\n  return strings[defaultLocale];\n}\n\nfunction getLanguage(locale: string) {\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    return new Intl.Locale(locale).language;\n  }\n\n  return locale.split('-')[0];\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FormatXMLElementFn, PrimitiveType} from 'intl-messageformat/src/formatters';\nimport IntlMessageFormat from 'intl-messageformat';\nimport {MessageDictionary} from './MessageDictionary';\n\n/**\n * Formats ICU Message strings to create localized strings from a MessageDictionary.\n */\nexport class MessageFormatter {\n  private locale: string;\n  private messages: MessageDictionary;\n  private cache: {[key: string]: IntlMessageFormat};\n\n  constructor(locale: string, messages: MessageDictionary) {\n    this.locale = locale;\n    this.messages = messages;\n    this.cache = {};\n  }\n\n  format<T = void>(key: string, variables: Record<string, PrimitiveType | T | FormatXMLElementFn<T, string | T | (string | T)[]>> | undefined) {\n    let message = this.cache[key];\n    if (!message) {\n      let msg = this.messages.getStringForLocale(key, this.locale);\n      if (!msg) {\n        throw new Error(`Could not find intl message ${key} in ${this.locale} locale`);\n      }\n\n      message = new IntlMessageFormat(msg, this.locale);\n      this.cache[key] = message;\n    }\n    let varCopy: Record<string, PrimitiveType | T | FormatXMLElementFn<T, string | T | (string | T)[]>> | undefined;\n    if (variables) {\n      varCopy = Object.keys(variables).reduce((acc, key) => {\n        acc[key] = variables[key] == null ? false : variables[key];\n        return acc;\n      }, {});\n    }\n\n    return message.format(varCopy);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}