{"ast":null,"code":"import _classCallCheck from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { scrapeMotionValuesFromProps as _scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nvar SVGVisualElement = /*#__PURE__*/function (_DOMVisualElement) {\n  _inherits(SVGVisualElement, _DOMVisualElement);\n  var _super = _createSuper(SVGVisualElement);\n  function SVGVisualElement() {\n    var _this;\n    _classCallCheck(this, SVGVisualElement);\n    _this = _super.apply(this, arguments);\n    _this.type = \"svg\";\n    _this.isSVGTag = false;\n    return _this;\n  }\n  _createClass(SVGVisualElement, [{\n    key: \"getBaseTargetFromProps\",\n    value: function getBaseTargetFromProps(props, key) {\n      return props[key];\n    }\n  }, {\n    key: \"readValueFromInstance\",\n    value: function readValueFromInstance(instance, key) {\n      if (transformProps.has(key)) {\n        var defaultType = getDefaultValueType(key);\n        return defaultType ? defaultType.default || 0 : 0;\n      }\n      key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n      return instance.getAttribute(key);\n    }\n  }, {\n    key: \"measureInstanceViewportBox\",\n    value: function measureInstanceViewportBox() {\n      return createBox();\n    }\n  }, {\n    key: \"scrapeMotionValuesFromProps\",\n    value: function scrapeMotionValuesFromProps(props, prevProps) {\n      return _scrapeMotionValuesFromProps(props, prevProps);\n    }\n  }, {\n    key: \"build\",\n    value: function build(renderState, latestValues, options, props) {\n      buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n  }, {\n    key: \"renderInstance\",\n    value: function renderInstance(instance, renderState, styleProp, projection) {\n      renderSVG(instance, renderState, styleProp, projection);\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(instance) {\n      this.isSVGTag = isSVGTag(instance.tagName);\n      _get(_getPrototypeOf(SVGVisualElement.prototype), \"mount\", this).call(this, instance);\n    }\n  }]);\n  return SVGVisualElement;\n}(DOMVisualElement);\nexport { SVGVisualElement };","map":{"version":3,"names":["scrapeMotionValuesFromProps","DOMVisualElement","buildSVGAttrs","camelToDash","camelCaseAttributes","transformProps","renderSVG","getDefaultValueType","createBox","isSVGTag","SVGVisualElement","_DOMVisualElement","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","type","_createClass","key","value","getBaseTargetFromProps","props","readValueFromInstance","instance","has","defaultType","default","getAttribute","measureInstanceViewportBox","prevProps","build","renderState","latestValues","options","transformTemplate","renderInstance","styleProp","projection","mount","tagName","_get","_getPrototypeOf","prototype","call"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs"],"sourcesContent":["import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\r\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\r\nimport { transformProps } from '../html/utils/transform.mjs';\r\nimport { renderSVG } from './utils/render.mjs';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\r\nimport { createBox } from '../../projection/geometry/models.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\n\r\nclass SVGVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"svg\";\r\n        this.isSVGTag = false;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props[key];\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            const defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\r\n        return instance.getAttribute(key);\r\n    }\r\n    measureInstanceViewportBox() {\r\n        return createBox();\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps) {\r\n        return scrapeMotionValuesFromProps(props, prevProps);\r\n    }\r\n    build(renderState, latestValues, options, props) {\r\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\r\n    }\r\n    renderInstance(instance, renderState, styleProp, projection) {\r\n        renderSVG(instance, renderState, styleProp, projection);\r\n    }\r\n    mount(instance) {\r\n        this.isSVGTag = isSVGTag(instance.tagName);\r\n        super.mount(instance);\r\n    }\r\n}\r\n\r\nexport { SVGVisualElement };\r\n"],"mappings":";;;;;;AAAA,SAASA,2BAA2B,IAA3BA,4BAA2B,QAAQ,kCAAkC;AAC9E,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,mBAAmB,QAAQ,8BAA8B;AAClE,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,mBAAmB,QAAQ,iCAAiC;AACrE,SAASC,SAAS,QAAQ,sCAAsC;AAChE,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,IAE5CC,gBAAgB,0BAAAC,iBAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,iBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAClB,SAAAA,iBAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,gBAAA;IACVK,KAAA,GAAAF,MAAA,CAAAI,KAAA,OAASC,SAAS;IAClBH,KAAA,CAAKI,IAAI,GAAG,KAAK;IACjBJ,KAAA,CAAKN,QAAQ,GAAG,KAAK;IAAC,OAAAM,KAAA;EAC1B;EAACK,YAAA,CAAAV,gBAAA;IAAAW,GAAA;IAAAC,KAAA,EACD,SAAAC,uBAAuBC,KAAK,EAAEH,GAAG,EAAE;MAC/B,OAAOG,KAAK,CAACH,GAAG,CAAC;IACrB;EAAC;IAAAA,GAAA;IAAAC,KAAA,EACD,SAAAG,sBAAsBC,QAAQ,EAAEL,GAAG,EAAE;MACjC,IAAIhB,cAAc,CAACsB,GAAG,CAACN,GAAG,CAAC,EAAE;QACzB,IAAMO,WAAW,GAAGrB,mBAAmB,CAACc,GAAG,CAAC;QAC5C,OAAOO,WAAW,GAAGA,WAAW,CAACC,OAAO,IAAI,CAAC,GAAG,CAAC;MACrD;MACAR,GAAG,GAAG,CAACjB,mBAAmB,CAACuB,GAAG,CAACN,GAAG,CAAC,GAAGlB,WAAW,CAACkB,GAAG,CAAC,GAAGA,GAAG;MAC5D,OAAOK,QAAQ,CAACI,YAAY,CAACT,GAAG,CAAC;IACrC;EAAC;IAAAA,GAAA;IAAAC,KAAA,EACD,SAAAS,2BAAA,EAA6B;MACzB,OAAOvB,SAAS,EAAE;IACtB;EAAC;IAAAa,GAAA;IAAAC,KAAA,EACD,SAAAtB,4BAA4BwB,KAAK,EAAEQ,SAAS,EAAE;MAC1C,OAAOhC,4BAA2B,CAACwB,KAAK,EAAEQ,SAAS,CAAC;IACxD;EAAC;IAAAX,GAAA;IAAAC,KAAA,EACD,SAAAW,MAAMC,WAAW,EAAEC,YAAY,EAAEC,OAAO,EAAEZ,KAAK,EAAE;MAC7CtB,aAAa,CAACgC,WAAW,EAAEC,YAAY,EAAEC,OAAO,EAAE,IAAI,CAAC3B,QAAQ,EAAEe,KAAK,CAACa,iBAAiB,CAAC;IAC7F;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAAgB,eAAeZ,QAAQ,EAAEQ,WAAW,EAAEK,SAAS,EAAEC,UAAU,EAAE;MACzDlC,SAAS,CAACoB,QAAQ,EAAEQ,WAAW,EAAEK,SAAS,EAAEC,UAAU,CAAC;IAC3D;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAAmB,MAAMf,QAAQ,EAAE;MACZ,IAAI,CAACjB,QAAQ,GAAGA,QAAQ,CAACiB,QAAQ,CAACgB,OAAO,CAAC;MAC1CC,IAAA,CAAAC,eAAA,CAAAlC,gBAAA,CAAAmC,SAAA,kBAAAC,IAAA,OAAYpB,QAAQ;IACxB;EAAC;EAAA,OAAAhB,gBAAA;AAAA,EAhC0BT,gBAAgB;AAmC/C,SAASS,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}