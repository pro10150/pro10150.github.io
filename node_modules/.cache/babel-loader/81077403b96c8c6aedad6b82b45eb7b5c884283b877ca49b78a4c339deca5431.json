{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const _useUncontrolled = useUncontrolled(props, {\n      expanded: 'onToggle'\n    }),\n    {\n      bsPrefix: initialBsPrefix,\n      expand = true,\n      variant = 'light',\n      bg,\n      fixed,\n      sticky,\n      className,\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'nav',\n      expanded,\n      onToggle,\n      onSelect,\n      collapseOnSelect = false\n    } = _useUncontrolled,\n    controlledProps = _objectWithoutProperties(_useUncontrolled, _excluded);\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback(function () {\n    onSelect == null ? void 0 : onSelect(...arguments);\n    if (collapseOnSelect && expanded) {\n      onToggle == null ? void 0 : onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = \"\".concat(bsPrefix, \"-expand\");\n  if (typeof expand === 'string') expandClass = \"\".concat(expandClass, \"-\").concat(expand);\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n        ref: ref\n      }, controlledProps), {}, {\n        className: classNames(className, bsPrefix, expand && expandClass, variant && \"\".concat(bsPrefix, \"-\").concat(variant), bg && \"bg-\".concat(bg), sticky && \"sticky-\".concat(sticky), fixed && \"fixed-\".concat(fixed))\n      }))\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","classNames","React","useCallback","useMemo","SelectableContext","useUncontrolled","NavbarBrand","NavbarCollapse","NavbarToggle","NavbarOffcanvas","useBootstrapPrefix","NavbarContext","NavbarText","jsx","_jsx","Navbar","forwardRef","props","ref","_useUncontrolled","expanded","bsPrefix","initialBsPrefix","expand","variant","bg","fixed","sticky","className","as","Component","onToggle","onSelect","collapseOnSelect","controlledProps","handleCollapse","arguments","role","undefined","expandClass","concat","navbarContext","Provider","value","children","displayName","Object","assign","Brand","Collapse","Offcanvas","Text","Toggle"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/react-bootstrap/esm/Navbar.js"],"sourcesContent":["\"use client\";\r\n\r\nimport classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useCallback, useMemo } from 'react';\r\nimport SelectableContext from '@restart/ui/SelectableContext';\r\nimport { useUncontrolled } from 'uncontrollable';\r\nimport NavbarBrand from './NavbarBrand';\r\nimport NavbarCollapse from './NavbarCollapse';\r\nimport NavbarToggle from './NavbarToggle';\r\nimport NavbarOffcanvas from './NavbarOffcanvas';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport NavbarContext from './NavbarContext';\r\nimport NavbarText from './NavbarText';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  const {\r\n    bsPrefix: initialBsPrefix,\r\n    expand = true,\r\n    variant = 'light',\r\n    bg,\r\n    fixed,\r\n    sticky,\r\n    className,\r\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n    as: Component = 'nav',\r\n    expanded,\r\n    onToggle,\r\n    onSelect,\r\n    collapseOnSelect = false,\r\n    ...controlledProps\r\n  } = useUncontrolled(props, {\r\n    expanded: 'onToggle'\r\n  });\r\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\r\n  const handleCollapse = useCallback((...args) => {\r\n    onSelect == null ? void 0 : onSelect(...args);\r\n    if (collapseOnSelect && expanded) {\r\n      onToggle == null ? void 0 : onToggle(false);\r\n    }\r\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\r\n\r\n  // will result in some false positives but that seems better\r\n  // than false negatives. strict `undefined` check allows explicit\r\n  // \"nulling\" of the role if the user really doesn't want one\r\n  if (controlledProps.role === undefined && Component !== 'nav') {\r\n    controlledProps.role = 'navigation';\r\n  }\r\n  let expandClass = `${bsPrefix}-expand`;\r\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\r\n  const navbarContext = useMemo(() => ({\r\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\r\n    bsPrefix,\r\n    expanded: !!expanded,\r\n    expand\r\n  }), [bsPrefix, expanded, expand, onToggle]);\r\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\r\n    value: navbarContext,\r\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\r\n      value: handleCollapse,\r\n      children: /*#__PURE__*/_jsx(Component, {\r\n        ref: ref,\r\n        ...controlledProps,\r\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\r\n      })\r\n    })\r\n  });\r\n});\r\nNavbar.displayName = 'Navbar';\r\nexport default Object.assign(Navbar, {\r\n  Brand: NavbarBrand,\r\n  Collapse: NavbarCollapse,\r\n  Offcanvas: NavbarOffcanvas,\r\n  Text: NavbarText,\r\n  Toggle: NavbarToggle\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}