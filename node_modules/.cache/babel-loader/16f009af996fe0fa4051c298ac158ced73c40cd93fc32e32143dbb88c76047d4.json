{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { filterDOMProps as $8kq0t$filterDOMProps, mergeProps as $8kq0t$mergeProps, useLabels as $8kq0t$useLabels, useId as $8kq0t$useId } from \"@react-aria/utils\";\nimport { useSelectableItem as $8kq0t$useSelectableItem, useSelectableCollection as $8kq0t$useSelectableCollection } from \"@react-aria/selection\";\nimport { useHasTabbableChild as $8kq0t$useHasTabbableChild } from \"@react-aria/focus\";\nimport { useMemo as $8kq0t$useMemo } from \"react\";\nimport { useLocale as $8kq0t$useLocale } from \"@react-aria/i18n\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nconst $99b62ae3ff97ec45$export$c5f62239608282b6 = new WeakMap();\nfunction $99b62ae3ff97ec45$export$567fc7097e064344(state, key, role) {\n  if (typeof key === \"string\") key = key.replace(/\\s+/g, \"\");\n  let baseId = $99b62ae3ff97ec45$export$c5f62239608282b6.get(state);\n  return \"\".concat(baseId, \"-\").concat(role, \"-\").concat(key);\n}\nfunction $0175d55c2a017ebc$export$fdf4756d5b8ef90a(props, state, ref) {\n  var _item_props;\n  let {\n    key: key,\n    isDisabled: propsDisabled,\n    shouldSelectOnPressUp: shouldSelectOnPressUp\n  } = props;\n  let {\n    selectionManager: manager,\n    selectedKey: selectedKey\n  } = state;\n  let isSelected = key === selectedKey;\n  let isDisabled = propsDisabled || state.isDisabled || state.disabledKeys.has(key);\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = (0, $8kq0t$useSelectableItem)({\n    selectionManager: manager,\n    key: key,\n    ref: ref,\n    isDisabled: isDisabled,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    linkBehavior: \"selection\"\n  });\n  let tabId = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, key, \"tab\");\n  let tabPanelId = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, key, \"tabpanel\");\n  let {\n    tabIndex: tabIndex\n  } = itemProps;\n  let item = state.collection.getItem(key);\n  let domProps = (0, $8kq0t$filterDOMProps)(item === null || item === void 0 ? void 0 : item.props, {\n    isLink: !!(item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.href),\n    labelable: true\n  });\n  delete domProps.id;\n  return {\n    tabProps: (0, $8kq0t$mergeProps)(domProps, itemProps, {\n      id: tabId,\n      \"aria-selected\": isSelected,\n      \"aria-disabled\": isDisabled || undefined,\n      \"aria-controls\": isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: \"tab\"\n    }),\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    isPressed: isPressed\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $34bce698202e07cb$export$fae0121b5afe572d(props, state, ref) {\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  let tabIndex = (0, $8kq0t$useHasTabbableChild)(ref) ? undefined : 0;\n  var _props_id;\n  const id = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, (_props_id = props.id) !== null && _props_id !== void 0 ? _props_id : state === null || state === void 0 ? void 0 : state.selectedKey, \"tabpanel\");\n  const tabPanelProps = (0, $8kq0t$useLabels)(_objectSpread(_objectSpread({}, props), {}, {\n    id: id,\n    \"aria-labelledby\": (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, state === null || state === void 0 ? void 0 : state.selectedKey, \"tab\")\n  }));\n  return {\n    tabPanelProps: (0, $8kq0t$mergeProps)(tabPanelProps, {\n      tabIndex: tabIndex,\n      role: \"tabpanel\",\n      \"aria-describedby\": props[\"aria-describedby\"],\n      \"aria-details\": props[\"aria-details\"]\n    })\n  };\n}\n\n/*\r\n* Copyright 2020 Adobe. All rights reserved.\r\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License. You may obtain a copy\r\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software distributed under\r\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n* OF ANY KIND, either express or implied. See the License for the specific language\r\n* governing permissions and limitations under the License.\r\n*/\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nclass $bfc6f2d60b8a4c40$export$15010ca3c1abe90b {\n  getKeyLeftOf(key) {\n    if (this.flipDirection) return this.getNextKey(key);\n    return this.getPreviousKey(key);\n  }\n  getKeyRightOf(key) {\n    if (this.flipDirection) return this.getPreviousKey(key);\n    return this.getNextKey(key);\n  }\n  getKeyAbove(key) {\n    return this.getPreviousKey(key);\n  }\n  getKeyBelow(key) {\n    return this.getNextKey(key);\n  }\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (key != null && this.disabledKeys.has(key)) key = this.getNextKey(key);\n    return key;\n  }\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (key != null && this.disabledKeys.has(key)) key = this.getPreviousKey(key);\n    return key;\n  }\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) key = this.collection.getFirstKey();\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) key = this.collection.getLastKey();\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n  constructor(collection, direction, orientation) {\n    let disabledKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Set();\n    this.collection = collection;\n    this.flipDirection = direction === \"rtl\" && orientation === \"horizontal\";\n    this.disabledKeys = disabledKeys;\n  }\n}\nfunction $58d314389b21fa3f$export$773e389e644c5874(props, state, ref) {\n  let {\n    orientation = \"horizontal\",\n    keyboardActivation = \"automatic\"\n  } = props;\n  let {\n    collection: collection,\n    selectionManager: manager,\n    disabledKeys: disabledKeys\n  } = state;\n  let {\n    direction: direction\n  } = (0, $8kq0t$useLocale)();\n  let delegate = (0, $8kq0t$useMemo)(() => new (0, $bfc6f2d60b8a4c40$export$15010ca3c1abe90b)(collection, direction, orientation, disabledKeys), [collection, disabledKeys, orientation, direction]);\n  let {\n    collectionProps: collectionProps\n  } = (0, $8kq0t$useSelectableCollection)({\n    ref: ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === \"automatic\",\n    disallowEmptySelection: true,\n    scrollRef: ref,\n    linkBehavior: \"selection\"\n  });\n  // Compute base id for all tabs\n  let tabsId = (0, $8kq0t$useId)();\n  (0, $99b62ae3ff97ec45$export$c5f62239608282b6).set(state, tabsId);\n  let tabListLabelProps = (0, $8kq0t$useLabels)(_objectSpread(_objectSpread({}, props), {}, {\n    id: tabsId\n  }));\n  return {\n    tabListProps: _objectSpread(_objectSpread({}, (0, $8kq0t$mergeProps)(collectionProps, tabListLabelProps)), {}, {\n      role: \"tablist\",\n      \"aria-orientation\": orientation,\n      tabIndex: undefined\n    })\n  };\n}\nexport { $0175d55c2a017ebc$export$fdf4756d5b8ef90a as useTab, $34bce698202e07cb$export$fae0121b5afe572d as useTabPanel, $58d314389b21fa3f$export$773e389e644c5874 as useTabList };","map":{"version":3,"names":["$99b62ae3ff97ec45$export$c5f62239608282b6","WeakMap","$99b62ae3ff97ec45$export$567fc7097e064344","state","key","role","replace","baseId","get","concat","$0175d55c2a017ebc$export$fdf4756d5b8ef90a","props","ref","_item_props","isDisabled","propsDisabled","shouldSelectOnPressUp","selectionManager","manager","selectedKey","isSelected","disabledKeys","has","itemProps","isPressed","$8kq0t$useSelectableItem","linkBehavior","tabId","tabPanelId","tabIndex","item","collection","getItem","domProps","$8kq0t$filterDOMProps","isLink","href","labelable","id","tabProps","$8kq0t$mergeProps","undefined","$34bce698202e07cb$export$fae0121b5afe572d","$8kq0t$useHasTabbableChild","_props_id","tabPanelProps","$8kq0t$useLabels","_objectSpread","$bfc6f2d60b8a4c40$export$15010ca3c1abe90b","getKeyLeftOf","flipDirection","getNextKey","getPreviousKey","getKeyRightOf","getKeyAbove","getKeyBelow","getFirstKey","getLastKey","getKeyAfter","getKeyBefore","constructor","direction","orientation","arguments","length","Set","$58d314389b21fa3f$export$773e389e644c5874","keyboardActivation","$8kq0t$useLocale","delegate","$8kq0t$useMemo","collectionProps","$8kq0t$useSelectableCollection","keyboardDelegate","selectOnFocus","disallowEmptySelection","scrollRef","tabsId","$8kq0t$useId","set","tabListLabelProps","tabListProps"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tabs\\dist\\packages\\@react-aria\\tabs\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tabs\\dist\\packages\\@react-aria\\tabs\\src\\useTab.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tabs\\dist\\packages\\@react-aria\\tabs\\src\\utils.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tabs\\dist\\packages\\@react-aria\\tabs\\src\\useTabPanel.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tabs\\dist\\packages\\@react-aria\\tabs\\src\\useTabList.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tabs\\dist\\packages\\@react-aria\\tabs\\src\\TabsKeyboardDelegate.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useTab} from './useTab';\nexport {useTabPanel} from './useTabPanel';\nexport {useTabList} from './useTabList';\nexport type {AriaTabListProps, AriaTabPanelProps, AriaTabProps} from '@react-types/tabs';\nexport type {Orientation} from '@react-types/shared';\nexport type {TabAria} from './useTab';\nexport type {TabPanelAria} from './useTabPanel';\nexport type {AriaTabListOptions, TabListAria} from './useTabList';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabProps} from '@react-types/tabs';\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {generateId} from './utils';\nimport {RefObject} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface TabAria {\n  /** Props for the tab element. */\n  tabProps: DOMAttributes,\n  /** Whether the tab is currently selected. */\n  isSelected: boolean,\n  /** Whether the tab is disabled. */\n  isDisabled: boolean,\n  /** Whether the tab is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tab.\n * When selected, the associated tab panel is shown.\n */\nexport function useTab<T>(\n  props: AriaTabProps,\n  state: TabListState<T>,\n  ref: RefObject<FocusableElement>\n): TabAria {\n  let {key, isDisabled: propsDisabled, shouldSelectOnPressUp} = props;\n  let {selectionManager: manager, selectedKey} = state;\n\n  let isSelected = key === selectedKey;\n\n  let isDisabled = propsDisabled || state.isDisabled || state.disabledKeys.has(key);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: manager,\n    key,\n    ref,\n    isDisabled,\n    shouldSelectOnPressUp,\n    linkBehavior: 'selection'\n  });\n\n  let tabId = generateId(state, key, 'tab');\n  let tabPanelId = generateId(state, key, 'tabpanel');\n  let {tabIndex} = itemProps;\n\n  let item = state.collection.getItem(key);\n  let domProps = filterDOMProps(item?.props, {isLink: !!item?.props?.href, labelable: true});\n  delete domProps.id;\n\n  return {\n    tabProps: mergeProps(domProps, itemProps, {\n      id: tabId,\n      'aria-selected': isSelected,\n      'aria-disabled': isDisabled || undefined,\n      'aria-controls': isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: 'tab'\n    }),\n    isSelected,\n    isDisabled,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport {TabListState} from '@react-stately/tabs';\n\nexport const tabsIds = new WeakMap<TabListState<unknown>, string>();\n\nexport function generateId<T>(state: TabListState<T>, key: Key, role: string) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  let baseId = tabsIds.get(state);\n  return `${baseId}-${role}-${key}`;\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabPanelProps} from '@react-types/tabs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {generateId} from './utils';\nimport {mergeProps, useLabels} from '@react-aria/utils';\nimport {RefObject} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {useHasTabbableChild} from '@react-aria/focus';\n\nexport interface TabPanelAria {\n  /** Props for the tab panel element. */\n  tabPanelProps: DOMAttributes\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a tab panel. A tab panel is a container for\n * the contents of a tab, and is shown when the tab is selected.\n */\nexport function useTabPanel<T>(props: AriaTabPanelProps, state: TabListState<T>, ref: RefObject<Element>): TabPanelAria {\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  let tabIndex = useHasTabbableChild(ref) ? undefined : 0;\n\n  const id = generateId(state, props.id ?? state?.selectedKey, 'tabpanel');\n  const tabPanelProps = useLabels({...props, id, 'aria-labelledby': generateId(state, state?.selectedKey, 'tab')});\n\n  return {\n    tabPanelProps: mergeProps(tabPanelProps, {\n      tabIndex,\n      role: 'tabpanel',\n      'aria-describedby': props['aria-describedby'],\n      'aria-details': props['aria-details']\n    })\n  };\n}\n","/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\nimport {AriaTabListProps} from '@react-types/tabs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps, useId, useLabels} from '@react-aria/utils';\nimport {RefObject, useMemo} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {tabsIds} from './utils';\nimport {TabsKeyboardDelegate} from './TabsKeyboardDelegate';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface AriaTabListOptions<T> extends Omit<AriaTabListProps<T>, 'children'> {}\n\nexport interface TabListAria {\n  /** Props for the tablist container. */\n  tabListProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tab list.\n * Tabs organize content into multiple sections and allow users to navigate between them.\n */\nexport function useTabList<T>(props: AriaTabListOptions<T>, state: TabListState<T>, ref: RefObject<HTMLElement>): TabListAria {\n  let {\n    orientation = 'horizontal',\n    keyboardActivation = 'automatic'\n  } = props;\n  let {\n    collection,\n    selectionManager: manager,\n    disabledKeys\n  } = state;\n  let {direction} = useLocale();\n  let delegate = useMemo(() => new TabsKeyboardDelegate(\n    collection,\n    direction,\n    orientation,\n    disabledKeys), [collection, disabledKeys, orientation, direction]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true,\n    scrollRef: ref,\n    linkBehavior: 'selection'\n  });\n\n  // Compute base id for all tabs\n  let tabsId = useId();\n  tabsIds.set(state, tabsId);\n\n  let tabListLabelProps = useLabels({...props, id: tabsId});\n\n  return {\n    tabListProps: {\n      ...mergeProps(collectionProps, tabListLabelProps),\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, Key, KeyboardDelegate, Orientation} from '@react-types/shared';\n\nexport class TabsKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<T>;\n  private flipDirection: boolean;\n  private disabledKeys: Set<Key>;\n\n  constructor(collection: Collection<T>, direction: Direction, orientation: Orientation, disabledKeys: Set<Key> = new Set()) {\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.disabledKeys = disabledKeys;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getNextKey(key);\n    }\n    return this.getPreviousKey(key);\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getPreviousKey(key);\n    }\n    return this.getNextKey(key);\n  }\n\n  getKeyAbove(key: Key) {\n    return this.getPreviousKey(key);\n  }\n\n  getKeyBelow(key: Key) {\n    return this.getNextKey(key);\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (key != null && this.disabledKeys.has(key)) {\n      key = this.getNextKey(key);\n    }\n    return key;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (key != null && this.disabledKeys.has(key)) {\n      key = this.getPreviousKey(key);\n    }\n    return key;\n  }\n\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) {\n        key = this.collection.getFirstKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) {\n        key = this.collection.getLastKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}