{"ast":null,"code":"import _toConsumableArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _objectWithoutProperties from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"register\"],\n  _excluded2 = [\"onPress\", \"onPressChange\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"isDisabled\", \"isPressed\", \"preventFocusOnPress\", \"shouldCancelOnPointerExit\", \"allowTextSelectionOnPress\", \"ref\"],\n  _excluded3 = [\"children\"],\n  _excluded4 = [\"children\"];\nimport { useObjectRef as $bx7SL$useObjectRef, mergeProps as $bx7SL$mergeProps, useSyncRef as $bx7SL$useSyncRef, useGlobalListeners as $bx7SL$useGlobalListeners, useEffectEvent as $bx7SL$useEffectEvent, getOwnerDocument as $bx7SL$getOwnerDocument, isMac as $bx7SL$isMac, openLink as $bx7SL$openLink, isVirtualClick as $bx7SL$isVirtualClick, focusWithoutScrolling as $bx7SL$focusWithoutScrolling, isVirtualPointerEvent as $bx7SL$isVirtualPointerEvent, getOwnerWindow as $bx7SL$getOwnerWindow, isIOS as $bx7SL$isIOS, runAfterTransition as $bx7SL$runAfterTransition, useLayoutEffect as $bx7SL$useLayoutEffect, useEvent as $bx7SL$useEvent, useDescription as $bx7SL$useDescription } from \"@react-aria/utils\";\nimport $bx7SL$react, { useContext as $bx7SL$useContext, useState as $bx7SL$useState, useRef as $bx7SL$useRef, useMemo as $bx7SL$useMemo, useEffect as $bx7SL$useEffect, useCallback as $bx7SL$useCallback } from \"react\";\nimport { _ as $bx7SL$_ } from \"@swc/helpers/_/_class_private_field_get\";\nimport { _ as $bx7SL$_1 } from \"@swc/helpers/_/_class_private_field_init\";\nimport { _ as $bx7SL$_2 } from \"@swc/helpers/_/_class_private_field_set\";\nimport { useIsSSR as $bx7SL$useIsSSR } from \"@react-aria/ssr\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nvar $14c0b72509d70225$var$state = \"default\";\nvar $14c0b72509d70225$var$savedUserSelect = \"\";\nvar $14c0b72509d70225$var$modifiedElementMap = new WeakMap();\nfunction $14c0b72509d70225$export$16a4697467175487(target) {\n  if ((0, $bx7SL$isIOS)()) {\n    if ($14c0b72509d70225$var$state === \"default\") {\n      // eslint-disable-next-line no-restricted-globals\n      var documentObject = (0, $bx7SL$getOwnerDocument)(target);\n      $14c0b72509d70225$var$savedUserSelect = documentObject.documentElement.style.webkitUserSelect;\n      documentObject.documentElement.style.webkitUserSelect = \"none\";\n    }\n    $14c0b72509d70225$var$state = \"disabled\";\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n}\nfunction $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {\n  if ((0, $bx7SL$isIOS)()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if ($14c0b72509d70225$var$state !== \"disabled\") return;\n    $14c0b72509d70225$var$state = \"restoring\";\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(function () {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      (0, $bx7SL$runAfterTransition)(function () {\n        // Avoid race conditions\n        if ($14c0b72509d70225$var$state === \"restoring\") {\n          // eslint-disable-next-line no-restricted-globals\n          var documentObject = (0, $bx7SL$getOwnerDocument)(target);\n          if (documentObject.documentElement.style.webkitUserSelect === \"none\") documentObject.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || \"\";\n          $14c0b72509d70225$var$savedUserSelect = \"\";\n          $14c0b72509d70225$var$state = \"default\";\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement)\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    {\n      if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {\n        var targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);\n        if (target.style.userSelect === \"none\") target.style.userSelect = targetOldUserSelect;\n        if (target.getAttribute(\"style\") === \"\") target.removeAttribute(\"style\");\n        $14c0b72509d70225$var$modifiedElementMap.delete(target);\n      }\n    }\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nvar $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = (0, $bx7SL$react).createContext({\n  register: function register() {}\n});\n$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = \"PressResponderContext\";\nfunction $f6c31cce2adf654f$var$usePressResponderContext(props) {\n  // Consume context from <PressResponder> and merge with props.\n  var context = (0, $bx7SL$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n  if (context) {\n    var register = context.register,\n      contextProps = _objectWithoutProperties(context, _excluded);\n    props = (0, $bx7SL$mergeProps)(contextProps, props);\n    register();\n  }\n  (0, $bx7SL$useSyncRef)(context, props.ref);\n  return props;\n}\nvar $f6c31cce2adf654f$var$_shouldStopPropagation = /*#__PURE__*/new WeakMap();\nvar $f6c31cce2adf654f$var$PressEvent = /*#__PURE__*/function () {\n  function $f6c31cce2adf654f$var$PressEvent(type, pointerType, originalEvent) {\n    _classCallCheck(this, $f6c31cce2adf654f$var$PressEvent);\n    (0, $bx7SL$_1)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, {\n      writable: true,\n      value: void 0\n    });\n    (0, $bx7SL$_2)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, true);\n    this.type = type;\n    this.pointerType = pointerType;\n    this.target = originalEvent.currentTarget;\n    this.shiftKey = originalEvent.shiftKey;\n    this.metaKey = originalEvent.metaKey;\n    this.ctrlKey = originalEvent.ctrlKey;\n    this.altKey = originalEvent.altKey;\n  }\n  _createClass($f6c31cce2adf654f$var$PressEvent, [{\n    key: \"continuePropagation\",\n    value: function continuePropagation() {\n      (0, $bx7SL$_2)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, false);\n    }\n  }, {\n    key: \"shouldStopPropagation\",\n    get: function get() {\n      return (0, $bx7SL$_)(this, $f6c31cce2adf654f$var$_shouldStopPropagation);\n    }\n  }]);\n  return $f6c31cce2adf654f$var$PressEvent;\n}();\nvar $f6c31cce2adf654f$var$LINK_CLICKED = Symbol(\"linkClicked\");\nfunction $f6c31cce2adf654f$export$45712eceda6fad21(props) {\n  var _$f6c31cce2adf654f$va = $f6c31cce2adf654f$var$usePressResponderContext(props),\n    onPress = _$f6c31cce2adf654f$va.onPress,\n    onPressChange = _$f6c31cce2adf654f$va.onPressChange,\n    onPressStart = _$f6c31cce2adf654f$va.onPressStart,\n    onPressEnd = _$f6c31cce2adf654f$va.onPressEnd,\n    onPressUp = _$f6c31cce2adf654f$va.onPressUp,\n    isDisabled = _$f6c31cce2adf654f$va.isDisabled,\n    isPressedProp = _$f6c31cce2adf654f$va.isPressed,\n    preventFocusOnPress = _$f6c31cce2adf654f$va.preventFocusOnPress,\n    shouldCancelOnPointerExit = _$f6c31cce2adf654f$va.shouldCancelOnPointerExit,\n    allowTextSelectionOnPress = _$f6c31cce2adf654f$va.allowTextSelectionOnPress,\n    _ = _$f6c31cce2adf654f$va.ref,\n    domProps = _objectWithoutProperties(_$f6c31cce2adf654f$va, _excluded2);\n  var _ref = (0, $bx7SL$useState)(false),\n    _ref2 = _slicedToArray(_ref, 2),\n    isPressed = _ref2[0],\n    setPressed = _ref2[1];\n  var ref = (0, $bx7SL$useRef)({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    isTriggeringEvent: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n  var _ref3 = (0, $bx7SL$useGlobalListeners)(),\n    addGlobalListener = _ref3.addGlobalListener,\n    removeAllGlobalListeners = _ref3.removeAllGlobalListeners;\n  var triggerPressStart = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType) {\n    var state = ref.current;\n    if (isDisabled || state.didFirePressStart) return false;\n    var shouldStopPropagation = true;\n    state.isTriggeringEvent = true;\n    if (onPressStart) {\n      var event = new $f6c31cce2adf654f$var$PressEvent(\"pressstart\", pointerType, originalEvent);\n      onPressStart(event);\n      shouldStopPropagation = event.shouldStopPropagation;\n    }\n    if (onPressChange) onPressChange(true);\n    state.isTriggeringEvent = false;\n    state.didFirePressStart = true;\n    setPressed(true);\n    return shouldStopPropagation;\n  });\n  var triggerPressEnd = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType) {\n    var wasPressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var state = ref.current;\n    if (!state.didFirePressStart) return false;\n    state.ignoreClickAfterPress = true;\n    state.didFirePressStart = false;\n    state.isTriggeringEvent = true;\n    var shouldStopPropagation = true;\n    if (onPressEnd) {\n      var event = new $f6c31cce2adf654f$var$PressEvent(\"pressend\", pointerType, originalEvent);\n      onPressEnd(event);\n      shouldStopPropagation = event.shouldStopPropagation;\n    }\n    if (onPressChange) onPressChange(false);\n    setPressed(false);\n    if (onPress && wasPressed && !isDisabled) {\n      var _event = new $f6c31cce2adf654f$var$PressEvent(\"press\", pointerType, originalEvent);\n      onPress(_event);\n      shouldStopPropagation && (shouldStopPropagation = _event.shouldStopPropagation);\n    }\n    state.isTriggeringEvent = false;\n    return shouldStopPropagation;\n  });\n  var triggerPressUp = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType) {\n    var state = ref.current;\n    if (isDisabled) return false;\n    if (onPressUp) {\n      state.isTriggeringEvent = true;\n      var event = new $f6c31cce2adf654f$var$PressEvent(\"pressup\", pointerType, originalEvent);\n      onPressUp(event);\n      state.isTriggeringEvent = false;\n      return event.shouldStopPropagation;\n    }\n    return true;\n  });\n  var cancel = (0, $bx7SL$useEffectEvent)(function (e) {\n    var state = ref.current;\n    if (state.isPressed && state.target) {\n      if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n      state.isPressed = false;\n      state.isOverTarget = false;\n      state.activePointerId = null;\n      state.pointerType = null;\n      removeAllGlobalListeners();\n      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n    }\n  });\n  var cancelOnPointerExit = (0, $bx7SL$useEffectEvent)(function (e) {\n    if (shouldCancelOnPointerExit) cancel(e);\n  });\n  var pressProps = (0, $bx7SL$useMemo)(function () {\n    var state = ref.current;\n    var pressProps = {\n      onKeyDown: function onKeyDown(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {\n          var _state_metaKeyEvents;\n          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          var shouldStopPropagation = true;\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            shouldStopPropagation = triggerPressStart(e, \"keyboard\");\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener((0, $bx7SL$getOwnerDocument)(e.currentTarget), \"keyup\", onKeyUp, false);\n          }\n          if (shouldStopPropagation) e.stopPropagation();\n          // Keep track of the keydown events that occur while the Meta (e.g. Command) key is held.\n          // macOS has a bug where keyup events are not fired while the Meta key is down.\n          // When the Meta key itself is released we will get an event for that, and we'll act as if\n          // all of these other keys were released as well.\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1393524\n          // https://bugs.webkit.org/show_bug.cgi?id=55291\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1299553\n          if (e.metaKey && (0, $bx7SL$isMac)()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e.key, e.nativeEvent);\n        } else if (e.key === \"Meta\") state.metaKeyEvents = new Map();\n      },\n      onKeyUp: function onKeyUp(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\");\n      },\n      onClick: function onClick(e) {\n        if (e && !e.currentTarget.contains(e.target)) return;\n        if (e && e.button === 0 && !state.isTriggeringEvent && !(0, $bx7SL$openLink).isOpening) {\n          var shouldStopPropagation = true;\n          if (isDisabled) e.preventDefault();\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === \"virtual\" || (0, $bx7SL$isVirtualClick)(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n            var stopPressStart = triggerPressStart(e, \"virtual\");\n            var stopPressUp = triggerPressUp(e, \"virtual\");\n            var stopPressEnd = triggerPressEnd(e, \"virtual\");\n            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;\n          }\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n          if (shouldStopPropagation) e.stopPropagation();\n        }\n      }\n    };\n    var onKeyUp = function onKeyUp(e) {\n      var _state_metaKeyEvents;\n      if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {\n        var _state_metaKeyEvents1;\n        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n        var target = e.target;\n        var shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\", state.target.contains(target));\n        removeAllGlobalListeners();\n        if (shouldStopPropagation) e.stopPropagation();\n        // If a link was triggered with a key other than Enter, open the URL ourselves.\n        // This means the link has a role override, and the default browser behavior\n        // only applies when using the Enter key.\n        if (e.key !== \"Enter\" && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) && state.target.contains(target) && !e[$f6c31cce2adf654f$var$LINK_CLICKED]) {\n          // Store a hidden property on the event so we only trigger link click once,\n          // even if there are multiple usePress instances attached to the element.\n          e[$f6c31cce2adf654f$var$LINK_CLICKED] = true;\n          (0, $bx7SL$openLink)(state.target, e, false);\n        }\n        state.isPressed = false;\n        (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e.key);\n      } else if (e.key === \"Meta\" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {\n        var _state_target;\n        // If we recorded keydown events that occurred while the Meta key was pressed,\n        // and those haven't received keyup events already, fire keyup events ourselves.\n        // See comment above for more info about the macOS bug causing this.\n        var events = state.metaKeyEvents;\n        state.metaKeyEvents = undefined;\n        var _iterator = _createForOfIteratorHelper(events.values()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var event = _step.value;\n            (_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent(\"keyup\", event));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    };\n    if (typeof PointerEvent !== \"undefined\") {\n      pressProps.onPointerDown = function (e) {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if ((0, $bx7SL$isVirtualPointerEvent)(e.nativeEvent)) {\n          state.pointerType = \"virtual\";\n          return;\n        }\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        state.pointerType = e.pointerType;\n        var shouldStopPropagation = true;\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n          if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n          shouldStopPropagation = triggerPressStart(e, state.pointerType);\n          addGlobalListener((0, $bx7SL$getOwnerDocument)(e.currentTarget), \"pointermove\", onPointerMove, false);\n          addGlobalListener((0, $bx7SL$getOwnerDocument)(e.currentTarget), \"pointerup\", onPointerUp, false);\n          addGlobalListener((0, $bx7SL$getOwnerDocument)(e.currentTarget), \"pointercancel\", onPointerCancel, false);\n        }\n        if (shouldStopPropagation) e.stopPropagation();\n      };\n      pressProps.onMouseDown = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n          e.stopPropagation();\n        }\n      };\n      pressProps.onPointerUp = function (e) {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target) || state.pointerType === \"virtual\") return;\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n      };\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId !== state.activePointerId) return;\n        if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target)) {\n          if (!state.isOverTarget && state.pointerType != null) {\n            state.isOverTarget = true;\n            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.target && state.isOverTarget && state.pointerType != null) {\n          state.isOverTarget = false;\n          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {\n          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        }\n      };\n      var onPointerCancel = function onPointerCancel(e) {\n        cancel(e);\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = function (e) {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        if (state.ignoreEmulatedMouseEvents) {\n          e.stopPropagation();\n          return;\n        }\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = (0, $bx7SL$isVirtualClick)(e.nativeEvent) ? \"virtual\" : \"mouse\";\n        if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n        var shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        if (shouldStopPropagation) e.stopPropagation();\n        addGlobalListener((0, $bx7SL$getOwnerDocument)(e.currentTarget), \"mouseup\", onMouseUp, false);\n      };\n      pressProps.onMouseEnter = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        var shouldStopPropagation = true;\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n          state.isOverTarget = true;\n          shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        }\n        if (shouldStopPropagation) e.stopPropagation();\n      };\n      pressProps.onMouseLeave = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        var shouldStopPropagation = true;\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n          state.isOverTarget = false;\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n        if (shouldStopPropagation) e.stopPropagation();\n      };\n      pressProps.onMouseUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType || \"mouse\");\n      };\n      var onMouseUp = function onMouseUp(e) {\n        // Only handle left clicks\n        if (e.button !== 0) return;\n        state.isPressed = false;\n        removeAllGlobalListeners();\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n        if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.target && state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isOverTarget = false;\n      };\n      pressProps.onTouchStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        var touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);\n        if (!touch) return;\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = \"touch\";\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n        var shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        if (shouldStopPropagation) e.stopPropagation();\n        addGlobalListener((0, $bx7SL$getOwnerWindow)(e.currentTarget), \"scroll\", onScroll, true);\n      };\n      pressProps.onTouchMove = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.isPressed) {\n          e.stopPropagation();\n          return;\n        }\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        var shouldStopPropagation = true;\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget && state.pointerType != null) {\n            state.isOverTarget = true;\n            shouldStopPropagation = triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget && state.pointerType != null) {\n          state.isOverTarget = false;\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n        if (shouldStopPropagation) e.stopPropagation();\n      };\n      pressProps.onTouchEnd = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.isPressed) {\n          e.stopPropagation();\n          return;\n        }\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        var shouldStopPropagation = true;\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget) && state.pointerType != null) {\n          triggerPressUp(e, state.pointerType);\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n        if (shouldStopPropagation) e.stopPropagation();\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.target && !allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        removeAllGlobalListeners();\n      };\n      pressProps.onTouchCancel = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed) cancel(e);\n      };\n      var onScroll = function onScroll(e) {\n        if (state.isPressed && e.target.contains(state.target)) cancel({\n          currentTarget: state.target,\n          shiftKey: false,\n          ctrlKey: false,\n          metaKey: false,\n          altKey: false\n        });\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    }\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress, cancel, cancelOnPointerExit, triggerPressEnd, triggerPressStart, triggerPressUp]);\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  (0, $bx7SL$useEffect)(function () {\n    return function () {\n      var _ref_current_target;\n      if (!allowTextSelectionOnPress)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)((_ref_current_target = ref.current.target) !== null && _ref_current_target !== void 0 ? _ref_current_target : undefined);\n    };\n  }, [allowTextSelectionOnPress]);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: (0, $bx7SL$mergeProps)(domProps, pressProps)\n  };\n}\nfunction $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {\n  return target.tagName === \"A\" && target.hasAttribute(\"href\");\n}\nfunction $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {\n  var key = event.key,\n    code = event.code;\n  var element = currentTarget;\n  var role = element.getAttribute(\"role\");\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (key === \"Enter\" || key === \" \" || key === \"Spacebar\" || code === \"Space\") && !(element instanceof (0, $bx7SL$getOwnerWindow)(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof (0, $bx7SL$getOwnerWindow)(element).HTMLTextAreaElement || element.isContentEditable) &&\n  // Links should only trigger with Enter key\n  !((role === \"link\" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink(element)) && key !== \"Enter\");\n}\nfunction $f6c31cce2adf654f$var$getTouchFromEvent(event) {\n  var targetTouches = event.targetTouches;\n  if (targetTouches.length > 0) return targetTouches[0];\n  return null;\n}\nfunction $f6c31cce2adf654f$var$getTouchById(event, pointerId) {\n  var changedTouches = event.changedTouches;\n  for (var i = 0; i < changedTouches.length; i++) {\n    var touch = changedTouches[i];\n    if (touch.identifier === pointerId) return touch;\n  }\n  return null;\n}\nfunction $f6c31cce2adf654f$var$createEvent(target, e) {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\nfunction $f6c31cce2adf654f$var$getPointClientRect(point) {\n  var offsetX = 0;\n  var offsetY = 0;\n  if (point.width !== undefined) offsetX = point.width / 2;else if (point.radiusX !== undefined) offsetX = point.radiusX;\n  if (point.height !== undefined) offsetY = point.height / 2;else if (point.radiusY !== undefined) offsetY = point.radiusY;\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\nfunction $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) return false;\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) return false;\n  return true;\n}\nfunction $f6c31cce2adf654f$var$isOverTarget(point, target) {\n  var rect = target.getBoundingClientRect();\n  var pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);\n  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefault(target) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.hasAttribute(\"draggable\");\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {\n  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);\n  if (target instanceof HTMLButtonElement) return target.type !== \"submit\" && target.type !== \"reset\";\n  if ($f6c31cce2adf654f$var$isHTMLAnchorLink(target)) return false;\n  return true;\n}\nvar $f6c31cce2adf654f$var$nonTextInputTypes = new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction $f6c31cce2adf654f$var$isValidInputKey(target, key) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === \"checkbox\" || target.type === \"radio\" ? key === \" \" : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);\n}\nvar $3b117e43dc0ca95d$export$27c701ed9e449e99 = /*#__PURE__*/(0, $bx7SL$react).forwardRef(function (_ref4, ref) {\n  var children = _ref4.children,\n    props = _objectWithoutProperties(_ref4, _excluded3);\n  ref = (0, $bx7SL$useObjectRef)(ref);\n  var _ref5 = (0, $f6c31cce2adf654f$export$45712eceda6fad21)(_objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })),\n    pressProps = _ref5.pressProps;\n  var child = (0, $bx7SL$react).Children.only(children);\n  return /*#__PURE__*/(0, $bx7SL$react).cloneElement(child, // @ts-ignore\n  _objectSpread({\n    ref: ref\n  }, (0, $bx7SL$mergeProps)(child.props, pressProps)));\n});\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nvar $f1ab8c75478c6f73$export$3351871ee4b288b8 = /*#__PURE__*/(0, $bx7SL$react).forwardRef(function (_ref6, ref) {\n  var children = _ref6.children,\n    props = _objectWithoutProperties(_ref6, _excluded4);\n  var isRegistered = (0, $bx7SL$useRef)(false);\n  var prevContext = (0, $bx7SL$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n  ref = (0, $bx7SL$useObjectRef)(ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref));\n  var context = (0, $bx7SL$mergeProps)(prevContext || {}, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    register: function register() {\n      isRegistered.current = true;\n      if (prevContext) prevContext.register();\n    }\n  }));\n  (0, $bx7SL$useSyncRef)(prevContext, ref);\n  (0, $bx7SL$useEffect)(function () {\n    if (!isRegistered.current) {\n      console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n      isRegistered.current = true; // only warn once in strict mode.\n    }\n  }, []);\n  return /*#__PURE__*/(0, $bx7SL$react).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n});\nfunction $f1ab8c75478c6f73$export$cf75428e0b9ed1ea(_ref7) {\n  var children = _ref7.children;\n  var context = (0, $bx7SL$useMemo)(function () {\n    return {\n      register: function register() {}\n    };\n  }, []);\n  return /*#__PURE__*/(0, $bx7SL$react).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nvar $8a9cb279dc87e130$export$905e7fc544a71f36 = /*#__PURE__*/function () {\n  function $8a9cb279dc87e130$export$905e7fc544a71f36(type, nativeEvent) {\n    _classCallCheck(this, $8a9cb279dc87e130$export$905e7fc544a71f36);\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target;\n    this.currentTarget = nativeEvent.currentTarget;\n    this.relatedTarget = nativeEvent.relatedTarget;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n  _createClass($8a9cb279dc87e130$export$905e7fc544a71f36, [{\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.nativeEvent.defaultPrevented;\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n      this.nativeEvent.preventDefault();\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.nativeEvent.stopPropagation();\n      this.isPropagationStopped = function () {\n        return true;\n      };\n    }\n  }, {\n    key: \"isPropagationStopped\",\n    value: function isPropagationStopped() {\n      return false;\n    }\n  }, {\n    key: \"persist\",\n    value: function persist() {}\n  }]);\n  return $8a9cb279dc87e130$export$905e7fc544a71f36;\n}();\nfunction $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {\n  var stateRef = (0, $bx7SL$useRef)({\n    isFocused: false,\n    observer: null\n  });\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  (0, $bx7SL$useLayoutEffect)(function () {\n    var state = stateRef.current;\n    return function () {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n  var dispatchBlur = (0, $bx7SL$useEffectEvent)(function (e) {\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n  });\n  // This function is called during a React onFocus event.\n  return (0, $bx7SL$useCallback)(function (e) {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {\n      stateRef.current.isFocused = true;\n      var target = e.target;\n      var onBlurHandler = function onBlurHandler(e) {\n        stateRef.current.isFocused = false;\n        if (target.disabled)\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          dispatchBlur(new $8a9cb279dc87e130$export$905e7fc544a71f36(\"blur\", e));\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n      target.addEventListener(\"focusout\", onBlurHandler, {\n        once: true\n      });\n      stateRef.current.observer = new MutationObserver(function () {\n        if (stateRef.current.isFocused && target.disabled) {\n          var _stateRef_current_observer;\n          (_stateRef_current_observer = stateRef.current.observer) === null || _stateRef_current_observer === void 0 ? void 0 : _stateRef_current_observer.disconnect();\n          var relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent(\"blur\", {\n            relatedTarget: relatedTargetEl\n          }));\n          target.dispatchEvent(new FocusEvent(\"focusout\", {\n            bubbles: true,\n            relatedTarget: relatedTargetEl\n          }));\n        }\n      });\n      stateRef.current.observer.observe(target, {\n        attributes: true,\n        attributeFilter: [\"disabled\"]\n      });\n    }\n  }, [dispatchBlur]);\n}\nfunction $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {\n  var isDisabled = props.isDisabled,\n    onFocusProp = props.onFocus,\n    onBlurProp = props.onBlur,\n    onFocusChange = props.onFocusChange;\n  var onBlur = (0, $bx7SL$useCallback)(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) onBlurProp(e);\n      if (onFocusChange) onFocusChange(false);\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n  var onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);\n  var onFocus = (0, $bx7SL$useCallback)(function (e) {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (e.target === e.currentTarget && document.activeElement === e.target) {\n      if (onFocusProp) onFocusProp(e);\n      if (onFocusChange) onFocusChange(true);\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n  return {\n    focusProps: {\n      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : undefined,\n      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : undefined\n    }\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nvar $507fabe10e71c6fb$var$currentModality = null;\nvar $507fabe10e71c6fb$var$changeHandlers = new Set();\nvar $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;\nvar $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\nvar $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\n// Only Tab or Esc keys will make focus visible on text input elements\nvar $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {\n  var _iterator2 = _createForOfIteratorHelper($507fabe10e71c6fb$var$changeHandlers),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var handler = _step2.value;\n      handler(modality, e);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\n/**\r\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\r\n */\nfunction $507fabe10e71c6fb$var$isValidKey(e) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || !(0, $bx7SL$isMac)() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nfunction $507fabe10e71c6fb$var$handleKeyboardEvent(e) {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n  if ($507fabe10e71c6fb$var$isValidKey(e)) {\n    $507fabe10e71c6fb$var$currentModality = \"keyboard\";\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction $507fabe10e71c6fb$var$handlePointerEvent(e) {\n  $507fabe10e71c6fb$var$currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction $507fabe10e71c6fb$var$handleClickEvent(e) {\n  if ((0, $bx7SL$isVirtualClick)(e)) {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$currentModality = \"virtual\";\n  }\n}\nfunction $507fabe10e71c6fb$var$handleFocusEvent(e) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) return;\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {\n    $507fabe10e71c6fb$var$currentModality = \"virtual\";\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"virtual\", e);\n  }\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\n}\nfunction $507fabe10e71c6fb$var$handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;\n}\n/**\r\n * Setup global event listeners to control when keyboard focus style should be visible.\r\n */\nfunction $507fabe10e71c6fb$var$setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || $507fabe10e71c6fb$var$hasSetupGlobalListeners) return;\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  var focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n  document.addEventListener(\"keydown\", $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener(\"keyup\", $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener(\"click\", $507fabe10e71c6fb$var$handleClickEvent, true);\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", $507fabe10e71c6fb$var$handleFocusEvent, true);\n  window.addEventListener(\"blur\", $507fabe10e71c6fb$var$handleWindowBlur, false);\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"pointermove\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"pointerup\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n  } else {\n    document.addEventListener(\"mousedown\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"mousemove\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"mouseup\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n  }\n  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;\n}\nif (typeof document !== \"undefined\") {\n  if (document.readyState !== \"loading\") $507fabe10e71c6fb$var$setupGlobalFocusEvents();else document.addEventListener(\"DOMContentLoaded\", $507fabe10e71c6fb$var$setupGlobalFocusEvents);\n}\nfunction $507fabe10e71c6fb$export$b9b3dfddab17db27() {\n  return $507fabe10e71c6fb$var$currentModality !== \"pointer\";\n}\nfunction $507fabe10e71c6fb$export$630ff653c5ada6a9() {\n  return $507fabe10e71c6fb$var$currentModality;\n}\nfunction $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {\n  $507fabe10e71c6fb$var$currentModality = modality;\n  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);\n}\nfunction $507fabe10e71c6fb$export$98e20ec92f614cfe() {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  var _ref8 = (0, $bx7SL$useState)($507fabe10e71c6fb$var$currentModality),\n    _ref9 = _slicedToArray(_ref8, 2),\n    modality = _ref9[0],\n    setModality = _ref9[1];\n  (0, $bx7SL$useEffect)(function () {\n    var handler = function handler() {\n      setModality($507fabe10e71c6fb$var$currentModality);\n    };\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, []);\n  return (0, $bx7SL$useIsSSR)() ? null : modality;\n}\nvar $507fabe10e71c6fb$var$nonTextInputTypes = new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\n/**\r\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\r\n * focus visible style can be properly set.\r\n */\nfunction $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {\n  var _e_target;\n  isTextInput = isTextInput || (e === null || e === void 0 ? void 0 : e.target) instanceof HTMLInputElement && !$507fabe10e71c6fb$var$nonTextInputTypes.has(e === null || e === void 0 ? void 0 : (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.type) || (e === null || e === void 0 ? void 0 : e.target) instanceof HTMLTextAreaElement || (e === null || e === void 0 ? void 0 : e.target) instanceof HTMLElement && (e === null || e === void 0 ? void 0 : e.target.isContentEditable);\n  return !(isTextInput && modality === \"keyboard\" && e instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\nfunction $507fabe10e71c6fb$export$ffd9e5021c1fb2d6() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isTextInput = props.isTextInput,\n    autoFocus = props.autoFocus;\n  var _ref10 = (0, $bx7SL$useState)(autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()),\n    _ref11 = _slicedToArray(_ref10, 2),\n    isFocusVisibleState = _ref11[0],\n    setFocusVisible = _ref11[1];\n  $507fabe10e71c6fb$export$ec71b4b83ac08ec3(function (isFocusVisible) {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {\n    isTextInput: isTextInput\n  });\n  return {\n    isFocusVisible: isFocusVisibleState\n  };\n}\nfunction $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  (0, $bx7SL$useEffect)(function () {\n    var handler = function handler(modality, e) {\n      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(!!(opts === null || opts === void 0 ? void 0 : opts.isTextInput), modality, e)) return;\n      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());\n    };\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nfunction $9ab94262bd0047c7$export$420e68273165f4ec(props) {\n  var isDisabled = props.isDisabled,\n    onBlurWithin = props.onBlurWithin,\n    onFocusWithin = props.onFocusWithin,\n    onFocusWithinChange = props.onFocusWithinChange;\n  var state = (0, $bx7SL$useRef)({\n    isFocusWithin: false\n  });\n  var onBlur = (0, $bx7SL$useCallback)(function (e) {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n      state.current.isFocusWithin = false;\n      if (onBlurWithin) onBlurWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(false);\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n  var onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);\n  var onFocus = (0, $bx7SL$useCallback)(function (e) {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (!state.current.isFocusWithin && document.activeElement === e.target) {\n      if (onFocusWithin) onFocusWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(true);\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n  if (isDisabled) return {\n    focusWithinProps: {\n      // These should not have been null, that would conflict in mergeProps\n      onFocus: undefined,\n      onBlur: undefined\n    }\n  };\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nvar $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\nvar $6179b936705e76d3$var$hoverCount = 0;\nfunction $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {\n  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(function () {\n    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\nfunction $6179b936705e76d3$var$handleGlobalPointerEvent(e) {\n  if (e.pointerType === \"touch\") $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();\n}\nfunction $6179b936705e76d3$var$setupGlobalTouchEvents() {\n  if (typeof document === \"undefined\") return;\n  if (typeof PointerEvent !== \"undefined\") document.addEventListener(\"pointerup\", $6179b936705e76d3$var$handleGlobalPointerEvent);else document.addEventListener(\"touchend\", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  $6179b936705e76d3$var$hoverCount++;\n  return function () {\n    $6179b936705e76d3$var$hoverCount--;\n    if ($6179b936705e76d3$var$hoverCount > 0) return;\n    if (typeof PointerEvent !== \"undefined\") document.removeEventListener(\"pointerup\", $6179b936705e76d3$var$handleGlobalPointerEvent);else document.removeEventListener(\"touchend\", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  };\n}\nfunction $6179b936705e76d3$export$ae780daf29e6d456(props) {\n  var onHoverStart = props.onHoverStart,\n    onHoverChange = props.onHoverChange,\n    onHoverEnd = props.onHoverEnd,\n    isDisabled = props.isDisabled;\n  var _ref12 = (0, $bx7SL$useState)(false),\n    _ref13 = _slicedToArray(_ref12, 2),\n    isHovered = _ref13[0],\n    setHovered = _ref13[1];\n  var state = (0, $bx7SL$useRef)({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: \"\",\n    target: null\n  }).current;\n  (0, $bx7SL$useEffect)($6179b936705e76d3$var$setupGlobalTouchEvents, []);\n  var _ref14 = (0, $bx7SL$useMemo)(function () {\n      var triggerHoverStart = function triggerHoverStart(event, pointerType) {\n        state.pointerType = pointerType;\n        if (isDisabled || pointerType === \"touch\" || state.isHovered || !event.currentTarget.contains(event.target)) return;\n        state.isHovered = true;\n        var target = event.currentTarget;\n        state.target = target;\n        if (onHoverStart) onHoverStart({\n          type: \"hoverstart\",\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(true);\n        setHovered(true);\n      };\n      var triggerHoverEnd = function triggerHoverEnd(event, pointerType) {\n        state.pointerType = \"\";\n        state.target = null;\n        if (pointerType === \"touch\" || !state.isHovered) return;\n        state.isHovered = false;\n        var target = event.currentTarget;\n        if (onHoverEnd) onHoverEnd({\n          type: \"hoverend\",\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(false);\n        setHovered(false);\n      };\n      var hoverProps = {};\n      if (typeof PointerEvent !== \"undefined\") {\n        hoverProps.onPointerEnter = function (e) {\n          if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === \"mouse\") return;\n          triggerHoverStart(e, e.pointerType);\n        };\n        hoverProps.onPointerLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n        };\n      } else {\n        hoverProps.onTouchStart = function () {\n          state.ignoreEmulatedMouseEvents = true;\n        };\n        hoverProps.onMouseEnter = function (e) {\n          if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, \"mouse\");\n          state.ignoreEmulatedMouseEvents = false;\n        };\n        hoverProps.onMouseLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, \"mouse\");\n        };\n      }\n      return {\n        hoverProps: hoverProps,\n        triggerHoverEnd: triggerHoverEnd\n      };\n    }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]),\n    hoverProps = _ref14.hoverProps,\n    triggerHoverEnd = _ref14.triggerHoverEnd;\n  (0, $bx7SL$useEffect)(function () {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) triggerHoverEnd({\n      currentTarget: state.target\n    }, state.pointerType);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n  return {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nfunction $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {\n  var ref = props.ref,\n    onInteractOutside = props.onInteractOutside,\n    isDisabled = props.isDisabled,\n    onInteractOutsideStart = props.onInteractOutsideStart;\n  var stateRef = (0, $bx7SL$useRef)({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  var onPointerDown = (0, $bx7SL$useEffectEvent)(function (e) {\n    if (onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n      if (onInteractOutsideStart) onInteractOutsideStart(e);\n      stateRef.current.isPointerDown = true;\n    }\n  });\n  var triggerInteractOutside = (0, $bx7SL$useEffectEvent)(function (e) {\n    if (onInteractOutside) onInteractOutside(e);\n  });\n  (0, $bx7SL$useEffect)(function () {\n    var state = stateRef.current;\n    if (isDisabled) return;\n    var element = ref.current;\n    var documentObject = (0, $bx7SL$getOwnerDocument)(element);\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== \"undefined\") {\n      var onPointerUp = function onPointerUp(e) {\n        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      // changing these to capture phase fixed combobox\n      documentObject.addEventListener(\"pointerdown\", onPointerDown, true);\n      documentObject.addEventListener(\"pointerup\", onPointerUp, true);\n      return function () {\n        documentObject.removeEventListener(\"pointerdown\", onPointerDown, true);\n        documentObject.removeEventListener(\"pointerup\", onPointerUp, true);\n      };\n    } else {\n      var onMouseUp = function onMouseUp(e) {\n        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;else if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      documentObject.addEventListener(\"mousedown\", onPointerDown, true);\n      documentObject.addEventListener(\"mouseup\", onMouseUp, true);\n      documentObject.addEventListener(\"touchstart\", onPointerDown, true);\n      documentObject.addEventListener(\"touchend\", onTouchEnd, true);\n      return function () {\n        documentObject.removeEventListener(\"mousedown\", onPointerDown, true);\n        documentObject.removeEventListener(\"mouseup\", onMouseUp, true);\n        documentObject.removeEventListener(\"touchstart\", onPointerDown, true);\n        documentObject.removeEventListener(\"touchend\", onTouchEnd, true);\n      };\n    }\n  }, [ref, isDisabled, onPointerDown, triggerInteractOutside]);\n}\nfunction $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {\n  if (event.button > 0) return false;\n  if (event.target) {\n    // if the event target is no longer in the document, ignore\n    var ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;\n    // If the target is within a top layer element (e.g. toasts), ignore.\n    if (event.target.closest(\"[data-react-aria-top-layer]\")) return false;\n  }\n  return ref.current && !ref.current.contains(event.target);\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\nfunction $93925083ecbb358c$export$48d1ea6320830260(handler) {\n  if (!handler) return undefined;\n  var shouldStopPropagation = true;\n  return function (e) {\n    var event = _objectSpread(_objectSpread({}, e), {}, {\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented: function isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation: function stopPropagation() {\n        console.error(\"stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.\");\n      },\n      continuePropagation: function continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    });\n    handler(event);\n    if (shouldStopPropagation) e.stopPropagation();\n  };\n}\nfunction $46d819fcbaf35654$export$8f71654801c2f7cd(props) {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyDown),\n      onKeyUp: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyUp)\n    }\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $e8a7022cf87cba2a$export$36da96379f79f245(props) {\n  var onMoveStart = props.onMoveStart,\n    onMove = props.onMove,\n    onMoveEnd = props.onMoveEnd;\n  var state = (0, $bx7SL$useRef)({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n  var _ref15 = (0, $bx7SL$useGlobalListeners)(),\n    addGlobalListener = _ref15.addGlobalListener,\n    removeGlobalListener = _ref15.removeGlobalListener;\n  var move = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType, deltaX, deltaY) {\n    if (deltaX === 0 && deltaY === 0) return;\n    if (!state.current.didMove) {\n      state.current.didMove = true;\n      onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({\n        type: \"movestart\",\n        pointerType: pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n    onMove === null || onMove === void 0 ? void 0 : onMove({\n      type: \"move\",\n      pointerType: pointerType,\n      deltaX: deltaX,\n      deltaY: deltaY,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n  });\n  var end = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType) {\n    (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)();\n    if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({\n      type: \"moveend\",\n      pointerType: pointerType,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n  });\n  var moveProps = (0, $bx7SL$useMemo)(function () {\n    var moveProps = {};\n    var start = function start() {\n      (0, $14c0b72509d70225$export$16a4697467175487)();\n      state.current.didMove = false;\n    };\n    if (typeof PointerEvent === \"undefined\") {\n      var onMouseMove = function onMouseMove(e) {\n        if (e.button === 0) {\n          var _state_current_lastPosition, _state_current_lastPosition1;\n          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;\n          move(e, \"mouse\", e.pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), e.pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button === 0) {\n          end(e, \"mouse\");\n          removeGlobalListener(window, \"mousemove\", onMouseMove, false);\n          removeGlobalListener(window, \"mouseup\", onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = function (e) {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, \"mousemove\", onMouseMove, false);\n          addGlobalListener(window, \"mouseup\", onMouseUp, false);\n        }\n      };\n      var onTouchMove = function onTouchMove(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref16) {\n          var identifier = _ref16.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          var _state_current_lastPosition, _state_current_lastPosition1;\n          var _e$changedTouches$tou = e.changedTouches[touch],\n            pageX = _e$changedTouches$tou.pageX,\n            pageY = _e$changedTouches$tou.pageY;\n          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;\n          move(e, \"touch\", pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));\n          state.current.lastPosition = {\n            pageX: pageX,\n            pageY: pageY\n          };\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref17) {\n          var identifier = _ref17.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          end(e, \"touch\");\n          state.current.id = null;\n          removeGlobalListener(window, \"touchmove\", onTouchMove);\n          removeGlobalListener(window, \"touchend\", onTouchEnd);\n          removeGlobalListener(window, \"touchcancel\", onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = function (e) {\n        if (e.changedTouches.length === 0 || state.current.id != null) return;\n        var _e$changedTouches$ = e.changedTouches[0],\n          pageX = _e$changedTouches$.pageX,\n          pageY = _e$changedTouches$.pageY,\n          identifier = _e$changedTouches$.identifier;\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX: pageX,\n          pageY: pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, \"touchmove\", onTouchMove, false);\n        addGlobalListener(window, \"touchend\", onTouchEnd, false);\n        addGlobalListener(window, \"touchcancel\", onTouchEnd, false);\n      };\n    } else {\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId === state.current.id) {\n          var _state_current_lastPosition, _state_current_lastPosition1;\n          var pointerType = e.pointerType || \"mouse\";\n          var _state_current_lastPosition_pageX, _state_current_lastPosition_pageY;\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - ((_state_current_lastPosition_pageX = (_state_current_lastPosition = state.current.lastPosition) === null || _state_current_lastPosition === void 0 ? void 0 : _state_current_lastPosition.pageX) !== null && _state_current_lastPosition_pageX !== void 0 ? _state_current_lastPosition_pageX : 0), e.pageY - ((_state_current_lastPosition_pageY = (_state_current_lastPosition1 = state.current.lastPosition) === null || _state_current_lastPosition1 === void 0 ? void 0 : _state_current_lastPosition1.pageY) !== null && _state_current_lastPosition_pageY !== void 0 ? _state_current_lastPosition_pageY : 0));\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || \"mouse\";\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, \"pointermove\", onPointerMove, false);\n          removeGlobalListener(window, \"pointerup\", onPointerUp, false);\n          removeGlobalListener(window, \"pointercancel\", onPointerUp, false);\n        }\n      };\n      moveProps.onPointerDown = function (e) {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          state.current.id = e.pointerId;\n          addGlobalListener(window, \"pointermove\", onPointerMove, false);\n          addGlobalListener(window, \"pointerup\", onPointerUp, false);\n          addGlobalListener(window, \"pointercancel\", onPointerUp, false);\n        }\n      };\n    }\n    var triggerKeyboardMove = function triggerKeyboardMove(e, deltaX, deltaY) {\n      start();\n      move(e, \"keyboard\", deltaX, deltaY);\n      end(e, \"keyboard\");\n    };\n    moveProps.onKeyDown = function (e) {\n      switch (e.key) {\n        case \"Left\":\n        case \"ArrowLeft\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case \"Right\":\n        case \"ArrowRight\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case \"Up\":\n        case \"ArrowUp\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case \"Down\":\n        case \"ArrowDown\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n    return moveProps;\n  }, [state, addGlobalListener, removeGlobalListener, move, end]);\n  return {\n    moveProps: moveProps\n  };\n}\n\n/*\r\n * Copyright 2021 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {\n  var onScroll = props.onScroll,\n    isDisabled = props.isDisabled;\n  var onScrollHandler = (0, $bx7SL$useCallback)(function (e) {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) return;\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n    if (onScroll) onScroll({\n      deltaX: e.deltaX,\n      deltaY: e.deltaY\n    });\n  }, [onScroll]);\n  (0, $bx7SL$useEvent)(ref, \"wheel\", isDisabled ? undefined : onScrollHandler);\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nvar $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n  var isDisabled = props.isDisabled,\n    onLongPressStart = props.onLongPressStart,\n    onLongPressEnd = props.onLongPressEnd,\n    onLongPress = props.onLongPress,\n    _props$threshold = props.threshold,\n    threshold = _props$threshold === void 0 ? $8a26561d2877236e$var$DEFAULT_THRESHOLD : _props$threshold,\n    accessibilityDescription = props.accessibilityDescription;\n  var timeRef = (0, $bx7SL$useRef)();\n  var _ref18 = (0, $bx7SL$useGlobalListeners)(),\n    addGlobalListener = _ref18.addGlobalListener,\n    removeGlobalListener = _ref18.removeGlobalListener;\n  var _ref19 = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({\n      isDisabled: isDisabled,\n      onPressStart: function onPressStart(e) {\n        e.continuePropagation();\n        if (e.pointerType === \"mouse\" || e.pointerType === \"touch\") {\n          if (onLongPressStart) onLongPressStart(_objectSpread(_objectSpread({}, e), {}, {\n            type: \"longpressstart\"\n          }));\n          timeRef.current = setTimeout(function () {\n            // Prevent other usePress handlers from also handling this event.\n            e.target.dispatchEvent(new PointerEvent(\"pointercancel\", {\n              bubbles: true\n            }));\n            if (onLongPress) onLongPress(_objectSpread(_objectSpread({}, e), {}, {\n              type: \"longpress\"\n            }));\n            timeRef.current = undefined;\n          }, threshold);\n          // Prevent context menu, which may be opened on long press on touch devices\n          if (e.pointerType === \"touch\") {\n            var onContextMenu = function onContextMenu(e) {\n              e.preventDefault();\n            };\n            addGlobalListener(e.target, \"contextmenu\", onContextMenu, {\n              once: true\n            });\n            addGlobalListener(window, \"pointerup\", function () {\n              // If no contextmenu event is fired quickly after pointerup, remove the handler\n              // so future context menu events outside a long press are not prevented.\n              setTimeout(function () {\n                removeGlobalListener(e.target, \"contextmenu\", onContextMenu);\n              }, 30);\n            }, {\n              once: true\n            });\n          }\n        }\n      },\n      onPressEnd: function onPressEnd(e) {\n        if (timeRef.current) clearTimeout(timeRef.current);\n        if (onLongPressEnd && (e.pointerType === \"mouse\" || e.pointerType === \"touch\")) onLongPressEnd(_objectSpread(_objectSpread({}, e), {}, {\n          type: \"longpressend\"\n        }));\n      }\n    }),\n    pressProps = _ref19.pressProps;\n  var descriptionProps = (0, $bx7SL$useDescription)(onLongPress && !isDisabled ? accessibilityDescription : undefined);\n  return {\n    longPressProps: (0, $bx7SL$mergeProps)(pressProps, descriptionProps)\n  };\n}\nexport { $3b117e43dc0ca95d$export$27c701ed9e449e99 as Pressable, $f1ab8c75478c6f73$export$3351871ee4b288b8 as PressResponder, $f1ab8c75478c6f73$export$cf75428e0b9ed1ea as ClearPressResponder, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6 as useFocus, $507fabe10e71c6fb$export$b9b3dfddab17db27 as isFocusVisible, $507fabe10e71c6fb$export$630ff653c5ada6a9 as getInteractionModality, $507fabe10e71c6fb$export$8397ddfc504fdb9a as setInteractionModality, $507fabe10e71c6fb$export$98e20ec92f614cfe as useInteractionModality, $507fabe10e71c6fb$export$ffd9e5021c1fb2d6 as useFocusVisible, $507fabe10e71c6fb$export$ec71b4b83ac08ec3 as useFocusVisibleListener, $9ab94262bd0047c7$export$420e68273165f4ec as useFocusWithin, $6179b936705e76d3$export$ae780daf29e6d456 as useHover, $e0b6e0b68ec7f50f$export$872b660ac5a1ff98 as useInteractOutside, $46d819fcbaf35654$export$8f71654801c2f7cd as useKeyboard, $e8a7022cf87cba2a$export$36da96379f79f245 as useMove, $f6c31cce2adf654f$export$45712eceda6fad21 as usePress, $7d0a636d7a4dcefd$export$2123ff2b87c81ca as useScrollWheel, $8a26561d2877236e$export$c24ed0104d07eab9 as useLongPress };","map":{"version":3,"names":["$14c0b72509d70225$var$state","$14c0b72509d70225$var$savedUserSelect","$14c0b72509d70225$var$modifiedElementMap","WeakMap","$14c0b72509d70225$export$16a4697467175487","target","$bx7SL$isIOS","documentObject","$bx7SL$getOwnerDocument","documentElement","style","webkitUserSelect","HTMLElement","SVGElement","set","userSelect","$14c0b72509d70225$export$b0d6fa1ab32e3295","setTimeout","$bx7SL$runAfterTransition","has","targetOldUserSelect","get","getAttribute","removeAttribute","delete","$ae1eeba8b9eafd08$export$5165eccb35aaadb5","$bx7SL$react","createContext","register","displayName","$f6c31cce2adf654f$var$usePressResponderContext","props","context","$bx7SL$useContext","contextProps","_objectWithoutProperties","_excluded","$bx7SL$mergeProps","$bx7SL$useSyncRef","ref","$f6c31cce2adf654f$var$_shouldStopPropagation","$f6c31cce2adf654f$var$PressEvent","type","pointerType","originalEvent","_classCallCheck","$bx7SL$_1","currentTarget","shiftKey","metaKey","ctrlKey","altKey","_createClass","key","value","continuePropagation","$bx7SL$_","$f6c31cce2adf654f$var$LINK_CLICKED","Symbol","$f6c31cce2adf654f$export$45712eceda6fad21","_$f6c31cce2adf654f$va","onPress","onPressChange","onPressStart","onPressEnd","onPressUp","isDisabled","isPressedProp","isPressed","preventFocusOnPress","shouldCancelOnPointerExit","allowTextSelectionOnPress","_","domProps","_excluded2","_ref","$bx7SL$useState","_ref2","_slicedToArray","setPressed","$bx7SL$useRef","ignoreEmulatedMouseEvents","ignoreClickAfterPress","didFirePressStart","isTriggeringEvent","activePointerId","isOverTarget","_ref3","$bx7SL$useGlobalListeners","addGlobalListener","removeAllGlobalListeners","triggerPressStart","$bx7SL$useEffectEvent","state","current","shouldStopPropagation","event","triggerPressEnd","wasPressed","arguments","length","undefined","triggerPressUp","cancel","e","$f6c31cce2adf654f$var$createEvent","cancelOnPointerExit","pressProps","$bx7SL$useMemo","onKeyDown","$f6c31cce2adf654f$var$isValidKeyboardEvent","nativeEvent","contains","_state_metaKeyEvents","$f6c31cce2adf654f$var$shouldPreventDefaultKeyboard","preventDefault","repeat","onKeyUp","stopPropagation","$bx7SL$isMac","metaKeyEvents","Map","onClick","button","$bx7SL$openLink","isOpening","$bx7SL$isVirtualClick","$bx7SL$focusWithoutScrolling","stopPressStart","stopPressUp","stopPressEnd","_state_metaKeyEvents1","$f6c31cce2adf654f$var$isHTMLAnchorLink","size","_state_target","events","_iterator","_createForOfIteratorHelper","values","_step","s","n","done","dispatchEvent","KeyboardEvent","err","f","PointerEvent","onPointerDown","$bx7SL$isVirtualPointerEvent","$f6c31cce2adf654f$var$shouldPreventDefault","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","$f6c31cce2adf654f$var$isOverTarget","onDragStart","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","$f6c31cce2adf654f$var$getTouchFromEvent","identifier","$bx7SL$getOwnerWindow","onScroll","onTouchMove","$f6c31cce2adf654f$var$getTouchById","onTouchEnd","onTouchCancel","$bx7SL$useEffect","_ref_current_target","tagName","hasAttribute","code","element","role","HTMLInputElement","$f6c31cce2adf654f$var$isValidInputKey","HTMLTextAreaElement","isContentEditable","targetTouches","changedTouches","i","$f6c31cce2adf654f$var$getPointClientRect","point","offsetX","offsetY","width","radiusX","height","radiusY","top","clientY","right","clientX","bottom","left","$f6c31cce2adf654f$var$areRectanglesOverlapping","a","b","rect","getBoundingClientRect","pointRect","HTMLButtonElement","$f6c31cce2adf654f$var$nonTextInputTypes","Set","$3b117e43dc0ca95d$export$27c701ed9e449e99","forwardRef","_ref4","children","_excluded3","$bx7SL$useObjectRef","_ref5","_objectSpread","child","Children","only","cloneElement","$f1ab8c75478c6f73$export$3351871ee4b288b8","_ref6","_excluded4","isRegistered","prevContext","console","warn","createElement","Provider","$f1ab8c75478c6f73$export$cf75428e0b9ed1ea","_ref7","$8a9cb279dc87e130$export$905e7fc544a71f36","relatedTarget","bubbles","cancelable","defaultPrevented","eventPhase","isTrusted","timeStamp","isDefaultPrevented","isPropagationStopped","persist","$8a9cb279dc87e130$export$715c682d09d639cc","onBlur","stateRef","isFocused","observer","$bx7SL$useLayoutEffect","disconnect","dispatchBlur","$bx7SL$useCallback","HTMLSelectElement","onBlurHandler","disabled","addEventListener","once","MutationObserver","_stateRef_current_observer","relatedTargetEl","document","activeElement","FocusEvent","observe","attributes","attributeFilter","$a1ea59d68270f0dd$export$f8168d8dd8fd66e6","onFocusProp","onFocus","onBlurProp","onFocusChange","onSyntheticFocus","focusProps","$507fabe10e71c6fb$var$currentModality","$507fabe10e71c6fb$var$changeHandlers","$507fabe10e71c6fb$var$hasSetupGlobalListeners","$507fabe10e71c6fb$var$hasEventBeforeFocus","$507fabe10e71c6fb$var$hasBlurredWindowRecently","$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","$507fabe10e71c6fb$var$triggerChangeHandlers","modality","_iterator2","_step2","handler","$507fabe10e71c6fb$var$isValidKey","$507fabe10e71c6fb$var$handleKeyboardEvent","$507fabe10e71c6fb$var$handlePointerEvent","$507fabe10e71c6fb$var$handleClickEvent","$507fabe10e71c6fb$var$handleFocusEvent","window","$507fabe10e71c6fb$var$handleWindowBlur","$507fabe10e71c6fb$var$setupGlobalFocusEvents","focus","prototype","apply","readyState","$507fabe10e71c6fb$export$b9b3dfddab17db27","$507fabe10e71c6fb$export$630ff653c5ada6a9","$507fabe10e71c6fb$export$8397ddfc504fdb9a","$507fabe10e71c6fb$export$98e20ec92f614cfe","_ref8","_ref9","setModality","add","$bx7SL$useIsSSR","$507fabe10e71c6fb$var$nonTextInputTypes","$507fabe10e71c6fb$var$isKeyboardFocusEvent","isTextInput","_e_target","$507fabe10e71c6fb$export$ffd9e5021c1fb2d6","autoFocus","_ref10","_ref11","isFocusVisibleState","setFocusVisible","$507fabe10e71c6fb$export$ec71b4b83ac08ec3","isFocusVisible","fn","deps","opts","$9ab94262bd0047c7$export$420e68273165f4ec","onBlurWithin","onFocusWithin","onFocusWithinChange","isFocusWithin","focusWithinProps","$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$hoverCount","$6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$handleGlobalPointerEvent","$6179b936705e76d3$var$setupGlobalTouchEvents","removeEventListener","$6179b936705e76d3$export$ae780daf29e6d456","onHoverStart","onHoverChange","onHoverEnd","_ref12","_ref13","isHovered","setHovered","_ref14","triggerHoverStart","triggerHoverEnd","hoverProps","onPointerEnter","onPointerLeave","$e0b6e0b68ec7f50f$export$872b660ac5a1ff98","onInteractOutside","onInteractOutsideStart","isPointerDown","$e0b6e0b68ec7f50f$var$isValidEvent","triggerInteractOutside","ownerDocument","closest","$93925083ecbb358c$export$48d1ea6320830260","error","$46d819fcbaf35654$export$8f71654801c2f7cd","keyboardProps","$e8a7022cf87cba2a$export$36da96379f79f245","onMoveStart","onMove","onMoveEnd","didMove","lastPosition","id","_ref15","removeGlobalListener","move","deltaX","deltaY","end","moveProps","start","onMouseMove","_state_current_lastPosition","_state_current_lastPosition1","_state_current_lastPosition_pageX","_state_current_lastPosition_pageY","pageX","pageY","_toConsumableArray","findIndex","_ref16","_e$changedTouches$tou","_ref17","_e$changedTouches$","triggerKeyboardMove","$7d0a636d7a4dcefd$export$2123ff2b87c81ca","onScrollHandler","$bx7SL$useEvent","$8a26561d2877236e$var$DEFAULT_THRESHOLD","$8a26561d2877236e$export$c24ed0104d07eab9","onLongPressStart","onLongPressEnd","onLongPress","_props$threshold","threshold","accessibilityDescription","timeRef","_ref18","_ref19","onContextMenu","clearTimeout","descriptionProps","$bx7SL$useDescription","longPressProps"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\Pressable.tsx","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\usePress.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\textSelection.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\context.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\PressResponder.tsx","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocus.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\utils.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusVisible.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusWithin.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useHover.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useInteractOutside.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useKeyboard.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\createEventHandler.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useMove.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useScrollWheel.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useLongPress.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {Pressable} from './Pressable';\nexport {PressResponder, ClearPressResponder} from './PressResponder';\nexport {useFocus} from './useFocus';\nexport {\n  isFocusVisible,\n  getInteractionModality,\n  setInteractionModality,\n  useInteractionModality,\n  useFocusVisible,\n  useFocusVisibleListener\n} from './useFocusVisible';\nexport {useFocusWithin} from './useFocusWithin';\nexport {useHover} from './useHover';\nexport {useInteractOutside} from './useInteractOutside';\nexport {useKeyboard} from './useKeyboard';\nexport {useMove} from './useMove';\nexport {usePress} from './usePress';\nexport {useScrollWheel} from './useScrollWheel';\nexport {useLongPress} from './useLongPress';\n\nexport type {FocusProps, FocusResult} from './useFocus';\nexport type {FocusVisibleHandler, FocusVisibleProps, FocusVisibleResult, Modality} from './useFocusVisible';\nexport type {FocusWithinProps, FocusWithinResult} from './useFocusWithin';\nexport type {HoverProps, HoverResult} from './useHover';\nexport type {InteractOutsideProps} from './useInteractOutside';\nexport type {KeyboardProps, KeyboardResult} from './useKeyboard';\nexport type {PressProps, PressHookProps, PressResult} from './usePress';\nexport type {PressEvent, PressEvents, MoveStartEvent, MoveMoveEvent, MoveEndEvent, MoveEvents, HoverEvent, HoverEvents, FocusEvents, KeyboardEvents} from '@react-types/shared';\nexport type {MoveResult} from './useMove';\nexport type {LongPressProps, LongPressResult} from './useLongPress';\nexport type {ScrollWheelProps} from './useScrollWheel';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {ForwardedRef, ReactElement} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: ForwardedRef<HTMLElement>) => {\n  ref = useObjectRef(ref);\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {DOMAttributes, FocusableElement, PressEvent as IPressEvent, PointerType, PressEvents} from '@react-types/shared';\nimport {focusWithoutScrolling, getOwnerDocument, getOwnerWindow, isMac, isVirtualClick, isVirtualPointerEvent, mergeProps, openLink, useEffectEvent, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {PressResponderContext} from './context';\nimport {RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<Element>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  isTriggeringEvent: boolean,\n  activePointerId: any,\n  target: FocusableElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType | null,\n  userSelect?: string,\n  metaKeyEvents?: Map<string, KeyboardEvent>\n}\n\ninterface EventBase {\n  currentTarget: EventTarget | null,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: DOMAttributes\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\nclass PressEvent implements IPressEvent {\n  type: IPressEvent['type'];\n  pointerType: PointerType;\n  target: Element;\n  shiftKey: boolean;\n  ctrlKey: boolean;\n  metaKey: boolean;\n  altKey: boolean;\n  #shouldStopPropagation = true;\n\n  constructor(type: IPressEvent['type'], pointerType: PointerType, originalEvent: EventBase) {\n    this.type = type;\n    this.pointerType = pointerType;\n    this.target = originalEvent.currentTarget as Element;\n    this.shiftKey = originalEvent.shiftKey;\n    this.metaKey = originalEvent.metaKey;\n    this.ctrlKey = originalEvent.ctrlKey;\n    this.altKey = originalEvent.altKey;\n  }\n\n  continuePropagation() {\n    this.#shouldStopPropagation = false;\n  }\n\n  get shouldStopPropagation() {\n    return this.#shouldStopPropagation;\n  }\n}\n\nconst LINK_CLICKED = Symbol('linkClicked');\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    isTriggeringEvent: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let triggerPressStart = useEffectEvent((originalEvent: EventBase, pointerType: PointerType) => {\n    let state = ref.current;\n    if (isDisabled || state.didFirePressStart) {\n      return false;\n    }\n\n    let shouldStopPropagation = true;\n    state.isTriggeringEvent = true;\n    if (onPressStart) {\n      let event = new PressEvent('pressstart', pointerType, originalEvent);\n      onPressStart(event);\n      shouldStopPropagation = event.shouldStopPropagation;\n    }\n\n    if (onPressChange) {\n      onPressChange(true);\n    }\n\n    state.isTriggeringEvent = false;\n    state.didFirePressStart = true;\n    setPressed(true);\n    return shouldStopPropagation;\n  });\n\n  let triggerPressEnd = useEffectEvent((originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n    let state = ref.current;\n    if (!state.didFirePressStart) {\n      return false;\n    }\n\n    state.ignoreClickAfterPress = true;\n    state.didFirePressStart = false;\n    state.isTriggeringEvent = true;\n\n    let shouldStopPropagation = true;\n    if (onPressEnd) {\n      let event = new PressEvent('pressend', pointerType, originalEvent);\n      onPressEnd(event);\n      shouldStopPropagation = event.shouldStopPropagation;\n    }\n\n    if (onPressChange) {\n      onPressChange(false);\n    }\n\n    setPressed(false);\n\n    if (onPress && wasPressed && !isDisabled) {\n      let event = new PressEvent('press', pointerType, originalEvent);\n      onPress(event);\n      shouldStopPropagation &&= event.shouldStopPropagation;\n    }\n\n    state.isTriggeringEvent = false;\n    return shouldStopPropagation;\n  });\n\n  let triggerPressUp = useEffectEvent((originalEvent: EventBase, pointerType: PointerType) => {\n    let state = ref.current;\n    if (isDisabled) {\n      return false;\n    }\n\n    if (onPressUp) {\n      state.isTriggeringEvent = true;\n      let event = new PressEvent('pressup', pointerType, originalEvent);\n      onPressUp(event);\n      state.isTriggeringEvent = false;\n      return event.shouldStopPropagation;\n    }\n\n    return true;\n  });\n\n  let cancel = useEffectEvent((e: EventBase) => {\n    let state = ref.current;\n    if (state.isPressed && state.target) {\n      if (state.isOverTarget && state.pointerType != null) {\n        triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n      }\n      state.isPressed = false;\n      state.isOverTarget = false;\n      state.activePointerId = null;\n      state.pointerType = null;\n      removeAllGlobalListeners();\n      if (!allowTextSelectionOnPress) {\n        restoreTextSelection(state.target);\n      }\n    }\n  });\n\n  let cancelOnPointerExit = useEffectEvent((e: EventBase) => {\n    if (shouldCancelOnPointerExit) {\n      cancel(e);\n    }\n  });\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let pressProps: DOMAttributes = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target as Element)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n            e.preventDefault();\n          }\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          let shouldStopPropagation = true;\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            shouldStopPropagation = triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(getOwnerDocument(e.currentTarget), 'keyup', onKeyUp, false);\n          }\n\n          if (shouldStopPropagation) {\n            e.stopPropagation();\n          }\n\n          // Keep track of the keydown events that occur while the Meta (e.g. Command) key is held.\n          // macOS has a bug where keyup events are not fired while the Meta key is down.\n          // When the Meta key itself is released we will get an event for that, and we'll act as if\n          // all of these other keys were released as well.\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1393524\n          // https://bugs.webkit.org/show_bug.cgi?id=55291\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1299553\n          if (e.metaKey && isMac()) {\n            state.metaKeyEvents?.set(e.key, e.nativeEvent);\n          }\n        } else if (e.key === 'Meta') {\n          state.metaKeyEvents = new Map();\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target as Element) && state.target) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e && e.button === 0 && !state.isTriggeringEvent && !(openLink as any).isOpening) {\n          let shouldStopPropagation = true;\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            let stopPressStart = triggerPressStart(e, 'virtual');\n            let stopPressUp = triggerPressUp(e, 'virtual');\n            let stopPressEnd = triggerPressEnd(e, 'virtual');\n            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n          if (shouldStopPropagation) {\n            e.stopPropagation();\n          }\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && state.target && isValidKeyboardEvent(e, state.target)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n          e.preventDefault();\n        }\n\n        let target = e.target as Element;\n        let shouldStopPropagation = triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n\n        // If a link was triggered with a key other than Enter, open the URL ourselves.\n        // This means the link has a role override, and the default browser behavior\n        // only applies when using the Enter key.\n        if (e.key !== 'Enter' && isHTMLAnchorLink(state.target) && state.target.contains(target) && !e[LINK_CLICKED]) {\n          // Store a hidden property on the event so we only trigger link click once,\n          // even if there are multiple usePress instances attached to the element.\n          e[LINK_CLICKED] = true;\n          openLink(state.target, e, false);\n        }\n\n        state.isPressed = false;\n        state.metaKeyEvents?.delete(e.key);\n      } else if (e.key === 'Meta' && state.metaKeyEvents?.size) {\n        // If we recorded keydown events that occurred while the Meta key was pressed,\n        // and those haven't received keyup events already, fire keyup events ourselves.\n        // See comment above for more info about the macOS bug causing this.\n        let events = state.metaKeyEvents;\n        state.metaKeyEvents = undefined;\n        for (let event of events.values()) {\n          state.target?.dispatchEvent(new KeyboardEvent('keyup', event));\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as Element)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        let shouldStopPropagation = true;\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          shouldStopPropagation = triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(getOwnerDocument(e.currentTarget), 'pointermove', onPointerMove, false);\n          addGlobalListener(getOwnerDocument(e.currentTarget), 'pointerup', onPointerUp, false);\n          addGlobalListener(getOwnerDocument(e.currentTarget), 'pointercancel', onPointerCancel, false);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as Element) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (state.target && isOverTarget(e, state.target)) {\n          if (!state.isOverTarget && state.pointerType != null) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.target && state.isOverTarget && state.pointerType != null) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {\n          if (isOverTarget(e, state.target) && state.pointerType != null) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget && state.pointerType != null) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget)) {\n          e.preventDefault();\n        }\n\n        if (state.ignoreEmulatedMouseEvents) {\n          e.stopPropagation();\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        let shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n\n        addGlobalListener(getOwnerDocument(e.currentTarget), 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        let shouldStopPropagation = true;\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n          state.isOverTarget = true;\n          shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        let shouldStopPropagation = true;\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n          state.isOverTarget = false;\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType || 'mouse');\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (state.target && isOverTarget(e, state.target) && state.pointerType != null) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.target && state.isOverTarget && state.pointerType != null) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        let shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n\n        addGlobalListener(getOwnerWindow(e.currentTarget), 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.isPressed) {\n          e.stopPropagation();\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        let shouldStopPropagation = true;\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget && state.pointerType != null) {\n            state.isOverTarget = true;\n            shouldStopPropagation = triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget && state.pointerType != null) {\n          state.isOverTarget = false;\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.isPressed) {\n          e.stopPropagation();\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        let shouldStopPropagation = true;\n        if (touch && isOverTarget(touch, e.currentTarget) && state.pointerType != null) {\n          triggerPressUp(e, state.pointerType);\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget && state.pointerType != null) {\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n        }\n\n        if (shouldStopPropagation) {\n          e.stopPropagation();\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.target && !allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as Element).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [\n    addGlobalListener,\n    isDisabled,\n    preventFocusOnPress,\n    removeAllGlobalListeners,\n    allowTextSelectionOnPress,\n    cancel,\n    cancelOnPointerExit,\n    triggerPressEnd,\n    triggerPressStart,\n    triggerPressUp\n  ]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        restoreTextSelection(ref.current.target ?? undefined);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: Element): target is HTMLAnchorElement {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent, currentTarget: Element): boolean {\n  const {key, code} = event;\n  const element = currentTarget as HTMLElement;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    !((element instanceof getOwnerWindow(element).HTMLInputElement && !isValidInputKey(element, key)) ||\n      element instanceof getOwnerWindow(element).HTMLTextAreaElement ||\n      element.isContentEditable) &&\n    // Links should only trigger with Enter key\n    !((role === 'link' || (!role && isHTMLAnchorLink(element))) && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: FocusableElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = 0;\n  let offsetY = 0;\n  if (point.width !== undefined) {\n    offsetX = (point.width / 2);\n  } else if (point.radiusX !== undefined) {\n    offsetX = point.radiusX;\n  }\n  if (point.height !== undefined) {\n    offsetY = (point.height / 2);\n  } else if (point.radiusY !== undefined) {\n    offsetY = point.radiusY;\n  }\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: Element) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.hasAttribute('draggable');\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element, key: string) {\n  if (target instanceof HTMLInputElement) {\n    return !isValidInputKey(target, key);\n  }\n\n  if (target instanceof HTMLButtonElement) {\n    return target.type !== 'submit' && target.type !== 'reset';\n  }\n\n  if (isHTMLAnchorLink(target)) {\n    return false;\n  }\n\n  return true;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nfunction isValidInputKey(target: HTMLInputElement, key: string) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === 'checkbox' || target.type === 'radio'\n    ? key === ' '\n    : nonTextInputTypes.has(target.type);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getOwnerDocument, isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element) {\n  if (isIOS()) {\n    if (state === 'default') {\n      // eslint-disable-next-line no-restricted-globals\n      const documentObject = getOwnerDocument(target);\n      savedUserSelect = documentObject.documentElement.style.webkitUserSelect;\n      documentObject.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          // eslint-disable-next-line no-restricted-globals\n          const documentObject = getOwnerDocument(target);\n          if (documentObject.documentElement.style.webkitUserSelect === 'none') {\n            documentObject.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target) as string;\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<FocusableElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>({register: () => {}});\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useObjectRef, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ForwardedRef, ReactNode, useContext, useEffect, useMemo, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: ForwardedRef<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  ref = useObjectRef(ref || prevContext?.ref);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n      isRegistered.current = true; // only warn once in strict mode.\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n\nexport function ClearPressResponder({children}: {children: ReactNode}) {\n  let context = useMemo(() => ({register: () => {}}), []);\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusableElement, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps<Target = FocusableElement> extends FocusEvents<Target> {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult<Target = FocusableElement> {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes<Target>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus<Target extends FocusableElement = FocusableElement>(props: FocusProps<Target>): FocusResult<Target> {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps<Target>['onBlur'] = useCallback((e: FocusEvent<Target>) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent<Target>(onBlur);\n\n  const onFocus: FocusProps<Target>['onFocus'] = useCallback((e: FocusEvent<Target>) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (e.target === e.currentTarget && document.activeElement === e.target) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : undefined\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useEffectEvent, useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent<Target = Element> implements ReactFocusEvent<Target> {\n  nativeEvent: FocusEvent;\n  target: EventTarget & Target;\n  currentTarget: EventTarget & Target;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as EventTarget & Target;\n    this.currentTarget = nativeEvent.currentTarget as EventTarget & Target;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent<Target = Element>(onBlur: (e: ReactFocusEvent<Target>) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    observer: null as MutationObserver | null\n  });\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  let dispatchBlur = useEffectEvent((e: SyntheticFocusEvent<Target>) => {\n    onBlur?.(e);\n  });\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent<Target>) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler: EventListenerOrEventListenerObject | null = (e) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          dispatchBlur(new SyntheticFocusEvent('blur', e as FocusEvent));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer?.disconnect();\n          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent('blur', {relatedTarget: relatedTargetEl}));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true, relatedTarget: relatedTargetEl}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, [dispatchBlur]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent | null;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\nexport interface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality: null | Modality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments as unknown as [options?: FocusOptions | undefined]);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality | null {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality | null {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return useIsSSR() ? null : modality;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  isTextInput = isTextInput || \n    (e?.target instanceof HTMLInputElement && !nonTextInputTypes.has(e?.target?.type)) ||\n    e?.target instanceof HTMLTextAreaElement ||\n    (e?.target instanceof HTMLElement && e?.target.isContentEditable);\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(!!(opts?.isTextInput), modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (!state.current.isFocusWithin && document.activeElement === e.target) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        // These should not have been null, that would conflict in mergeProps\n        onFocus: undefined,\n        onBlur: undefined\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {getOwnerDocument, useEffectEvent} from '@react-aria/utils';\nimport {RefObject, useEffect, useRef} from 'react';\n\nexport interface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: PointerEvent) => void,\n  onInteractOutsideStart?: (e: PointerEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n\n  let onPointerDown = useEffectEvent((e) => {\n    if (onInteractOutside && isValidEvent(e, ref)) {\n      if (onInteractOutsideStart) {\n        onInteractOutsideStart(e);\n      }\n      stateRef.current.isPointerDown = true;\n    }\n  });\n\n  let triggerInteractOutside = useEffectEvent((e: PointerEvent) => {\n    if (onInteractOutside) {\n      onInteractOutside(e);\n    }\n  });\n\n  useEffect(() => {\n    let state = stateRef.current;\n    if (isDisabled) {\n      return;\n    }\n\n    const element = ref.current;\n    const documentObject = getOwnerDocument(element);\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      // changing these to capture phase fixed combobox\n      documentObject.addEventListener('pointerdown', onPointerDown, true);\n      documentObject.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        documentObject.removeEventListener('pointerdown', onPointerDown, true);\n        documentObject.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      documentObject.addEventListener('mousedown', onPointerDown, true);\n      documentObject.addEventListener('mouseup', onMouseUp, true);\n      documentObject.addEventListener('touchstart', onPointerDown, true);\n      documentObject.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        documentObject.removeEventListener('mousedown', onPointerDown, true);\n        documentObject.removeEventListener('mouseup', onMouseUp, true);\n        documentObject.removeEventListener('touchstart', onPointerDown, true);\n        documentObject.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, isDisabled, onPointerDown, triggerInteractOutside]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  if (event.target) {\n    // if the event target is no longer in the document, ignore\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n\n    // If the target is within a top layer element (e.g. toasts), ignore.\n    if (event.target.closest('[data-react-aria-top-layer]')) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {DOMAttributes, KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: DOMAttributes\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler?: (e: BaseEvent<T>) => void): ((e: T) => void) | undefined {\n  if (!handler) {\n    return undefined;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {DOMAttributes, MoveEvents, PointerType} from '@react-types/shared';\nimport React, {useMemo, useRef} from 'react';\nimport {useEffectEvent, useGlobalListeners} from '@react-aria/utils';\n\nexport interface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: DOMAttributes\n}\n\ninterface EventBase {\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let move = useEffectEvent((originalEvent: EventBase, pointerType: PointerType, deltaX: number, deltaY: number) => {\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    if (!state.current.didMove) {\n      state.current.didMove = true;\n      onMoveStart?.({\n        type: 'movestart',\n        pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n    onMove?.({\n      type: 'move',\n      pointerType,\n      deltaX: deltaX,\n      deltaY: deltaY,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n  });\n\n  let end = useEffectEvent((originalEvent: EventBase, pointerType: PointerType) => {\n    restoreTextSelection();\n    if (state.current.didMove) {\n      onMoveEnd?.({\n        type: 'moveend',\n        pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n  });\n\n  let moveProps = useMemo(() => {\n    let moveProps: DOMAttributes = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - (state.current.lastPosition?.pageX ?? 0), e.pageY - (state.current.lastPosition?.pageY ?? 0));\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move(e, 'touch', pageX - (state.current.lastPosition?.pageX ?? 0), pageY - (state.current.lastPosition?.pageY ?? 0));\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - (state.current.lastPosition?.pageX ?? 0), e.pageY - (state.current.lastPosition?.pageY ?? 0));\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (e: EventBase, deltaX: number, deltaY: number) => {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, addGlobalListener, removeGlobalListener, move, end]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? undefined : onScrollHandler);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\nimport {useRef} from 'react';\n\nexport interface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\nexport interface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: DOMAttributes\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef<ReturnType<typeof setTimeout> | undefined>();\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      e.continuePropagation();\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = undefined;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : undefined);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}