{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { filterDOMProps as $kgVYN$filterDOMProps, mergeProps as $kgVYN$mergeProps, useId as $kgVYN$useId } from \"@react-aria/utils\";\nimport { useHover as $kgVYN$useHover, getInteractionModality as $kgVYN$getInteractionModality, isFocusVisible as $kgVYN$isFocusVisible } from \"@react-aria/interactions\";\nimport { useRef as $kgVYN$useRef, useEffect as $kgVYN$useEffect } from \"react\";\nimport { useFocusable as $kgVYN$useFocusable } from \"@react-aria/focus\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\n\nfunction $326e436e94273fe1$export$1c4b08e0eca38426(props, state) {\n  var domProps = (0, $kgVYN$filterDOMProps)(props, {\n    labelable: true\n  });\n  var _ref = (0, $kgVYN$useHover)({\n      onHoverStart: function onHoverStart() {\n        return state === null || state === void 0 ? void 0 : state.open(true);\n      },\n      onHoverEnd: function onHoverEnd() {\n        return state === null || state === void 0 ? void 0 : state.close();\n      }\n    }),\n    hoverProps = _ref.hoverProps;\n  return {\n    tooltipProps: (0, $kgVYN$mergeProps)(domProps, hoverProps, {\n      role: \"tooltip\"\n    })\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $4e1b34546679e357$export$a6da6c504e4bba8b(props, state, ref) {\n  var isDisabled = props.isDisabled,\n    trigger = props.trigger;\n  var tooltipId = (0, $kgVYN$useId)();\n  var isHovered = (0, $kgVYN$useRef)(false);\n  var isFocused = (0, $kgVYN$useRef)(false);\n  var handleShow = function handleShow() {\n    if (isHovered.current || isFocused.current) state.open(isFocused.current);\n  };\n  var handleHide = function handleHide(immediate) {\n    if (!isHovered.current && !isFocused.current) state.close(immediate);\n  };\n  (0, $kgVYN$useEffect)(function () {\n    var onKeyDown = function onKeyDown(e) {\n      if (ref && ref.current)\n        // Escape after clicking something can give it keyboard focus\n        // dismiss tooltip on esc key press\n        {\n          if (e.key === \"Escape\") {\n            e.stopPropagation();\n            state.close(true);\n          }\n        }\n    };\n    if (state.isOpen) {\n      document.addEventListener(\"keydown\", onKeyDown, true);\n      return function () {\n        document.removeEventListener(\"keydown\", onKeyDown, true);\n      };\n    }\n  }, [ref, state]);\n  var onHoverStart = function onHoverStart() {\n    if (trigger === \"focus\") return;\n    // In chrome, if you hover a trigger, then another element obscures it, due to keyboard\n    // interactions for example, hover will end. When hover is restored after that element disappears,\n    // focus moves on for example, then the tooltip will reopen. We check the modality to know if the hover\n    // is the result of moving the mouse.\n    if ((0, $kgVYN$getInteractionModality)() === \"pointer\") isHovered.current = true;else isHovered.current = false;\n    handleShow();\n  };\n  var onHoverEnd = function onHoverEnd() {\n    if (trigger === \"focus\") return;\n    // no matter how the trigger is left, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide();\n  };\n  var onPressStart = function onPressStart() {\n    // no matter how the trigger is pressed, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n  var onFocus = function onFocus() {\n    var isVisible = (0, $kgVYN$isFocusVisible)();\n    if (isVisible) {\n      isFocused.current = true;\n      handleShow();\n    }\n  };\n  var onBlur = function onBlur() {\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n  var _ref2 = (0, $kgVYN$useHover)({\n      isDisabled: isDisabled,\n      onHoverStart: onHoverStart,\n      onHoverEnd: onHoverEnd\n    }),\n    hoverProps = _ref2.hoverProps;\n  var _ref3 = (0, $kgVYN$useFocusable)({\n      isDisabled: isDisabled,\n      onFocus: onFocus,\n      onBlur: onBlur\n    }, ref),\n    focusableProps = _ref3.focusableProps;\n  return {\n    triggerProps: _objectSpread({\n      \"aria-describedby\": state.isOpen ? tooltipId : undefined\n    }, (0, $kgVYN$mergeProps)(focusableProps, hoverProps, {\n      onPointerDown: onPressStart,\n      onKeyDown: onPressStart\n    })),\n    tooltipProps: {\n      id: tooltipId\n    }\n  };\n}\nexport { $326e436e94273fe1$export$1c4b08e0eca38426 as useTooltip, $4e1b34546679e357$export$a6da6c504e4bba8b as useTooltipTrigger };","map":{"version":3,"names":["$326e436e94273fe1$export$1c4b08e0eca38426","props","state","domProps","$kgVYN$filterDOMProps","labelable","_ref","$kgVYN$useHover","onHoverStart","open","onHoverEnd","close","hoverProps","tooltipProps","$kgVYN$mergeProps","role","$4e1b34546679e357$export$a6da6c504e4bba8b","ref","isDisabled","trigger","tooltipId","$kgVYN$useId","isHovered","$kgVYN$useRef","isFocused","handleShow","current","handleHide","immediate","$kgVYN$useEffect","onKeyDown","e","key","stopPropagation","isOpen","document","addEventListener","removeEventListener","$kgVYN$getInteractionModality","onPressStart","onFocus","isVisible","$kgVYN$isFocusVisible","onBlur","_ref2","_ref3","$kgVYN$useFocusable","focusableProps","triggerProps","_objectSpread","undefined","onPointerDown","id"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tooltip\\dist\\packages\\@react-aria\\tooltip\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tooltip\\dist\\packages\\@react-aria\\tooltip\\src\\useTooltip.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\tooltip\\dist\\packages\\@react-aria\\tooltip\\src\\useTooltipTrigger.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useTooltip} from './useTooltip';\nexport {useTooltipTrigger} from './useTooltipTrigger';\nexport type {AriaTooltipProps, TooltipTriggerProps} from '@react-types/tooltip';\nexport type {TooltipAria} from './useTooltip';\nexport type {TooltipTriggerAria} from './useTooltipTrigger';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTooltipProps} from '@react-types/tooltip';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\nimport {useHover} from '@react-aria/interactions';\n\nexport interface TooltipAria {\n  /**\n   * Props for the tooltip element.\n   */\n  tooltipProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a Tooltip component.\n */\nexport function useTooltip(props: AriaTooltipProps, state?: TooltipTriggerState): TooltipAria {\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  let {hoverProps} = useHover({\n    onHoverStart: () => state?.open(true),\n    onHoverEnd: () => state?.close()\n  });\n\n  return {\n    tooltipProps: mergeProps(domProps, hoverProps, {\n      role: 'tooltip'\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getInteractionModality, isFocusVisible, useHover} from '@react-aria/interactions';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport {RefObject, useEffect, useRef} from 'react';\nimport {TooltipTriggerProps} from '@react-types/tooltip';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\nimport {useFocusable} from '@react-aria/focus';\n\nexport interface TooltipTriggerAria {\n  /**\n   * Props for the trigger element.\n   */\n  triggerProps: DOMAttributes,\n\n  /**\n   * Props for the overlay container element.\n   */\n  tooltipProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tooltip trigger, e.g. a button\n * that shows a description when focused or hovered.\n */\nexport function useTooltipTrigger(props: TooltipTriggerProps, state: TooltipTriggerState, ref: RefObject<FocusableElement>) : TooltipTriggerAria {\n  let {\n    isDisabled,\n    trigger\n  } = props;\n\n  let tooltipId = useId();\n\n  let isHovered = useRef(false);\n  let isFocused = useRef(false);\n\n  let handleShow = () => {\n    if (isHovered.current || isFocused.current) {\n      state.open(isFocused.current);\n    }\n  };\n\n  let handleHide = (immediate?: boolean) => {\n    if (!isHovered.current && !isFocused.current) {\n      state.close(immediate);\n    }\n  };\n\n  useEffect(() => {\n    let onKeyDown = (e) => {\n      if (ref && ref.current) {\n        // Escape after clicking something can give it keyboard focus\n        // dismiss tooltip on esc key press\n        if (e.key === 'Escape') {\n          e.stopPropagation();\n          state.close(true);\n        }\n      }\n    };\n    if (state.isOpen) {\n      document.addEventListener('keydown', onKeyDown, true);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown, true);\n      };\n    }\n  }, [ref, state]);\n\n  let onHoverStart = () => {\n    if (trigger === 'focus') {\n      return;\n    }\n    // In chrome, if you hover a trigger, then another element obscures it, due to keyboard\n    // interactions for example, hover will end. When hover is restored after that element disappears,\n    // focus moves on for example, then the tooltip will reopen. We check the modality to know if the hover\n    // is the result of moving the mouse.\n    if (getInteractionModality() === 'pointer') {\n      isHovered.current = true;\n    } else {\n      isHovered.current = false;\n    }\n    handleShow();\n  };\n\n  let onHoverEnd = () => {\n    if (trigger === 'focus') {\n      return;\n    }\n    // no matter how the trigger is left, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide();\n  };\n\n  let onPressStart = () => {\n    // no matter how the trigger is pressed, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n\n  let onFocus = () => {\n    let isVisible = isFocusVisible();\n    if (isVisible) {\n      isFocused.current = true;\n      handleShow();\n    }\n  };\n\n  let onBlur = () => {\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n\n  let {hoverProps} = useHover({\n    isDisabled,\n    onHoverStart,\n    onHoverEnd\n  });\n\n  let {focusableProps} = useFocusable({\n    isDisabled,\n    onFocus,\n    onBlur\n  }, ref);\n\n  return {\n    triggerProps: {\n      'aria-describedby': state.isOpen ? tooltipId : undefined,\n      ...mergeProps(focusableProps, hoverProps, {\n        onPointerDown: onPressStart,\n        onKeyDown: onPressStart\n      })\n    },\n    tooltipProps: {\n      id: tooltipId\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}