{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useToggle as $7KNc0$useToggle } from \"@react-aria/toggle\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */\nfunction $b418ec0c85c52f27$export$d853f7095ae95f88(props, state, ref) {\n  var _ref = (0, $7KNc0$useToggle)(props, state, ref),\n    labelProps = _ref.labelProps,\n    inputProps = _ref.inputProps,\n    isSelected = _ref.isSelected,\n    isPressed = _ref.isPressed,\n    isDisabled = _ref.isDisabled,\n    isReadOnly = _ref.isReadOnly;\n  return {\n    labelProps: labelProps,\n    inputProps: _objectSpread(_objectSpread({}, inputProps), {}, {\n      role: \"switch\",\n      checked: isSelected\n    }),\n    isSelected: isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  };\n}\nexport { $b418ec0c85c52f27$export$d853f7095ae95f88 as useSwitch };","map":{"version":3,"names":["$b418ec0c85c52f27$export$d853f7095ae95f88","props","state","ref","_ref","$7KNc0$useToggle","labelProps","inputProps","isSelected","isPressed","isDisabled","isReadOnly","_objectSpread","role","checked"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\switch\\dist\\packages\\@react-aria\\switch\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\switch\\dist\\packages\\@react-aria\\switch\\src\\useSwitch.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useSwitch} from './useSwitch';\n\nexport type {AriaSwitchProps} from '@react-types/switch';\nexport type {SwitchAria} from './useSwitch';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSwitchProps} from '@react-types/switch';\nimport {InputHTMLAttributes, LabelHTMLAttributes, RefObject} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useToggle} from '@react-aria/toggle';\n\nexport interface SwitchAria {\n  /** Props for the label wrapper element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the switch is selected. */\n  isSelected: boolean,\n  /** Whether the switch is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the switch is disabled. */\n  isDisabled: boolean,\n  /** Whether the switch is read only. */\n  isReadOnly: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a switch component.\n * A switch is similar to a checkbox, but represents on/off values as opposed to selection.\n * @param props - Props for the switch.\n * @param state - State for the switch, as returned by `useToggleState`.\n * @param ref - Ref to the HTML input element.\n */\nexport function useSwitch(props: AriaSwitchProps, state: ToggleState, ref: RefObject<HTMLInputElement>): SwitchAria {\n  let {labelProps, inputProps, isSelected, isPressed, isDisabled, isReadOnly} = useToggle(props, state, ref);\n\n  return {\n    labelProps,\n    inputProps: {\n      ...inputProps,\n      role: 'switch',\n      checked: isSelected\n    },\n    isSelected,\n    isPressed,\n    isDisabled,\n    isReadOnly\n  };\n}\n"],"mappings":";;;AAAA;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;;AAuCO,SAASA,0CAAUC,KAAsB,EAAEC,KAAkB,EAAEC,GAAgC;EACpG,IAAAC,IAAA,GAA8E,IAAAC,gBAAQ,EAAEJ,KAAA,EAAOC,KAAA,EAAOC,GAAA;IAAjGG,UAAU,GAAAF,IAAA,CAAXE,UAAA;IAAaC,UAAU,GAAAH,IAAA,CAAZG,UAAA;IAAcC,UAAU,GAAAJ,IAAA,CAAZI,UAAA;IAAcC,SAAS,GAAAL,IAAA,CAAXK,SAAA;IAAaC,UAAU,GAAAN,IAAA,CAAZM,UAAA;IAAcC,UAAU,GAAAP,IAAA,CAAZO,UAAA;EAE9D,OAAO;gBACLL,UAAA;IACAC,UAAA,EAAAK,aAAA,CAAAA,aAAA,KACKL,UAAU;MACbM,IAAA,EAAM;MACNC,OAAA,EAASN;IAAA,EACX;gBACAA,UAAA;eACAC,SAAA;gBACAC,UAAA;gBACAC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}