{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _defineProperty from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar _excluded = [\"ref\"],\n  _excluded2 = [\"children\"];\nimport { useLayoutEffect as $6nfFC$useLayoutEffect, getOwnerDocument as $6nfFC$getOwnerDocument, runAfterTransition as $6nfFC$runAfterTransition, focusWithoutScrolling as $6nfFC$focusWithoutScrolling, getOwnerWindow as $6nfFC$getOwnerWindow, mergeProps as $6nfFC$mergeProps, useSyncRef as $6nfFC$useSyncRef, useObjectRef as $6nfFC$useObjectRef } from \"@react-aria/utils\";\nimport $6nfFC$react, { useRef as $6nfFC$useRef, useContext as $6nfFC$useContext, useMemo as $6nfFC$useMemo, useEffect as $6nfFC$useEffect, useState as $6nfFC$useState, useCallback as $6nfFC$useCallback } from \"react\";\nimport { getInteractionModality as $6nfFC$getInteractionModality, isFocusVisible as $6nfFC$isFocusVisible, useFocusVisibleListener as $6nfFC$useFocusVisibleListener, useFocus as $6nfFC$useFocus, useFocusWithin as $6nfFC$useFocusWithin, useKeyboard as $6nfFC$useKeyboard } from \"@react-aria/interactions\";\nimport $6nfFC$clsx from \"clsx\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */ /*\r\n       * Copyright 2020 Adobe. All rights reserved.\r\n       * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\r\n       * you may not use this file except in compliance with the License. You may obtain a copy\r\n       * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n       *\r\n       * Unless required by applicable law or agreed to in writing, software distributed under\r\n       * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n       * OF ANY KIND, either express or implied. See the License for the specific language\r\n       * governing permissions and limitations under the License.\r\n       */\n\nfunction $6a99195332edec8b$export$80f3e147d781571c(element) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  var ownerDocument = (0, $6nfFC$getOwnerDocument)(element);\n  if ((0, $6nfFC$getInteractionModality)() === \"virtual\") {\n    var lastFocusedElement = ownerDocument.activeElement;\n    (0, $6nfFC$runAfterTransition)(function () {\n      // If focus did not move and the element is still in the document, focus it.\n      if (ownerDocument.activeElement === lastFocusedElement && element.isConnected) (0, $6nfFC$focusWithoutScrolling)(element);\n    });\n  } else (0, $6nfFC$focusWithoutScrolling)(element);\n}\n\n/*\r\n * Copyright 2021 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\nfunction $645f2e67b85a24c9$var$isStyleVisible(element) {\n  var windowObject = (0, $6nfFC$getOwnerWindow)(element);\n  if (!(element instanceof windowObject.HTMLElement) && !(element instanceof windowObject.SVGElement)) return false;\n  var _element$style = element.style,\n    display = _element$style.display,\n    visibility = _element$style.visibility;\n  var isVisible = display !== \"none\" && visibility !== \"hidden\" && visibility !== \"collapse\";\n  if (isVisible) {\n    var getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n    var _getComputedStyle = getComputedStyle(element),\n      computedDisplay = _getComputedStyle.display,\n      computedVisibility = _getComputedStyle.visibility;\n    isVisible = computedDisplay !== \"none\" && computedVisibility !== \"hidden\" && computedVisibility !== \"collapse\";\n  }\n  return isVisible;\n}\nfunction $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {\n  return !element.hasAttribute(\"hidden\") && (element.nodeName === \"DETAILS\" && childElement && childElement.nodeName !== \"SUMMARY\" ? element.hasAttribute(\"open\") : true);\n}\nfunction $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {\n  return element.nodeName !== \"#comment\" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));\n}\nvar $9bf71ea28793e738$var$FocusContext = /*#__PURE__*/(0, $6nfFC$react).createContext(null);\nvar $9bf71ea28793e738$var$activeScope = null;\nfunction $9bf71ea28793e738$export$20e40289641fbbb6(props) {\n  var children = props.children,\n    contain = props.contain,\n    restoreFocus = props.restoreFocus,\n    autoFocus = props.autoFocus;\n  var startRef = (0, $6nfFC$useRef)(null);\n  var endRef = (0, $6nfFC$useRef)(null);\n  var scopeRef = (0, $6nfFC$useRef)([]);\n  var _ref = (0, $6nfFC$useContext)($9bf71ea28793e738$var$FocusContext) || {},\n    parentNode = _ref.parentNode;\n  // Create a tree node here so we can add children to it even before it is added to the tree.\n  var node = (0, $6nfFC$useMemo)(function () {\n    return new $9bf71ea28793e738$var$TreeNode({\n      scopeRef: scopeRef\n    });\n  }, [scopeRef]);\n  (0, $6nfFC$useLayoutEffect)(function () {\n    // If a new scope mounts outside the active scope, (e.g. DialogContainer launched from a menu),\n    // use the active scope as the parent instead of the parent from context. Layout effects run bottom\n    // up, so if the parent is not yet added to the tree, don't do this. Only the outer-most FocusScope\n    // that is being added should get the activeScope as its parent.\n    var parent = parentNode || $9bf71ea28793e738$export$d06fae2ee68b101e.root;\n    if ($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parent.scopeRef) && $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, parent.scopeRef)) {\n      var activeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n      if (activeNode) parent = activeNode;\n    }\n    // Add the node to the parent, and to the tree.\n    parent.addChild(node);\n    $9bf71ea28793e738$export$d06fae2ee68b101e.addNode(node);\n  }, [node, parentNode]);\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var node = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n    if (node) node.contain = !!contain;\n  }, [contain]);\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var _startRef_current;\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    var node = (_startRef_current = startRef.current) === null || _startRef_current === void 0 ? void 0 : _startRef_current.nextSibling;\n    var nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n    scopeRef.current = nodes;\n  }, [children]);\n  $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);\n  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);\n  // This needs to be an effect so that activeScope is updated after the FocusScope tree is complete.\n  // It cannot be a useLayoutEffect because the parent of this node hasn't been attached in the tree yet.\n  (0, $6nfFC$useEffect)(function () {\n    var activeElement = (0, $6nfFC$getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined).activeElement;\n    var scope = null;\n    if ($9bf71ea28793e738$var$isElementInScope(activeElement, scopeRef.current)) {\n      // We need to traverse the focusScope tree and find the bottom most scope that\n      // contains the active element and set that as the activeScope.\n      var _iterator = _createForOfIteratorHelper($9bf71ea28793e738$export$d06fae2ee68b101e.traverse()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _node = _step.value;\n          if (_node.scopeRef && $9bf71ea28793e738$var$isElementInScope(activeElement, _node.scopeRef.current)) scope = _node;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (scope === $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $9bf71ea28793e738$var$activeScope = scope.scopeRef;\n    }\n  }, [scopeRef]);\n  // This layout effect cleanup is so that the tree node is removed synchronously with react before the RAF\n  // in useRestoreFocus cleanup runs.\n  (0, $6nfFC$useLayoutEffect)(function () {\n    return function () {\n      var _focusScopeTree_getTreeNode_parent, _focusScopeTree_getTreeNode;\n      var _focusScopeTree_getTreeNode_parent_scopeRef;\n      // Scope may have been re-parented.\n      var parentScope = (_focusScopeTree_getTreeNode_parent_scopeRef = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : (_focusScopeTree_getTreeNode_parent = _focusScopeTree_getTreeNode.parent) === null || _focusScopeTree_getTreeNode_parent === void 0 ? void 0 : _focusScopeTree_getTreeNode_parent.scopeRef) !== null && _focusScopeTree_getTreeNode_parent_scopeRef !== void 0 ? _focusScopeTree_getTreeNode_parent_scopeRef : null;\n      if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parentScope))) $9bf71ea28793e738$var$activeScope = parentScope;\n      $9bf71ea28793e738$export$d06fae2ee68b101e.removeTreeNode(scopeRef);\n    };\n  }, [scopeRef]);\n  var focusManager = (0, $6nfFC$useMemo)(function () {\n    return $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef);\n  }, []);\n  var value = (0, $6nfFC$useMemo)(function () {\n    return {\n      focusManager: focusManager,\n      parentNode: node\n    };\n  }, [node, focusManager]);\n  return /*#__PURE__*/(0, $6nfFC$react).createElement($9bf71ea28793e738$var$FocusContext.Provider, {\n    value: value\n  }, /*#__PURE__*/(0, $6nfFC$react).createElement(\"span\", {\n    \"data-focus-scope-start\": true,\n    hidden: true,\n    ref: startRef\n  }), children, /*#__PURE__*/(0, $6nfFC$react).createElement(\"span\", {\n    \"data-focus-scope-end\": true,\n    hidden: true,\n    ref: endRef\n  }));\n}\nfunction $9bf71ea28793e738$export$10c5169755ce7bd7() {\n  var _useContext;\n  return (_useContext = (0, $6nfFC$useContext)($9bf71ea28793e738$var$FocusContext)) === null || _useContext === void 0 ? void 0 : _useContext.focusManager;\n}\nfunction $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || (0, $6nfFC$getOwnerDocument)(scope[0]).activeElement;\n      var sentinel = scope[0].previousElementSibling;\n      var scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || (0, $6nfFC$getOwnerDocument)(scope[0]).activeElement;\n      var sentinel = scope[scope.length - 1].nextElementSibling;\n      var scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode();\n      }\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      var nextNode = walker.nextNode();\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      var previousNode = walker.previousNode();\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode;\n    }\n  };\n}\nvar $9bf71ea28793e738$var$focusableElements = [\"input:not([disabled]):not([type=hidden])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"button:not([disabled])\", \"a[href]\", \"area[href]\", \"summary\", \"iframe\", \"object\", \"embed\", \"audio[controls]\", \"video[controls]\", \"[contenteditable]\"];\nvar $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(\":not([hidden]),\") + \",[tabindex]:not([disabled]):not([hidden])\";\n$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nvar $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction $9bf71ea28793e738$var$getScopeRoot(scope) {\n  return scope[0].parentElement;\n}\nfunction $9bf71ea28793e738$var$shouldContainFocus(scopeRef) {\n  var scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) return false;\n    scope = scope.parent;\n  }\n  return true;\n}\nfunction $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {\n  var focusedNode = (0, $6nfFC$useRef)();\n  var raf = (0, $6nfFC$useRef)();\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = undefined;\n      }\n      return;\n    }\n    var ownerDocument = (0, $6nfFC$getOwnerDocument)(scope ? scope[0] : undefined);\n    // Handle the Tab key to contain focus within the scope\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef)) return;\n      var focusedElement = ownerDocument.activeElement;\n      var scope = scopeRef.current;\n      if (!scope || !$9bf71ea28793e738$var$isElementInScope(focusedElement, scope)) return;\n      var scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: true\n      }, scope);\n      if (!focusedElement) return;\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      }\n      e.preventDefault();\n      if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);\n    };\n    var onFocus = function onFocus(e) {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(e.target, scopeRef.current)) {\n        $9bf71ea28793e738$var$activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) focusedNode.current.focus();else if ($9bf71ea28793e738$var$activeScope && $9bf71ea28793e738$var$activeScope.current) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef)) focusedNode.current = e.target;\n    };\n    var onBlur = function onBlur(e) {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      if (raf.current) cancelAnimationFrame(raf.current);\n      raf.current = requestAnimationFrame(function () {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if (ownerDocument.activeElement && $9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(ownerDocument.activeElement, scopeRef)) {\n          $9bf71ea28793e738$var$activeScope = scopeRef;\n          if (ownerDocument.body.contains(e.target)) {\n            var _focusedNode_current;\n            focusedNode.current = e.target;\n            (_focusedNode_current = focusedNode.current) === null || _focusedNode_current === void 0 ? void 0 : _focusedNode_current.focus();\n          } else if ($9bf71ea28793e738$var$activeScope.current) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n        }\n      });\n    };\n    ownerDocument.addEventListener(\"keydown\", onKeyDown, false);\n    ownerDocument.addEventListener(\"focusin\", onFocus, false);\n    scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n      return element.addEventListener(\"focusout\", onBlur, false);\n    });\n    return function () {\n      ownerDocument.removeEventListener(\"keydown\", onKeyDown, false);\n      ownerDocument.removeEventListener(\"focusin\", onFocus, false);\n      scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n      scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n        return element.removeEventListener(\"focusout\", onBlur, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  // This is a useLayoutEffect so it is guaranteed to run before our async synthetic blur\n  // eslint-disable-next-line arrow-body-style\n  (0, $6nfFC$useLayoutEffect)(function () {\n    return function () {\n      if (raf.current) cancelAnimationFrame(raf.current);\n    };\n  }, [raf]);\n}\nfunction $9bf71ea28793e738$var$isElementInAnyScope(element) {\n  return $9bf71ea28793e738$var$isElementInChildScope(element);\n}\nfunction $9bf71ea28793e738$var$isElementInScope(element, scope) {\n  if (!element) return false;\n  if (!scope) return false;\n  return scope.some(function (node) {\n    return node.contains(element);\n  });\n}\nfunction $9bf71ea28793e738$var$isElementInChildScope(element) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  // If the element is within a top layer element (e.g. toasts), always allow moving focus there.\n  if (element instanceof Element && element.closest(\"[data-react-aria-top-layer]\")) return true;\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  var _iterator2 = _createForOfIteratorHelper($9bf71ea28793e738$export$d06fae2ee68b101e.traverse($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope))),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var s = _step2.value.scopeRef;\n      if (s && $9bf71ea28793e738$var$isElementInScope(element, s.current)) return true;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return false;\n}\nfunction $9bf71ea28793e738$export$1258395f99bf9cbf(element) {\n  return $9bf71ea28793e738$var$isElementInChildScope(element, $9bf71ea28793e738$var$activeScope);\n}\nfunction $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {\n  var _focusScopeTree_getTreeNode;\n  var parent = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) return true;\n    parent = parent.parent;\n  }\n  return false;\n}\nfunction $9bf71ea28793e738$var$focusElement(element) {\n  var scroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (element != null && !scroll) try {\n    (0, $6a99195332edec8b$export$80f3e147d781571c)(element);\n  } catch (err) {\n    // ignore\n  } else if (element != null) try {\n    element.focus();\n  } catch (err) {\n    // ignore\n  }\n}\nfunction $9bf71ea28793e738$var$focusFirstInScope(scope) {\n  var tabbable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var sentinel = scope[0].previousElementSibling;\n  var scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n  var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n    tabbable: tabbable\n  }, scope);\n  walker.currentNode = sentinel;\n  var nextNode = walker.nextNode();\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n    walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n      tabbable: false\n    }, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n  $9bf71ea28793e738$var$focusElement(nextNode);\n}\nfunction $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {\n  var autoFocusRef = (0, $6nfFC$react).useRef(autoFocus);\n  (0, $6nfFC$useEffect)(function () {\n    if (autoFocusRef.current) {\n      $9bf71ea28793e738$var$activeScope = scopeRef;\n      var ownerDocument = (0, $6nfFC$getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n      if (!$9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, $9bf71ea28793e738$var$activeScope.current) && scopeRef.current) $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\nfunction $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restore, contain) {\n  // tracks the active scope, in case restore and contain are both false.\n  // if either are true, this is tracked in useRestoreFocus or useFocusContainment.\n  (0, $6nfFC$useLayoutEffect)(function () {\n    if (restore || contain) return;\n    var scope = scopeRef.current;\n    var ownerDocument = (0, $6nfFC$getOwnerDocument)(scope ? scope[0] : undefined);\n    var onFocus = function onFocus(e) {\n      var target = e.target;\n      if ($9bf71ea28793e738$var$isElementInScope(target, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;else if (!$9bf71ea28793e738$var$isElementInAnyScope(target)) $9bf71ea28793e738$var$activeScope = null;\n    };\n    ownerDocument.addEventListener(\"focusin\", onFocus, false);\n    scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    return function () {\n      ownerDocument.removeEventListener(\"focusin\", onFocus, false);\n      scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n    };\n  }, [scopeRef, restore, contain]);\n}\nfunction $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef) {\n  var scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) return false;\n    scope = scope.parent;\n  }\n  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;\n}\nfunction $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  // eslint-disable-next-line no-restricted-globals\n  var nodeToRestoreRef = (0, $6nfFC$useRef)(typeof document !== \"undefined\" ? (0, $6nfFC$getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined).activeElement : null);\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    var ownerDocument = (0, $6nfFC$getOwnerDocument)(scope ? scope[0] : undefined);\n    if (!restoreFocus || contain) return;\n    var onFocus = function onFocus() {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;\n    };\n    ownerDocument.addEventListener(\"focusin\", onFocus, false);\n    scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    return function () {\n      ownerDocument.removeEventListener(\"focusin\", onFocus, false);\n      scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scopeRef, contain]);\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var ownerDocument = (0, $6nfFC$getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n    if (!restoreFocus) return;\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef)) return;\n      var focusedElement = ownerDocument.activeElement;\n      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scopeRef.current)) return;\n      var treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n      if (!treeNode) return;\n      var nodeToRestore = treeNode.nodeToRestore;\n      // Create a DOM tree walker that matches all tabbable elements\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(ownerDocument.body, {\n        tabbable: true\n      });\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nodeToRestore || !ownerDocument.body.contains(nodeToRestore) || nodeToRestore === ownerDocument.body) {\n        nodeToRestore = undefined;\n        treeNode.nodeToRestore = undefined;\n      }\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode(); while ($9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current));\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);else\n          // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n          // then move focus to the body.\n          // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();else $9bf71ea28793e738$var$focusElement(nodeToRestore, true);\n      }\n    };\n    if (!contain) ownerDocument.addEventListener(\"keydown\", onKeyDown, true);\n    return function () {\n      if (!contain) ownerDocument.removeEventListener(\"keydown\", onKeyDown, true);\n    };\n  }, [scopeRef, restoreFocus, contain]);\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var ownerDocument = (0, $6nfFC$getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n    if (!restoreFocus) return;\n    var treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n    if (!treeNode) return;\n    var _nodeToRestoreRef_current;\n    treeNode.nodeToRestore = (_nodeToRestoreRef_current = nodeToRestoreRef.current) !== null && _nodeToRestoreRef_current !== void 0 ? _nodeToRestoreRef_current : undefined;\n    return function () {\n      var treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n      if (!treeNode) return;\n      var nodeToRestore = treeNode.nodeToRestore;\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      if (restoreFocus && nodeToRestore && (\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      $9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, scopeRef.current) || ownerDocument.activeElement === ownerDocument.body && $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef))) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        var clonedTree = $9bf71ea28793e738$export$d06fae2ee68b101e.clone();\n        requestAnimationFrame(function () {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (ownerDocument.activeElement === ownerDocument.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            var _treeNode = clonedTree.getTreeNode(scopeRef);\n            while (_treeNode) {\n              if (_treeNode.nodeToRestore && _treeNode.nodeToRestore.isConnected) {\n                $9bf71ea28793e738$var$focusElement(_treeNode.nodeToRestore);\n                return;\n              }\n              _treeNode = _treeNode.parent;\n            }\n            // If no nodeToRestore was found, focus the first element in the nearest\n            // ancestor scope that is still in the tree.\n            _treeNode = clonedTree.getTreeNode(scopeRef);\n            while (_treeNode) {\n              if (_treeNode.scopeRef && _treeNode.scopeRef.current && $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(_treeNode.scopeRef)) {\n                $9bf71ea28793e738$var$focusFirstInScope(_treeNode.scopeRef.current, true);\n                return;\n              }\n              _treeNode = _treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus]);\n}\nfunction $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {\n  var selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;\n  var walker = (0, $6nfFC$getOwnerDocument)(root).createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode(node) {\n      var _opts_from;\n      // Skip nodes inside the starting node.\n      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;\n      if (node.matches(selector) && (0, $645f2e67b85a24c9$export$e989c0fffaa6b27a)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;\n      return NodeFilter.FILTER_SKIP;\n    }\n  });\n  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;\n  return walker;\n}\nfunction $9bf71ea28793e738$export$c5251b9e124bf29(ref) {\n  var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var root = ref.current;\n      if (!root) return null;\n      var from = opts.from,\n        _opts$tabbable = opts.tabbable,\n        tabbable = _opts$tabbable === void 0 ? defaultOptions.tabbable : _opts$tabbable,\n        _opts$wrap = opts.wrap,\n        wrap = _opts$wrap === void 0 ? defaultOptions.wrap : _opts$wrap,\n        _opts$accept = opts.accept,\n        accept = _opts$accept === void 0 ? defaultOptions.accept : _opts$accept;\n      var node = from || (0, $6nfFC$getOwnerDocument)(root).activeElement;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return null;\n      var from = opts.from,\n        _opts$tabbable2 = opts.tabbable,\n        tabbable = _opts$tabbable2 === void 0 ? defaultOptions.tabbable : _opts$tabbable2,\n        _opts$wrap2 = opts.wrap,\n        wrap = _opts$wrap2 === void 0 ? defaultOptions.wrap : _opts$wrap2,\n        _opts$accept2 = opts.accept,\n        accept = _opts$accept2 === void 0 ? defaultOptions.accept : _opts$accept2;\n      var node = from || (0, $6nfFC$getOwnerDocument)(root).activeElement;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;else {\n        var next = $9bf71ea28793e738$var$last(walker);\n        if (next) $9bf71ea28793e738$var$focusElement(next, true);\n        return next !== null && next !== void 0 ? next : null;\n      }\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        var lastNode = $9bf71ea28793e738$var$last(walker);\n        if (!lastNode)\n          // couldn't wrap\n          return null;\n        previousNode = lastNode;\n      }\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode !== null && previousNode !== void 0 ? previousNode : null;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return null;\n      var _opts$tabbable3 = opts.tabbable,\n        tabbable = _opts$tabbable3 === void 0 ? defaultOptions.tabbable : _opts$tabbable3,\n        _opts$accept3 = opts.accept,\n        accept = _opts$accept3 === void 0 ? defaultOptions.accept : _opts$accept3;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var nextNode = walker.nextNode();\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return null;\n      var _opts$tabbable4 = opts.tabbable,\n        tabbable = _opts$tabbable4 === void 0 ? defaultOptions.tabbable : _opts$tabbable4,\n        _opts$accept4 = opts.accept,\n        accept = _opts$accept4 === void 0 ? defaultOptions.accept : _opts$accept4;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var next = $9bf71ea28793e738$var$last(walker);\n      if (next) $9bf71ea28793e738$var$focusElement(next, true);\n      return next !== null && next !== void 0 ? next : null;\n    }\n  };\n}\nfunction $9bf71ea28793e738$var$last(walker) {\n  var next = undefined;\n  var last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nvar $9bf71ea28793e738$var$Tree = /*#__PURE__*/function () {\n  function $9bf71ea28793e738$var$Tree() {\n    _classCallCheck(this, $9bf71ea28793e738$var$Tree);\n    this.fastMap = new Map();\n    this.root = new $9bf71ea28793e738$var$TreeNode({\n      scopeRef: null\n    });\n    this.fastMap.set(null, this.root);\n  }\n  _createClass($9bf71ea28793e738$var$Tree, [{\n    key: \"size\",\n    get: function get() {\n      return this.fastMap.size;\n    }\n  }, {\n    key: \"getTreeNode\",\n    value: function getTreeNode(data) {\n      return this.fastMap.get(data);\n    }\n  }, {\n    key: \"addTreeNode\",\n    value: function addTreeNode(scopeRef, parent, nodeToRestore) {\n      var parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);\n      if (!parentNode) return;\n      var node = new $9bf71ea28793e738$var$TreeNode({\n        scopeRef: scopeRef\n      });\n      parentNode.addChild(node);\n      node.parent = parentNode;\n      this.fastMap.set(scopeRef, node);\n      if (nodeToRestore) node.nodeToRestore = nodeToRestore;\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode(node) {\n      this.fastMap.set(node.scopeRef, node);\n    }\n  }, {\n    key: \"removeTreeNode\",\n    value: function removeTreeNode(scopeRef) {\n      // never remove the root\n      if (scopeRef === null) return;\n      var node = this.fastMap.get(scopeRef);\n      if (!node) return;\n      var parentNode = node.parent;\n      // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n      // if we are, then replace the siblings restore with the restore from the scope we're removing\n      var _iterator3 = _createForOfIteratorHelper(this.traverse()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var current = _step3.value;\n          if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      var children = node.children;\n      if (parentNode) {\n        parentNode.removeChild(node);\n        if (children.size > 0) children.forEach(function (child) {\n          return parentNode && parentNode.addChild(child);\n        });\n      }\n      this.fastMap.delete(node.scopeRef);\n    }\n    // Pre Order Depth First\n  }, {\n    key: \"traverse\",\n    value: function traverse() {\n      var _this = this;\n      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _iterator4, _step4, child;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(node.scopeRef != null)) {\n                _context.next = 3;\n                break;\n              }\n              _context.next = 3;\n              return node;\n            case 3:\n              if (!(node.children.size > 0)) {\n                _context.next = 20;\n                break;\n              }\n              _iterator4 = _createForOfIteratorHelper(node.children);\n              _context.prev = 5;\n              _iterator4.s();\n            case 7:\n              if ((_step4 = _iterator4.n()).done) {\n                _context.next = 12;\n                break;\n              }\n              child = _step4.value;\n              return _context.delegateYield(_this.traverse(child), \"t0\", 10);\n            case 10:\n              _context.next = 7;\n              break;\n            case 12:\n              _context.next = 17;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t1 = _context[\"catch\"](5);\n              _iterator4.e(_context.t1);\n            case 17:\n              _context.prev = 17;\n              _iterator4.f();\n              return _context.finish(17);\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 14, 17, 20]]);\n      })();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var _node_parent;\n      var newTree = new $9bf71ea28793e738$var$Tree();\n      var _node_parent_scopeRef;\n      var _iterator5 = _createForOfIteratorHelper(this.traverse()),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var node = _step5.value;\n          newTree.addTreeNode(node.scopeRef, (_node_parent_scopeRef = (_node_parent = node.parent) === null || _node_parent === void 0 ? void 0 : _node_parent.scopeRef) !== null && _node_parent_scopeRef !== void 0 ? _node_parent_scopeRef : null, node.nodeToRestore);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return newTree;\n    }\n  }]);\n  return $9bf71ea28793e738$var$Tree;\n}();\nvar $9bf71ea28793e738$var$TreeNode = /*#__PURE__*/function () {\n  function $9bf71ea28793e738$var$TreeNode(props) {\n    _classCallCheck(this, $9bf71ea28793e738$var$TreeNode);\n    this.children = new Set();\n    this.contain = false;\n    this.scopeRef = props.scopeRef;\n  }\n  _createClass($9bf71ea28793e738$var$TreeNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      this.children.add(node);\n      node.parent = this;\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(node) {\n      this.children.delete(node);\n      node.parent = undefined;\n    }\n  }]);\n  return $9bf71ea28793e738$var$TreeNode;\n}();\nvar $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $f7dceffc5ad7768b$export$4e328f61c538687f() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    isTextInput = props.isTextInput,\n    within = props.within;\n  var state = (0, $6nfFC$useRef)({\n    isFocused: false,\n    isFocusVisible: autoFocus || (0, $6nfFC$isFocusVisible)()\n  });\n  var _ref2 = (0, $6nfFC$useState)(false),\n    _ref3 = _slicedToArray(_ref2, 2),\n    isFocused = _ref3[0],\n    setFocused = _ref3[1];\n  var _ref4 = (0, $6nfFC$useState)(function () {\n      return state.current.isFocused && state.current.isFocusVisible;\n    }),\n    _ref5 = _slicedToArray(_ref4, 2),\n    isFocusVisibleState = _ref5[0],\n    setFocusVisible = _ref5[1];\n  var updateState = (0, $6nfFC$useCallback)(function () {\n    return setFocusVisible(state.current.isFocused && state.current.isFocusVisible);\n  }, []);\n  var onFocusChange = (0, $6nfFC$useCallback)(function (isFocused) {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n  (0, $6nfFC$useFocusVisibleListener)(function (isFocusVisible) {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {\n    isTextInput: isTextInput\n  });\n  var _ref6 = (0, $6nfFC$useFocus)({\n      isDisabled: within,\n      onFocusChange: onFocusChange\n    }),\n    focusProps = _ref6.focusProps;\n  var _ref7 = (0, $6nfFC$useFocusWithin)({\n      isDisabled: !within,\n      onFocusWithinChange: onFocusChange\n    }),\n    focusWithinProps = _ref7.focusWithinProps;\n  return {\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\nfunction $907718708eab68af$export$1a38b4ad7f578e1d(props) {\n  var _ref9;\n  var children = props.children,\n    focusClass = props.focusClass,\n    focusRingClass = props.focusRingClass;\n  var _ref8 = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)(props),\n    isFocused = _ref8.isFocused,\n    isFocusVisible = _ref8.isFocusVisible,\n    focusProps = _ref8.focusProps;\n  var child = (0, $6nfFC$react).Children.only(children);\n  return /*#__PURE__*/(0, $6nfFC$react).cloneElement(child, (0, $6nfFC$mergeProps)(child.props, _objectSpread(_objectSpread({}, focusProps), {}, {\n    className: (0, $6nfFC$clsx)((_ref9 = {}, _defineProperty(_ref9, focusClass || \"\", isFocused), _defineProperty(_ref9, focusRingClass || \"\", isFocusVisible), _ref9))\n  })));\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nvar $e6afbd83fe6ebbd2$var$FocusableContext = /*#__PURE__*/(0, $6nfFC$react).createContext(null);\nfunction $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {\n  var context = (0, $6nfFC$useContext)($e6afbd83fe6ebbd2$var$FocusableContext) || {};\n  (0, $6nfFC$useSyncRef)(context, ref);\n  // eslint-disable-next-line\n  var _ = context.ref,\n    otherProps = _objectWithoutProperties(context, _excluded);\n  return otherProps;\n}\n/**\r\n * Provides DOM props to the nearest focusable child.\r\n */\nfunction $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {\n  var children = props.children,\n    otherProps = _objectWithoutProperties(props, _excluded2);\n  var objRef = (0, $6nfFC$useObjectRef)(ref);\n  var context = _objectSpread(_objectSpread({}, otherProps), {}, {\n    ref: objRef\n  });\n  return /*#__PURE__*/(0, $6nfFC$react).createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {\n    value: context\n  }, children);\n}\nvar $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = /*#__PURE__*/(0, $6nfFC$react).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);\nfunction $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {\n  var _ref10 = (0, $6nfFC$useFocus)(props),\n    focusProps = _ref10.focusProps;\n  var _ref11 = (0, $6nfFC$useKeyboard)(props),\n    keyboardProps = _ref11.keyboardProps;\n  var interactions = (0, $6nfFC$mergeProps)(focusProps, keyboardProps);\n  var domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);\n  var interactionProps = props.isDisabled ? {} : domProps;\n  var autoFocusRef = (0, $6nfFC$useRef)(props.autoFocus);\n  (0, $6nfFC$useEffect)(function () {\n    if (autoFocusRef.current && domRef.current) (0, $6a99195332edec8b$export$80f3e147d781571c)(domRef.current);\n    autoFocusRef.current = false;\n  }, [domRef]);\n  return {\n    focusableProps: (0, $6nfFC$mergeProps)(_objectSpread(_objectSpread({}, interactions), {}, {\n      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n    }), interactionProps)\n  };\n}\n\n/*\r\n * Copyright 2022 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {\n  var isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;\n  var _ref12 = (0, $6nfFC$useState)(false),\n    _ref13 = _slicedToArray(_ref12, 2),\n    hasTabbableChild = _ref13[0],\n    setHasTabbableChild = _ref13[1];\n  (0, $6nfFC$useLayoutEffect)(function () {\n    if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {\n      var update = function update() {\n        if (ref.current) {\n          var walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {\n            tabbable: true\n          });\n          setHasTabbableChild(!!walker.nextNode());\n        }\n      };\n      update();\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      var observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: [\"tabIndex\", \"disabled\"]\n      });\n      return function () {\n        // Disconnect mutation observer when a React update occurs on the top-level component\n        // so we update synchronously after re-rendering. Otherwise React will emit act warnings\n        // in tests since mutation observers fire asynchronously. The mutation observer is necessary\n        // so we also update if a child component re-renders and adds/removes something tabbable.\n        observer.disconnect();\n      };\n    }\n  });\n  return isDisabled ? false : hasTabbableChild;\n}\nexport { $9bf71ea28793e738$export$20e40289641fbbb6 as FocusScope, $9bf71ea28793e738$export$10c5169755ce7bd7 as useFocusManager, $9bf71ea28793e738$export$2d6ec8fc375ceafa as getFocusableTreeWalker, $9bf71ea28793e738$export$c5251b9e124bf29 as createFocusManager, $9bf71ea28793e738$export$1258395f99bf9cbf as isElementInChildOfActiveScope, $907718708eab68af$export$1a38b4ad7f578e1d as FocusRing, $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 as FocusableProvider, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c as useFocusable, $f7dceffc5ad7768b$export$4e328f61c538687f as useFocusRing, $6a99195332edec8b$export$80f3e147d781571c as focusSafely, $83013635b024ae3d$export$eac1895992b9f3d6 as useHasTabbableChild };","map":{"version":3,"names":["$6a99195332edec8b$export$80f3e147d781571c","element","ownerDocument","$6nfFC$getOwnerDocument","$6nfFC$getInteractionModality","lastFocusedElement","activeElement","$6nfFC$runAfterTransition","isConnected","$6nfFC$focusWithoutScrolling","$645f2e67b85a24c9$var$isStyleVisible","windowObject","$6nfFC$getOwnerWindow","HTMLElement","SVGElement","_element$style","style","display","visibility","isVisible","getComputedStyle","defaultView","_getComputedStyle","computedDisplay","computedVisibility","$645f2e67b85a24c9$var$isAttributeVisible","childElement","hasAttribute","nodeName","$645f2e67b85a24c9$export$e989c0fffaa6b27a","parentElement","$9bf71ea28793e738$var$FocusContext","$6nfFC$react","createContext","$9bf71ea28793e738$var$activeScope","$9bf71ea28793e738$export$20e40289641fbbb6","props","children","contain","restoreFocus","autoFocus","startRef","$6nfFC$useRef","endRef","scopeRef","_ref","$6nfFC$useContext","parentNode","node","$6nfFC$useMemo","$9bf71ea28793e738$var$TreeNode","$6nfFC$useLayoutEffect","parent","$9bf71ea28793e738$export$d06fae2ee68b101e","root","getTreeNode","$9bf71ea28793e738$var$isAncestorScope","activeNode","addChild","addNode","_startRef_current","current","nextSibling","nodes","push","$9bf71ea28793e738$var$useActiveScopeTracker","$9bf71ea28793e738$var$useFocusContainment","$9bf71ea28793e738$var$useRestoreFocus","$9bf71ea28793e738$var$useAutoFocus","$6nfFC$useEffect","undefined","scope","$9bf71ea28793e738$var$isElementInScope","_iterator","_createForOfIteratorHelper","traverse","_step","s","n","done","value","err","e","f","_focusScopeTree_getTreeNode_parent","_focusScopeTree_getTreeNode","_focusScopeTree_getTreeNode_parent_scopeRef","parentScope","removeTreeNode","focusManager","$9bf71ea28793e738$var$createFocusManagerForScope","createElement","Provider","hidden","ref","$9bf71ea28793e738$export$10c5169755ce7bd7","_useContext","focusNext","opts","arguments","length","from","tabbable","wrap","accept","sentinel","previousElementSibling","scopeRoot","$9bf71ea28793e738$var$getScopeRoot","walker","$9bf71ea28793e738$export$2d6ec8fc375ceafa","currentNode","nextNode","$9bf71ea28793e738$var$focusElement","focusPrevious","nextElementSibling","previousNode","focusFirst","focusLast","$9bf71ea28793e738$var$focusableElements","$9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR","join","$9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR","$9bf71ea28793e738$var$shouldContainFocus","focusedNode","raf","cancelAnimationFrame","onKeyDown","key","altKey","ctrlKey","metaKey","focusedElement","nextElement","shiftKey","preventDefault","onFocus","target","$9bf71ea28793e738$var$isElementInChildScope","focus","$9bf71ea28793e738$var$focusFirstInScope","onBlur","requestAnimationFrame","body","contains","_focusedNode_current","addEventListener","forEach","removeEventListener","$9bf71ea28793e738$var$isElementInAnyScope","some","Element","closest","_iterator2","_step2","$9bf71ea28793e738$export$1258395f99bf9cbf","ancestor","scroll","autoFocusRef","useRef","restore","$9bf71ea28793e738$var$shouldRestoreFocus","nodeToRestore","nodeToRestoreRef","document","treeNode","stopPropagation","blur","_nodeToRestoreRef_current","clonedTree","clone","selector","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","_opts_from","FILTER_REJECT","matches","FILTER_ACCEPT","FILTER_SKIP","$9bf71ea28793e738$export$c5251b9e124bf29","defaultOptions","_opts$tabbable","_opts$wrap","_opts$accept","_opts$tabbable2","_opts$wrap2","_opts$accept2","next","$9bf71ea28793e738$var$last","lastNode","_opts$tabbable3","_opts$accept3","_opts$tabbable4","_opts$accept4","last","lastChild","$9bf71ea28793e738$var$Tree","_classCallCheck","fastMap","Map","set","_createClass","get","size","data","addTreeNode","_iterator3","_step3","removeChild","child","delete","_this","_regeneratorRuntime","mark","_callee","_iterator4","_step4","_callee$","_context","prev","delegateYield","t1","finish","stop","_node_parent","newTree","_node_parent_scopeRef","_iterator5","_step5","Set","add","$f7dceffc5ad7768b$export$4e328f61c538687f","_props$autoFocus","isTextInput","within","state","isFocused","isFocusVisible","$6nfFC$isFocusVisible","_ref2","$6nfFC$useState","_ref3","_slicedToArray","setFocused","_ref4","_ref5","isFocusVisibleState","setFocusVisible","updateState","$6nfFC$useCallback","onFocusChange","$6nfFC$useFocusVisibleListener","_ref6","$6nfFC$useFocus","isDisabled","focusProps","_ref7","$6nfFC$useFocusWithin","onFocusWithinChange","focusWithinProps","$907718708eab68af$export$1a38b4ad7f578e1d","_ref9","focusClass","focusRingClass","_ref8","Children","only","cloneElement","$6nfFC$mergeProps","_objectSpread","className","$6nfFC$clsx","_defineProperty","$e6afbd83fe6ebbd2$var$FocusableContext","$e6afbd83fe6ebbd2$var$useFocusableContext","context","$6nfFC$useSyncRef","_","otherProps","_objectWithoutProperties","_excluded","$e6afbd83fe6ebbd2$var$FocusableProvider","_excluded2","objRef","$6nfFC$useObjectRef","$e6afbd83fe6ebbd2$export$13f3202a3e5ddd5","forwardRef","$e6afbd83fe6ebbd2$export$4c014de7c8940b4c","domRef","_ref10","_ref11","$6nfFC$useKeyboard","keyboardProps","interactions","domProps","interactionProps","focusableProps","tabIndex","excludeFromTabOrder","$83013635b024ae3d$export$eac1895992b9f3d6","options","_ref12","_ref13","hasTabbableChild","setHasTabbableChild","update","observer","MutationObserver","observe","subtree","childList","attributes","attributeFilter","disconnect"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\FocusScope.tsx","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\focusSafely.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\isElementVisible.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\FocusRing.tsx","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\useFocusRing.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\useFocusable.tsx","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\useHasTabbableChild.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {FocusScope, useFocusManager, getFocusableTreeWalker, createFocusManager, isElementInChildOfActiveScope} from './FocusScope';\nexport {FocusRing} from './FocusRing';\nexport {FocusableProvider, useFocusable} from './useFocusable';\nexport {useFocusRing} from './useFocusRing';\nexport {focusSafely} from './focusSafely';\nexport {useHasTabbableChild} from './useHasTabbableChild';\n\nexport type {FocusScopeProps, FocusManager, FocusManagerOptions} from './FocusScope';\nexport type {FocusRingProps} from './FocusRing';\nexport type {FocusableAria, FocusableOptions, FocusableProviderProps} from './useFocusable';\nexport type {AriaFocusRingProps, FocusRingAria} from './useFocusRing';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusSafely} from './focusSafely';\nimport {getOwnerDocument, useLayoutEffect} from '@react-aria/utils';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useMemo, useRef} from 'react';\n\nexport interface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\nexport interface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: Element,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean,\n  /** A callback that determines whether the given element is focused. */\n  accept?: (node: Element) => boolean\n}\n\nexport interface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): FocusableElement | null,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): FocusableElement | null,\n  /** Moves focus to the first focusable or tabbable element in the focus scope. */\n  focusFirst(opts?: FocusManagerOptions): FocusableElement | null,\n    /** Moves focus to the last focusable or tabbable element in the focus scope. */\n  focusLast(opts?: FocusManagerOptions): FocusableElement | null\n}\n\ntype ScopeRef = RefObject<Element[]> | null;\ninterface IFocusContext {\n  focusManager: FocusManager,\n  parentNode: TreeNode | null\n}\n\nconst FocusContext = React.createContext<IFocusContext | null>(null);\n\nlet activeScope: ScopeRef = null;\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>(null);\n  let endRef = useRef<HTMLSpanElement>(null);\n  let scopeRef = useRef<Element[]>([]);\n  let {parentNode} = useContext(FocusContext) || {};\n\n  // Create a tree node here so we can add children to it even before it is added to the tree.\n  let node = useMemo(() => new TreeNode({scopeRef}), [scopeRef]);\n\n  useLayoutEffect(() => {\n    // If a new scope mounts outside the active scope, (e.g. DialogContainer launched from a menu),\n    // use the active scope as the parent instead of the parent from context. Layout effects run bottom\n    // up, so if the parent is not yet added to the tree, don't do this. Only the outer-most FocusScope\n    // that is being added should get the activeScope as its parent.\n    let parent = parentNode || focusScopeTree.root;\n    if (focusScopeTree.getTreeNode(parent.scopeRef) && activeScope && !isAncestorScope(activeScope, parent.scopeRef)) {\n      let activeNode = focusScopeTree.getTreeNode(activeScope);\n      if (activeNode) {\n        parent = activeNode;\n      }\n    }\n\n    // Add the node to the parent, and to the tree.\n    parent.addChild(node);\n    focusScopeTree.addNode(node);\n  }, [node, parentNode]);\n\n  useLayoutEffect(() => {\n    let node = focusScopeTree.getTreeNode(scopeRef);\n    if (node) {\n      node.contain = !!contain;\n    }\n  }, [contain]);\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current?.nextSibling!;\n    let nodes: Element[] = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node as Element);\n      node = node.nextSibling as Element;\n    }\n\n    scopeRef.current = nodes;\n  }, [children]);\n\n  useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  // This needs to be an effect so that activeScope is updated after the FocusScope tree is complete.\n  // It cannot be a useLayoutEffect because the parent of this node hasn't been attached in the tree yet.\n  useEffect(() => {\n    const activeElement = getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined).activeElement;\n    let scope: TreeNode | null = null;\n\n    if (isElementInScope(activeElement, scopeRef.current)) {\n      // We need to traverse the focusScope tree and find the bottom most scope that\n      // contains the active element and set that as the activeScope.\n      for (let node of focusScopeTree.traverse()) {\n        if (node.scopeRef && isElementInScope(activeElement, node.scopeRef.current)) {\n          scope = node;\n        }\n      }\n\n      if (scope === focusScopeTree.getTreeNode(scopeRef)) {\n        activeScope = scope.scopeRef;\n      }\n    }\n  }, [scopeRef]);\n\n  // This layout effect cleanup is so that the tree node is removed synchronously with react before the RAF\n  // in useRestoreFocus cleanup runs.\n  useLayoutEffect(() => {\n    return () => {\n      // Scope may have been re-parented.\n      let parentScope = focusScopeTree.getTreeNode(scopeRef)?.parent?.scopeRef ?? null;\n\n      if (\n        (scopeRef === activeScope || isAncestorScope(scopeRef, activeScope)) &&\n        (!parentScope || focusScopeTree.getTreeNode(parentScope))\n      ) {\n        activeScope = parentScope;\n      }\n      focusScopeTree.removeTreeNode(scopeRef);\n    };\n  }, [scopeRef]);\n\n  let focusManager = useMemo(() => createFocusManagerForScope(scopeRef), []);\n  let value = useMemo(() => ({\n    focusManager,\n    parentNode: node\n  }), [node, focusManager]);\n\n  return (\n    <FocusContext.Provider value={value}>\n      <span data-focus-scope-start hidden ref={startRef} />\n      {children}\n      <span data-focus-scope-end hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager | undefined {\n  return useContext(FocusContext)?.focusManager;\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<Element[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current!;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || getOwnerDocument(scope[0]).activeElement!;\n      let sentinel = scope[0].previousElementSibling!;\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current!;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || getOwnerDocument(scope[0]).activeElement!;\n      let sentinel = scope[scope.length - 1].nextElementSibling!;\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as FocusableElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let scope = scopeRef.current!;\n      let {tabbable, accept} = opts;\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable, accept}, scope);\n      walker.currentNode = scope[0].previousElementSibling!;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let scope = scopeRef.current!;\n      let {tabbable, accept} = opts;\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable, accept}, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling!;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: Element[]) {\n  return scope[0].parentElement!;\n}\n\nfunction shouldContainFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return true;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<Element[]>, contain?: boolean) {\n  let focusedNode = useRef<FocusableElement>();\n\n  let raf = useRef<ReturnType<typeof requestAnimationFrame>>();\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = undefined;\n      }\n      return;\n    }\n\n    const ownerDocument = getOwnerDocument(scope ? scope[0] : undefined);\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !shouldContainFocus(scopeRef)) {\n        return;\n      }\n\n      let focusedElement = ownerDocument.activeElement;\n      let scope = scopeRef.current;\n      if (!scope || !isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable: true}, scope);\n      if (!focusedElement) {\n        return;\n      }\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling! : scope[0].previousElementSibling!;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!activeScope || isAncestorScope(activeScope, scopeRef)) && isElementInScope(e.target, scopeRef.current)) {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if (shouldContainFocus(scopeRef) && !isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope && activeScope.current) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else if (shouldContainFocus(scopeRef)) {\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if (ownerDocument.activeElement && shouldContainFocus(scopeRef) && !isElementInChildScope(ownerDocument.activeElement, scopeRef)) {\n          activeScope = scopeRef;\n          if (ownerDocument.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current?.focus();\n          } else if (activeScope.current) {\n            focusFirstInScope(activeScope.current);\n          }\n        }\n      });\n    };\n\n    ownerDocument.addEventListener('keydown', onKeyDown, false);\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope?.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope?.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      ownerDocument.removeEventListener('keydown', onKeyDown, false);\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope?.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope?.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // This is a useLayoutEffect so it is guaranteed to run before our async synthetic blur\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element) {\n  return isElementInChildScope(element);\n}\n\nfunction isElementInScope(element?: Element | null, scope?: Element[] | null) {\n  if (!element) {\n    return false;\n  }\n  if (!scope) {\n    return false;\n  }\n  return scope.some(node => node.contains(element));\n}\n\nfunction isElementInChildScope(element: Element, scope: ScopeRef = null) {\n  // If the element is within a top layer element (e.g. toasts), always allow moving focus there.\n  if (element instanceof Element && element.closest('[data-react-aria-top-layer]')) {\n    return true;\n  }\n\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  for (let {scopeRef: s} of focusScopeTree.traverse(focusScopeTree.getTreeNode(scope))) {\n    if (s && isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/** @private */\nexport function isElementInChildOfActiveScope(element: Element) {\n  return isElementInChildScope(element, activeScope);\n}\n\nfunction isAncestorScope(ancestor: ScopeRef, scope: ScopeRef) {\n  let parent = focusScopeTree.getTreeNode(scope)?.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) {\n      return true;\n    }\n    parent = parent.parent;\n  }\n  return false;\n}\n\nfunction focusElement(element: FocusableElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: Element[], tabbable:boolean = true) {\n  let sentinel = scope[0].previousElementSibling!;\n  let scopeRoot = getScopeRoot(scope);\n  let walker = getFocusableTreeWalker(scopeRoot, {tabbable}, scope);\n  walker.currentNode = sentinel;\n  let nextNode = walker.nextNode();\n\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    scopeRoot = getScopeRoot(scope);\n    walker = getFocusableTreeWalker(scopeRoot, {tabbable: false}, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n\n  focusElement(nextNode as FocusableElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<Element[]>, autoFocus?: boolean) {\n  const autoFocusRef = React.useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      activeScope = scopeRef;\n      const ownerDocument = getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined);\n      if (!isElementInScope(ownerDocument.activeElement, activeScope.current) && scopeRef.current) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\n\nfunction useActiveScopeTracker(scopeRef: RefObject<Element[]>, restore?: boolean, contain?: boolean) {\n  // tracks the active scope, in case restore and contain are both false.\n  // if either are true, this is tracked in useRestoreFocus or useFocusContainment.\n  useLayoutEffect(() => {\n    if (restore || contain) {\n      return;\n    }\n\n    let scope = scopeRef.current;\n    const ownerDocument = getOwnerDocument(scope ? scope[0] : undefined);\n\n    let onFocus = (e) => {\n      let target = e.target as Element;\n      if (isElementInScope(target, scopeRef.current)) {\n        activeScope = scopeRef;\n      } else if (!isElementInAnyScope(target)) {\n        activeScope = null;\n      }\n    };\n\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope?.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope?.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  }, [scopeRef, restore, contain]);\n}\n\nfunction shouldRestoreFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return scope?.scopeRef === scopeRef;\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<Element[]>, restoreFocus?: boolean, contain?: boolean) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  // eslint-disable-next-line no-restricted-globals\n  const nodeToRestoreRef = useRef(typeof document !== 'undefined' ? getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined).activeElement as FocusableElement : null);\n\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    const ownerDocument = getOwnerDocument(scope ? scope[0] : undefined);\n    if (!restoreFocus || contain) {\n      return;\n    }\n\n    let onFocus = () => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!activeScope || isAncestorScope(activeScope, scopeRef)) &&\n      isElementInScope(ownerDocument.activeElement, scopeRef.current)\n      ) {\n        activeScope = scopeRef;\n      }\n    };\n\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope?.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope?.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scopeRef, contain]);\n\n  useLayoutEffect(() => {\n    const ownerDocument = getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined);\n\n    if (!restoreFocus) {\n      return;\n    }\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !shouldContainFocus(scopeRef)) {\n        return;\n      }\n\n      let focusedElement = ownerDocument.activeElement as FocusableElement;\n      if (!isElementInScope(focusedElement, scopeRef.current)) {\n        return;\n      }\n      let treeNode = focusScopeTree.getTreeNode(scopeRef);\n      if (!treeNode) {\n        return;\n      }\n      let nodeToRestore = treeNode.nodeToRestore;\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(ownerDocument.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n\n      if (!nodeToRestore || !ownerDocument.body.contains(nodeToRestore) || nodeToRestore === ownerDocument.body) {\n        nodeToRestore = undefined;\n        treeNode.nodeToRestore = undefined;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n        } while (isElementInScope(nextElement, scopeRef.current));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n           // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n           // then move focus to the body.\n           // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      ownerDocument.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        ownerDocument.removeEventListener('keydown', onKeyDown, true);\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    const ownerDocument = getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined);\n\n    if (!restoreFocus) {\n      return;\n    }\n\n    let treeNode = focusScopeTree.getTreeNode(scopeRef);\n    if (!treeNode) {\n      return;\n    }\n    treeNode.nodeToRestore = nodeToRestoreRef.current ?? undefined;\n    return () => {\n      let treeNode = focusScopeTree.getTreeNode(scopeRef);\n      if (!treeNode) {\n        return;\n      }\n      let nodeToRestore = treeNode.nodeToRestore;\n\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      if (\n        restoreFocus\n        && nodeToRestore\n        && (\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          isElementInScope(ownerDocument.activeElement, scopeRef.current)\n          || (ownerDocument.activeElement === ownerDocument.body && shouldRestoreFocus(scopeRef))\n        )\n      ) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        let clonedTree = focusScopeTree.clone();\n        requestAnimationFrame(() => {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (ownerDocument.activeElement === ownerDocument.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            let treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && treeNode.nodeToRestore.isConnected) {\n                focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n\n            // If no nodeToRestore was found, focus the first element in the nearest\n            // ancestor scope that is still in the tree.\n            treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.scopeRef && treeNode.scopeRef.current && focusScopeTree.getTreeNode(treeNode.scopeRef)) {\n                focusFirstInScope(treeNode.scopeRef.current, true);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: Element, opts?: FocusManagerOptions, scope?: Element[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = getOwnerDocument(root).createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as Element).matches(selector)\n          && isElementVisible(node as Element)\n          && (!scope || isElementInScope(node as Element, scope))\n          && (!opts?.accept || opts.accept(node as Element))\n        ) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<Element>, defaultOptions: FocusManagerOptions = {}): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      if (!root) {\n        return null;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || getOwnerDocument(root).activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node!;\n      }\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return null;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || getOwnerDocument(root).activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node!;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next ?? null;\n      }\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        let lastNode = last(walker);\n        if (!lastNode) {\n          // couldn't wrap\n          return null;\n        }\n        previousNode = lastNode;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode ?? null;\n    },\n    focusFirst(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return null;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return null;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let next = last(walker);\n      if (next) {\n        focusElement(next, true);\n      }\n      return next ?? null;\n    }\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement | undefined = undefined;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n\n\nclass Tree {\n  root: TreeNode;\n  private fastMap = new Map<ScopeRef, TreeNode>();\n\n  constructor() {\n    this.root = new TreeNode({scopeRef: null});\n    this.fastMap.set(null, this.root);\n  }\n\n  get size() {\n    return this.fastMap.size;\n  }\n\n  getTreeNode(data: ScopeRef) {\n    return this.fastMap.get(data);\n  }\n\n  addTreeNode(scopeRef: ScopeRef, parent: ScopeRef, nodeToRestore?: FocusableElement) {\n    let parentNode = this.fastMap.get(parent ?? null);\n    if (!parentNode) {\n      return;\n    }\n    let node = new TreeNode({scopeRef});\n    parentNode.addChild(node);\n    node.parent = parentNode;\n    this.fastMap.set(scopeRef, node);\n    if (nodeToRestore) {\n      node.nodeToRestore = nodeToRestore;\n    }\n  }\n\n  addNode(node: TreeNode) {\n    this.fastMap.set(node.scopeRef, node);\n  }\n\n  removeTreeNode(scopeRef: ScopeRef) {\n    // never remove the root\n    if (scopeRef === null) {\n      return;\n    }\n    let node = this.fastMap.get(scopeRef);\n    if (!node) {\n      return;\n    }\n    let parentNode = node.parent;\n    // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n    // if we are, then replace the siblings restore with the restore from the scope we're removing\n    for (let current of this.traverse()) {\n      if (\n        current !== node &&\n        node.nodeToRestore &&\n        current.nodeToRestore &&\n        node.scopeRef &&\n        node.scopeRef.current &&\n        isElementInScope(current.nodeToRestore, node.scopeRef.current)\n      ) {\n        current.nodeToRestore = node.nodeToRestore;\n      }\n    }\n    let children = node.children;\n    if (parentNode) {\n      parentNode.removeChild(node);\n      if (children.size > 0) {\n        children.forEach(child => parentNode && parentNode.addChild(child));\n      }\n    }\n\n    this.fastMap.delete(node.scopeRef);\n  }\n\n  // Pre Order Depth First\n  *traverse(node: TreeNode = this.root): Generator<TreeNode> {\n    if (node.scopeRef != null) {\n      yield node;\n    }\n    if (node.children.size > 0) {\n      for (let child of node.children) {\n        yield* this.traverse(child);\n      }\n    }\n  }\n\n  clone(): Tree {\n    let newTree = new Tree();\n    for (let node of this.traverse()) {\n      newTree.addTreeNode(node.scopeRef, node.parent?.scopeRef ?? null, node.nodeToRestore);\n    }\n    return newTree;\n  }\n}\n\nclass TreeNode {\n  public scopeRef: ScopeRef;\n  public nodeToRestore?: FocusableElement;\n  public parent?: TreeNode;\n  public children: Set<TreeNode> = new Set();\n  public contain = false;\n\n  constructor(props: {scopeRef: ScopeRef}) {\n    this.scopeRef = props.scopeRef;\n  }\n  addChild(node: TreeNode) {\n    this.children.add(node);\n    node.parent = this;\n  }\n  removeChild(node: TreeNode) {\n    this.children.delete(node);\n    node.parent = undefined;\n  }\n}\n\nexport let focusScopeTree = new Tree();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusWithoutScrolling, getOwnerDocument, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: FocusableElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  const ownerDocument = getOwnerDocument(element);\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = ownerDocument.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (ownerDocument.activeElement === lastFocusedElement && element.isConnected) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getOwnerWindow} from '@react-aria/utils';\n\nfunction isStyleVisible(element: Element) {\n  const windowObject = getOwnerWindow(element);\n  if (!(element instanceof windowObject.HTMLElement) && !(element instanceof windowObject.SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView as unknown as Window;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and\n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */\nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\nexport interface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useRef, useState} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableDOMProps, FocusableElement, FocusableProps} from '@react-types/shared';\nimport {focusSafely} from './';\nimport {mergeProps, useObjectRef, useSyncRef} from '@react-aria/utils';\nimport React, {ForwardedRef, MutableRefObject, ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\nexport interface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusableProviderProps extends DOMAttributes {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<FocusableElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue | null>(null);\n\nfunction useFocusableContext(ref: RefObject<FocusableElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  // eslint-disable-next-line\n  let {ref: _, ...otherProps} = context;\n  return otherProps;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: ForwardedRef<FocusableElement>) {\n  let {children, ...otherProps} = props;\n  let objRef = useObjectRef(ref);\n  let context = {\n    ...otherProps,\n    ref: objRef\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\nexport interface FocusableAria {\n  /** Props for the focusable element. */\n  focusableProps: DOMAttributes\n}\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<FocusableElement>): FocusableAria {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = useRef(props.autoFocus);\n\n  useEffect(() => {\n    if (autoFocusRef.current && domRef.current) {\n      focusSafely(domRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getFocusableTreeWalker} from './FocusScope';\nimport {RefObject, useState} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\ninterface AriaHasTabbableChildOptions {\n  isDisabled?: boolean\n}\n\n// This was created for a special empty case of a component that can have child or\n// be empty, like Collection/Virtualizer/Table/ListView/etc. When these components\n// are empty they can have a message with a tabbable element, which is like them\n// being not empty, when it comes to focus and tab order.\n\n/**\n * Returns whether an element has a tabbable child, and updates as children change.\n * @private\n */\nexport function useHasTabbableChild(ref: RefObject<Element>, options?: AriaHasTabbableChildOptions): boolean {\n  let isDisabled = options?.isDisabled;\n  let [hasTabbableChild, setHasTabbableChild] = useState(false);\n\n  useLayoutEffect(() => {\n    if (ref?.current && !isDisabled) {\n      let update = () => {\n        if (ref.current) {\n          let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n          setHasTabbableChild(!!walker.nextNode());\n        }\n      };\n\n      update();\n\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      let observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: ['tabIndex', 'disabled']\n      });\n\n      return () => {\n        // Disconnect mutation observer when a React update occurs on the top-level component\n        // so we update synchronously after re-rendering. Otherwise React will emit act warnings\n        // in tests since mutation observers fire asynchronously. The mutation observer is necessary\n        // so we also update if a child component re-renders and adds/removes something tabbable.\n        observer.disconnect();\n      };\n    }\n  });\n\n  return isDisabled ? false : hasTabbableChild;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}