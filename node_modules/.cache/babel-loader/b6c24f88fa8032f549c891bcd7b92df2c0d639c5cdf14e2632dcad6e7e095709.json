{"ast":null,"code":"\"use client\";\n\n// src/use-chip.ts\nimport _toConsumableArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"ref\", \"as\", \"children\", \"avatar\", \"startContent\", \"endContent\", \"onClose\", \"classNames\", \"className\"];\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { usePress } from \"@nextui-org/use-aria-press\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { chip } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { useMemo, isValidElement, cloneElement } from \"react\";\nfunction useChip(originalProps) {\n  var _mapPropsVariants = mapPropsVariants(originalProps, chip.variantKeys),\n    _mapPropsVariants2 = _slicedToArray(_mapPropsVariants, 2),\n    props = _mapPropsVariants2[0],\n    variantProps = _mapPropsVariants2[1];\n  var ref = props.ref,\n    as = props.as,\n    children = props.children,\n    avatar = props.avatar,\n    startContent = props.startContent,\n    endContent = props.endContent,\n    onClose = props.onClose,\n    classNames = props.classNames,\n    className = props.className,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var Component = as || \"div\";\n  var domRef = useDOMRef(ref);\n  var baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  var isCloseable = !!onClose;\n  var isDotVariant = originalProps.variant === \"dot\";\n  var _useFocusRing = useFocusRing(),\n    closeFocusProps = _useFocusRing.focusProps,\n    isCloseButtonFocusVisible = _useFocusRing.isFocusVisible;\n  var isOneChar = useMemo(function () {\n    return typeof children === \"string\" && (children == null ? void 0 : children.length) === 1;\n  }, [children]);\n  var hasStartContent = useMemo(function () {\n    return !!avatar || !!startContent;\n  }, [avatar, startContent]);\n  var hasEndContent = useMemo(function () {\n    return !!endContent || isCloseable;\n  }, [endContent, isCloseable]);\n  var slots = useMemo(function () {\n    return chip(_objectSpread(_objectSpread({}, variantProps), {}, {\n      hasStartContent: hasStartContent,\n      hasEndContent: hasEndContent,\n      isOneChar: isOneChar,\n      isCloseable: isCloseable,\n      isCloseButtonFocusVisible: isCloseButtonFocusVisible\n    }));\n  }, [].concat(_toConsumableArray(Object.values(variantProps)), [isCloseButtonFocusVisible, hasStartContent, hasEndContent, isOneChar, isCloseable]));\n  var _usePress = usePress({\n      isDisabled: !!(originalProps == null ? void 0 : originalProps.isDisabled),\n      onPress: onClose\n    }),\n    closePressProps = _usePress.pressProps;\n  var getChipProps = function getChipProps() {\n    return _objectSpread({\n      ref: domRef,\n      className: slots.base({\n        class: baseStyles\n      })\n    }, otherProps);\n  };\n  var getCloseButtonProps = function getCloseButtonProps() {\n    return _objectSpread({\n      role: \"button\",\n      tabIndex: 0,\n      className: slots.closeButton({\n        class: classNames == null ? void 0 : classNames.closeButton\n      })\n    }, mergeProps(closePressProps, closeFocusProps));\n  };\n  var getAvatarClone = function getAvatarClone(avatar2) {\n    if (!isValidElement(avatar2)) return null;\n    return cloneElement(avatar2, {\n      className: slots.avatar({\n        class: classNames == null ? void 0 : classNames.avatar\n      })\n    });\n  };\n  var getContentClone = function getContentClone(content) {\n    return isValidElement(content) ? cloneElement(content, {\n      className: clsx(\"max-h-[80%]\", content.props.className)\n    }) : null;\n  };\n  return {\n    Component: Component,\n    children: children,\n    slots: slots,\n    classNames: classNames,\n    isDot: isDotVariant,\n    isCloseable: isCloseable,\n    startContent: getAvatarClone(avatar) || getContentClone(startContent),\n    endContent: getContentClone(endContent),\n    getCloseButtonProps: getCloseButtonProps,\n    getChipProps: getChipProps\n  };\n}\nexport { useChip };","map":{"version":3,"names":["_toConsumableArray","_objectSpread","_objectWithoutProperties","_slicedToArray","_excluded","mapPropsVariants","mergeProps","usePress","useFocusRing","chip","useDOMRef","clsx","useMemo","isValidElement","cloneElement","useChip","originalProps","_mapPropsVariants","variantKeys","_mapPropsVariants2","props","variantProps","ref","as","children","avatar","startContent","endContent","onClose","classNames","className","otherProps","Component","domRef","baseStyles","base","isCloseable","isDotVariant","variant","_useFocusRing","closeFocusProps","focusProps","isCloseButtonFocusVisible","isFocusVisible","isOneChar","length","hasStartContent","hasEndContent","slots","concat","Object","values","_usePress","isDisabled","onPress","closePressProps","pressProps","getChipProps","class","getCloseButtonProps","role","tabIndex","closeButton","getAvatarClone","avatar2","getContentClone","content","isDot"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@nextui-org/chip/dist/chunk-ECKJU7BV.mjs"],"sourcesContent":["\"use client\";\r\n\r\n// src/use-chip.ts\r\nimport { mapPropsVariants } from \"@nextui-org/system\";\r\nimport { mergeProps } from \"@react-aria/utils\";\r\nimport { usePress } from \"@nextui-org/use-aria-press\";\r\nimport { useFocusRing } from \"@react-aria/focus\";\r\nimport { chip } from \"@nextui-org/theme\";\r\nimport { useDOMRef } from \"@nextui-org/react-utils\";\r\nimport { clsx } from \"@nextui-org/shared-utils\";\r\nimport { useMemo, isValidElement, cloneElement } from \"react\";\r\nfunction useChip(originalProps) {\r\n  const [props, variantProps] = mapPropsVariants(originalProps, chip.variantKeys);\r\n  const {\r\n    ref,\r\n    as,\r\n    children,\r\n    avatar,\r\n    startContent,\r\n    endContent,\r\n    onClose,\r\n    classNames,\r\n    className,\r\n    ...otherProps\r\n  } = props;\r\n  const Component = as || \"div\";\r\n  const domRef = useDOMRef(ref);\r\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\r\n  const isCloseable = !!onClose;\r\n  const isDotVariant = originalProps.variant === \"dot\";\r\n  const { focusProps: closeFocusProps, isFocusVisible: isCloseButtonFocusVisible } = useFocusRing();\r\n  const isOneChar = useMemo(\r\n    () => typeof children === \"string\" && (children == null ? void 0 : children.length) === 1,\r\n    [children]\r\n  );\r\n  const hasStartContent = useMemo(() => !!avatar || !!startContent, [avatar, startContent]);\r\n  const hasEndContent = useMemo(() => !!endContent || isCloseable, [endContent, isCloseable]);\r\n  const slots = useMemo(\r\n    () => chip({\r\n      ...variantProps,\r\n      hasStartContent,\r\n      hasEndContent,\r\n      isOneChar,\r\n      isCloseable,\r\n      isCloseButtonFocusVisible\r\n    }),\r\n    [\r\n      ...Object.values(variantProps),\r\n      isCloseButtonFocusVisible,\r\n      hasStartContent,\r\n      hasEndContent,\r\n      isOneChar,\r\n      isCloseable\r\n    ]\r\n  );\r\n  const { pressProps: closePressProps } = usePress({\r\n    isDisabled: !!(originalProps == null ? void 0 : originalProps.isDisabled),\r\n    onPress: onClose\r\n  });\r\n  const getChipProps = () => {\r\n    return {\r\n      ref: domRef,\r\n      className: slots.base({ class: baseStyles }),\r\n      ...otherProps\r\n    };\r\n  };\r\n  const getCloseButtonProps = () => {\r\n    return {\r\n      role: \"button\",\r\n      tabIndex: 0,\r\n      className: slots.closeButton({ class: classNames == null ? void 0 : classNames.closeButton }),\r\n      ...mergeProps(closePressProps, closeFocusProps)\r\n    };\r\n  };\r\n  const getAvatarClone = (avatar2) => {\r\n    if (!isValidElement(avatar2))\r\n      return null;\r\n    return cloneElement(avatar2, {\r\n      className: slots.avatar({ class: classNames == null ? void 0 : classNames.avatar })\r\n    });\r\n  };\r\n  const getContentClone = (content) => isValidElement(content) ? cloneElement(content, {\r\n    className: clsx(\"max-h-[80%]\", content.props.className)\r\n  }) : null;\r\n  return {\r\n    Component,\r\n    children,\r\n    slots,\r\n    classNames,\r\n    isDot: isDotVariant,\r\n    isCloseable,\r\n    startContent: getAvatarClone(avatar) || getContentClone(startContent),\r\n    endContent: getContentClone(endContent),\r\n    getCloseButtonProps,\r\n    getChipProps\r\n  };\r\n}\r\n\r\nexport {\r\n  useChip\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AAAA,OAAAA,kBAAA;AAAA,OAAAC,aAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,cAAA;AAAA,IAAAC,SAAA;AACA,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,OAAO,EAAEC,cAAc,EAAEC,YAAY,QAAQ,OAAO;AAC7D,SAASC,OAAOA,CAACC,aAAa,EAAE;EAC9B,IAAAC,iBAAA,GAA8BZ,gBAAgB,CAACW,aAAa,EAAEP,IAAI,CAACS,WAAW,CAAC;IAAAC,kBAAA,GAAAhB,cAAA,CAAAc,iBAAA;IAAxEG,KAAK,GAAAD,kBAAA;IAAEE,YAAY,GAAAF,kBAAA;EAC1B,IACEG,GAAG,GAUDF,KAAK,CAVPE,GAAG;IACHC,EAAE,GASAH,KAAK,CATPG,EAAE;IACFC,QAAQ,GAQNJ,KAAK,CARPI,QAAQ;IACRC,MAAM,GAOJL,KAAK,CAPPK,MAAM;IACNC,YAAY,GAMVN,KAAK,CANPM,YAAY;IACZC,UAAU,GAKRP,KAAK,CALPO,UAAU;IACVC,OAAO,GAILR,KAAK,CAJPQ,OAAO;IACPC,UAAU,GAGRT,KAAK,CAHPS,UAAU;IACVC,SAAS,GAEPV,KAAK,CAFPU,SAAS;IACNC,UAAU,GAAA7B,wBAAA,CACXkB,KAAK,EAAAhB,SAAA;EACT,IAAM4B,SAAS,GAAGT,EAAE,IAAI,KAAK;EAC7B,IAAMU,MAAM,GAAGvB,SAAS,CAACY,GAAG,CAAC;EAC7B,IAAMY,UAAU,GAAGvB,IAAI,CAACkB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACM,IAAI,EAAEL,SAAS,CAAC;EACjF,IAAMM,WAAW,GAAG,CAAC,CAACR,OAAO;EAC7B,IAAMS,YAAY,GAAGrB,aAAa,CAACsB,OAAO,KAAK,KAAK;EACpD,IAAAC,aAAA,GAAmF/B,YAAY,EAAE;IAA7EgC,eAAe,GAAAD,aAAA,CAA3BE,UAAU;IAAmCC,yBAAyB,GAAAH,aAAA,CAAzCI,cAAc;EACnD,IAAMC,SAAS,GAAGhC,OAAO,CACvB;IAAA,OAAM,OAAOY,QAAQ,KAAK,QAAQ,IAAI,CAACA,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACqB,MAAM,MAAM,CAAC;EAAA,GACzF,CAACrB,QAAQ,CAAC,CACX;EACD,IAAMsB,eAAe,GAAGlC,OAAO,CAAC;IAAA,OAAM,CAAC,CAACa,MAAM,IAAI,CAAC,CAACC,YAAY;EAAA,GAAE,CAACD,MAAM,EAAEC,YAAY,CAAC,CAAC;EACzF,IAAMqB,aAAa,GAAGnC,OAAO,CAAC;IAAA,OAAM,CAAC,CAACe,UAAU,IAAIS,WAAW;EAAA,GAAE,CAACT,UAAU,EAAES,WAAW,CAAC,CAAC;EAC3F,IAAMY,KAAK,GAAGpC,OAAO,CACnB;IAAA,OAAMH,IAAI,CAAAR,aAAA,CAAAA,aAAA,KACLoB,YAAY;MACfyB,eAAe,EAAfA,eAAe;MACfC,aAAa,EAAbA,aAAa;MACbH,SAAS,EAATA,SAAS;MACTR,WAAW,EAAXA,WAAW;MACXM,yBAAyB,EAAzBA;IAAyB,GACzB;EAAA,MAAAO,MAAA,CAAAjD,kBAAA,CAEGkD,MAAM,CAACC,MAAM,CAAC9B,YAAY,CAAC,IAC9BqB,yBAAyB,EACzBI,eAAe,EACfC,aAAa,EACbH,SAAS,EACTR,WAAW,GAEd;EACD,IAAAgB,SAAA,GAAwC7C,QAAQ,CAAC;MAC/C8C,UAAU,EAAE,CAAC,EAAErC,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACqC,UAAU,CAAC;MACzEC,OAAO,EAAE1B;IACX,CAAC,CAAC;IAHkB2B,eAAe,GAAAH,SAAA,CAA3BI,UAAU;EAIlB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,OAAAxD,aAAA;MACEqB,GAAG,EAAEW,MAAM;MACXH,SAAS,EAAEkB,KAAK,CAACb,IAAI,CAAC;QAAEuB,KAAK,EAAExB;MAAW,CAAC;IAAC,GACzCH,UAAU;EAEjB,CAAC;EACD,IAAM4B,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChC,OAAA1D,aAAA;MACE2D,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE,CAAC;MACX/B,SAAS,EAAEkB,KAAK,CAACc,WAAW,CAAC;QAAEJ,KAAK,EAAE7B,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACiC;MAAY,CAAC;IAAC,GAC1FxD,UAAU,CAACiD,eAAe,EAAEf,eAAe,CAAC;EAEnD,CAAC;EACD,IAAMuB,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAO,EAAK;IAClC,IAAI,CAACnD,cAAc,CAACmD,OAAO,CAAC,EAC1B,OAAO,IAAI;IACb,OAAOlD,YAAY,CAACkD,OAAO,EAAE;MAC3BlC,SAAS,EAAEkB,KAAK,CAACvB,MAAM,CAAC;QAAEiC,KAAK,EAAE7B,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACJ;MAAO,CAAC;IACpF,CAAC,CAAC;EACJ,CAAC;EACD,IAAMwC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,OAAO;IAAA,OAAKrD,cAAc,CAACqD,OAAO,CAAC,GAAGpD,YAAY,CAACoD,OAAO,EAAE;MACnFpC,SAAS,EAAEnB,IAAI,CAAC,aAAa,EAAEuD,OAAO,CAAC9C,KAAK,CAACU,SAAS;IACxD,CAAC,CAAC,GAAG,IAAI;EAAA;EACT,OAAO;IACLE,SAAS,EAATA,SAAS;IACTR,QAAQ,EAARA,QAAQ;IACRwB,KAAK,EAALA,KAAK;IACLnB,UAAU,EAAVA,UAAU;IACVsC,KAAK,EAAE9B,YAAY;IACnBD,WAAW,EAAXA,WAAW;IACXV,YAAY,EAAEqC,cAAc,CAACtC,MAAM,CAAC,IAAIwC,eAAe,CAACvC,YAAY,CAAC;IACrEC,UAAU,EAAEsC,eAAe,CAACtC,UAAU,CAAC;IACvCgC,mBAAmB,EAAnBA,mBAAmB;IACnBF,YAAY,EAAZA;EACF,CAAC;AACH;AAEA,SACE1C,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}