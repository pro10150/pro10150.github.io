{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { cn, mapPropsVariants } from \"./chunk-SF6SJHAM.mjs\";\n\n// src/extend-variants.js\nimport * as React from \"react\";\nimport { tv } from \"@nextui-org/theme\";\nfunction getSlots(variants) {\n  return variants ? Object.values(variants).flatMap(Object.values).reduce((acc, slot) => {\n    if (typeof slot === \"object\" && slot !== null && !(slot instanceof String)) {\n      Object.keys(slot).forEach(key => {\n        if (!acc.hasOwnProperty(key)) {\n          acc[key] = \"\";\n        }\n      });\n    }\n    return acc;\n  }, {}) : {};\n}\nfunction getClassNamesWithProps(_ref) {\n  let {\n    props = {},\n    variants,\n    slots,\n    defaultVariants,\n    compoundVariants,\n    hasSlots,\n    opts\n  } = _ref;\n  var _a, _b, _c;\n  if (defaultVariants && typeof defaultVariants === \"object\") {\n    for (const key in defaultVariants) {\n      const value = defaultVariants[key];\n      const propValue = props == null ? void 0 : props[key];\n      if (propValue && propValue !== value) {\n        delete defaultVariants[key];\n      }\n    }\n  }\n  const customTv = tv(_objectSpread({\n    variants,\n    defaultVariants,\n    compoundVariants\n  }, hasSlots && {\n    slots\n  }), {\n    twMerge: (_a = opts.twMerge) != null ? _a : true,\n    twMergeConfig: (_b = opts.twMergeConfig) != null ? _b : {}\n  });\n  const [baseProps, variantProps] = mapPropsVariants(props, customTv.variantKeys, false);\n  const newProps = _objectSpread(_objectSpread({}, defaultVariants), baseProps);\n  let classNames = {};\n  const result = customTv(variantProps);\n  if (!hasSlots) {\n    newProps.className = cn(result, props.className);\n  } else {\n    Object.entries(result).forEach(_ref2 => {\n      let [key, value] = _ref2;\n      const slotResult = value();\n      if (typeof slotResult === \"string\") {\n        classNames[key] = slotResult;\n      }\n    });\n    Object.entries((_c = props.classNames) != null ? _c : {}).forEach(_ref3 => {\n      let [key, value] = _ref3;\n      classNames[key] = cn(classNames[key], value);\n    });\n  }\n  if (Object.keys(classNames).length !== 0) {\n    newProps.classNames = classNames;\n  }\n  return newProps;\n}\nfunction extendVariants(BaseComponent) {\n  let styles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    variants,\n    defaultVariants,\n    compoundVariants\n  } = styles || {};\n  const slots = getSlots(variants);\n  const hasSlots = typeof slots === \"object\" && Object.keys(slots).length !== 0;\n  const ForwardedComponent = React.forwardRef(function () {\n    let originalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 ? arguments[1] : undefined;\n    const newProps = React.useMemo(() => getClassNamesWithProps({\n      slots,\n      variants,\n      compoundVariants,\n      props: originalProps,\n      defaultVariants,\n      hasSlots,\n      opts\n    }, [originalProps]));\n    return React.createElement(BaseComponent, _objectSpread(_objectSpread(_objectSpread({}, originalProps), newProps), {}, {\n      ref\n    }));\n  });\n  if (BaseComponent.getCollectionNode) {\n    ForwardedComponent.getCollectionNode = itemProps => {\n      const newProps = getClassNamesWithProps({\n        slots,\n        variants,\n        compoundVariants,\n        props: itemProps,\n        defaultVariants,\n        hasSlots,\n        opts\n      });\n      return BaseComponent.getCollectionNode(_objectSpread(_objectSpread({}, itemProps), newProps));\n    };\n  }\n  ForwardedComponent.displayName = \"Extended(\".concat(BaseComponent.displayName || BaseComponent.name, \")\");\n  return ForwardedComponent;\n}\nexport { extendVariants };","map":{"version":3,"names":["cn","mapPropsVariants","React","tv","getSlots","variants","Object","values","flatMap","reduce","acc","slot","String","keys","forEach","key","hasOwnProperty","getClassNamesWithProps","_ref","props","slots","defaultVariants","compoundVariants","hasSlots","opts","_a","_b","_c","value","propValue","customTv","_objectSpread","twMerge","twMergeConfig","baseProps","variantProps","variantKeys","newProps","classNames","result","className","entries","_ref2","slotResult","_ref3","length","extendVariants","BaseComponent","styles","arguments","undefined","ForwardedComponent","forwardRef","originalProps","ref","useMemo","createElement","getCollectionNode","itemProps","displayName","concat","name"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@nextui-org/system-rsc/dist/chunk-4RIR2EK7.mjs"],"sourcesContent":["import {\r\n  cn,\r\n  mapPropsVariants\r\n} from \"./chunk-SF6SJHAM.mjs\";\r\n\r\n// src/extend-variants.js\r\nimport * as React from \"react\";\r\nimport { tv } from \"@nextui-org/theme\";\r\nfunction getSlots(variants) {\r\n  return variants ? Object.values(variants).flatMap(Object.values).reduce((acc, slot) => {\r\n    if (typeof slot === \"object\" && slot !== null && !(slot instanceof String)) {\r\n      Object.keys(slot).forEach((key) => {\r\n        if (!acc.hasOwnProperty(key)) {\r\n          acc[key] = \"\";\r\n        }\r\n      });\r\n    }\r\n    return acc;\r\n  }, {}) : {};\r\n}\r\nfunction getClassNamesWithProps({\r\n  props = {},\r\n  variants,\r\n  slots,\r\n  defaultVariants,\r\n  compoundVariants,\r\n  hasSlots,\r\n  opts\r\n}) {\r\n  var _a, _b, _c;\r\n  if (defaultVariants && typeof defaultVariants === \"object\") {\r\n    for (const key in defaultVariants) {\r\n      const value = defaultVariants[key];\r\n      const propValue = props == null ? void 0 : props[key];\r\n      if (propValue && propValue !== value) {\r\n        delete defaultVariants[key];\r\n      }\r\n    }\r\n  }\r\n  const customTv = tv(\r\n    {\r\n      variants,\r\n      defaultVariants,\r\n      compoundVariants,\r\n      ...hasSlots && { slots }\r\n    },\r\n    {\r\n      twMerge: (_a = opts.twMerge) != null ? _a : true,\r\n      twMergeConfig: (_b = opts.twMergeConfig) != null ? _b : {}\r\n    }\r\n  );\r\n  const [baseProps, variantProps] = mapPropsVariants(props, customTv.variantKeys, false);\r\n  const newProps = { ...defaultVariants, ...baseProps };\r\n  let classNames = {};\r\n  const result = customTv(variantProps);\r\n  if (!hasSlots) {\r\n    newProps.className = cn(result, props.className);\r\n  } else {\r\n    Object.entries(result).forEach(([key, value]) => {\r\n      const slotResult = value();\r\n      if (typeof slotResult === \"string\") {\r\n        classNames[key] = slotResult;\r\n      }\r\n    });\r\n    Object.entries((_c = props.classNames) != null ? _c : {}).forEach(([key, value]) => {\r\n      classNames[key] = cn(classNames[key], value);\r\n    });\r\n  }\r\n  if (Object.keys(classNames).length !== 0) {\r\n    newProps.classNames = classNames;\r\n  }\r\n  return newProps;\r\n}\r\nfunction extendVariants(BaseComponent, styles = {}, opts = {}) {\r\n  const { variants, defaultVariants, compoundVariants } = styles || {};\r\n  const slots = getSlots(variants);\r\n  const hasSlots = typeof slots === \"object\" && Object.keys(slots).length !== 0;\r\n  const ForwardedComponent = React.forwardRef((originalProps = {}, ref) => {\r\n    const newProps = React.useMemo(\r\n      () => getClassNamesWithProps(\r\n        {\r\n          slots,\r\n          variants,\r\n          compoundVariants,\r\n          props: originalProps,\r\n          defaultVariants,\r\n          hasSlots,\r\n          opts\r\n        },\r\n        [originalProps]\r\n      )\r\n    );\r\n    return React.createElement(BaseComponent, { ...originalProps, ...newProps, ref });\r\n  });\r\n  if (BaseComponent.getCollectionNode) {\r\n    ForwardedComponent.getCollectionNode = (itemProps) => {\r\n      const newProps = getClassNamesWithProps({\r\n        slots,\r\n        variants,\r\n        compoundVariants,\r\n        props: itemProps,\r\n        defaultVariants,\r\n        hasSlots,\r\n        opts\r\n      });\r\n      return BaseComponent.getCollectionNode({ ...itemProps, ...newProps });\r\n    };\r\n  }\r\n  ForwardedComponent.displayName = `Extended(${BaseComponent.displayName || BaseComponent.name})`;\r\n  return ForwardedComponent;\r\n}\r\n\r\nexport {\r\n  extendVariants\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}