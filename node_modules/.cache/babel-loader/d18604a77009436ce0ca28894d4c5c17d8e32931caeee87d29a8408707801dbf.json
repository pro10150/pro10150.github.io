{"ast":null,"code":"import _objectSpread from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pk117/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { useMultipleSelectionState as $58Phs$useMultipleSelectionState, SelectionManager as $58Phs$SelectionManager } from \"@react-stately/selection\";\nimport { useMemo as $58Phs$useMemo, useCallback as $58Phs$useCallback, useRef as $58Phs$useRef, useEffect as $58Phs$useEffect } from \"react\";\nimport { useCollection as $58Phs$useCollection } from \"@react-stately/collections\";\nimport { useControlledState as $58Phs$useControlledState } from \"@react-stately/utils\";\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */ /*\r\n    * Copyright 2020 Adobe. All rights reserved.\r\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n    * you may not use this file except in compliance with the License. You may obtain a copy\r\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n    *\r\n    * Unless required by applicable law or agreed to in writing, software distributed under\r\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n    * OF ANY KIND, either express or implied. See the License for the specific language\r\n    * governing permissions and limitations under the License.\r\n    */ /*\r\n       * Copyright 2020 Adobe. All rights reserved.\r\n       * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n       * you may not use this file except in compliance with the License. You may obtain a copy\r\n       * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n       *\r\n       * Unless required by applicable law or agreed to in writing, software distributed under\r\n       * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n       * OF ANY KIND, either express or implied. See the License for the specific language\r\n       * governing permissions and limitations under the License.\r\n       */\nvar $a02d57049d202695$export$d085fb9e920b5ca7 = /*#__PURE__*/function (_Symbol$iterator) {\n  function $a02d57049d202695$export$d085fb9e920b5ca7(nodes) {\n    var _this = this;\n    _classCallCheck(this, $a02d57049d202695$export$d085fb9e920b5ca7);\n    this.keyMap = new Map();\n    this.iterable = nodes;\n    var visit = function visit(node) {\n      _this.keyMap.set(node.key, node);\n      if (node.childNodes && node.type === \"section\") {\n        var _iterator = _createForOfIteratorHelper(node.childNodes),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var child = _step.value;\n            visit(child);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    };\n    var _iterator2 = _createForOfIteratorHelper(nodes),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var node = _step2.value;\n        visit(node);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var last;\n    var index = 0;\n    var _iterator3 = _createForOfIteratorHelper(this.keyMap),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _step3$value = _slicedToArray(_step3.value, 2),\n          key = _step3$value[0],\n          _node = _step3$value[1];\n        if (last) {\n          last.nextKey = key;\n          _node.prevKey = last.key;\n        } else {\n          this.firstKey = key;\n          _node.prevKey = undefined;\n        }\n        if (_node.type === \"item\") _node.index = index++;\n        last = _node;\n        // Set nextKey as undefined since this might be the last node\n        // If it isn't the last node, last.nextKey will properly set at start of new loop\n        last.nextKey = undefined;\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    this.lastKey = last === null || last === void 0 ? void 0 : last.key;\n  }\n  _createClass($a02d57049d202695$export$d085fb9e920b5ca7, [{\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      return _regeneratorRuntime().wrap(function value$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.delegateYield(this.iterable, \"t0\", 1);\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, value, this);\n    })\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.keyMap.size;\n    }\n  }, {\n    key: \"getKeys\",\n    value: function getKeys() {\n      return this.keyMap.keys();\n    }\n  }, {\n    key: \"getKeyBefore\",\n    value: function getKeyBefore(key) {\n      var node = this.keyMap.get(key);\n      return node ? node.prevKey : null;\n    }\n  }, {\n    key: \"getKeyAfter\",\n    value: function getKeyAfter(key) {\n      var node = this.keyMap.get(key);\n      return node ? node.nextKey : null;\n    }\n  }, {\n    key: \"getFirstKey\",\n    value: function getFirstKey() {\n      return this.firstKey;\n    }\n  }, {\n    key: \"getLastKey\",\n    value: function getLastKey() {\n      return this.lastKey;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.keyMap.get(key);\n    }\n  }, {\n    key: \"at\",\n    value: function at(idx) {\n      var keys = _toConsumableArray(this.getKeys());\n      return this.getItem(keys[idx]);\n    }\n  }, {\n    key: \"getChildren\",\n    value: function getChildren(key) {\n      var node = this.keyMap.get(key);\n      return (node === null || node === void 0 ? void 0 : node.childNodes) || [];\n    }\n  }]);\n  return $a02d57049d202695$export$d085fb9e920b5ca7;\n}(Symbol.iterator);\nfunction $e72dd72e1c76a225$export$2f645645f7bca764(props) {\n  var filter = props.filter;\n  var selectionState = (0, $58Phs$useMultipleSelectionState)(props);\n  var disabledKeys = (0, $58Phs$useMemo)(function () {\n    return props.disabledKeys ? new Set(props.disabledKeys) : new Set();\n  }, [props.disabledKeys]);\n  var factory = (0, $58Phs$useCallback)(function (nodes) {\n    return filter ? new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(filter(nodes)) : new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(nodes);\n  }, [filter]);\n  var context = (0, $58Phs$useMemo)(function () {\n    return {\n      suppressTextValueWarning: props.suppressTextValueWarning\n    };\n  }, [props.suppressTextValueWarning]);\n  var collection = (0, $58Phs$useCollection)(props, factory, context);\n  var selectionManager = (0, $58Phs$useMemo)(function () {\n    return new (0, $58Phs$SelectionManager)(collection, selectionState);\n  }, [collection, selectionState]);\n  // Reset focused key if that item is deleted from the collection.\n  var cachedCollection = (0, $58Phs$useRef)(null);\n  (0, $58Phs$useEffect)(function () {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {\n      var startItem = cachedCollection.current.getItem(selectionState.focusedKey);\n      var cachedItemNodes = _toConsumableArray(cachedCollection.current.getKeys()).map(function (key) {\n        var itemNode = cachedCollection.current.getItem(key);\n        return itemNode.type === \"item\" ? itemNode : null;\n      }).filter(function (node) {\n        return node !== null;\n      });\n      var itemNodes = _toConsumableArray(collection.getKeys()).map(function (key) {\n        var itemNode = collection.getItem(key);\n        return itemNode.type === \"item\" ? itemNode : null;\n      }).filter(function (node) {\n        return node !== null;\n      });\n      var diff = cachedItemNodes.length - itemNodes.length;\n      var index = Math.min(diff > 1 ? Math.max(startItem.index - diff + 1, 0) : startItem.index, itemNodes.length - 1);\n      var newNode;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(itemNodes[index].key)) {\n          newNode = itemNodes[index];\n          break;\n        }\n        // Find next, not disabled item.\n        if (index < itemNodes.length - 1) index++;else {\n          if (index > startItem.index) index = startItem.index;\n          index--;\n        }\n      }\n      selectionState.setFocusedKey(newNode ? newNode.key : null);\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n  return {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager\n  };\n}\n\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\n\nfunction $a0d645289fe9b86b$export$e7f05e985daf4b5f(props) {\n  var _props_defaultSelectedKey;\n  var _ref = (0, $58Phs$useControlledState)(props.selectedKey, (_props_defaultSelectedKey = props.defaultSelectedKey) !== null && _props_defaultSelectedKey !== void 0 ? _props_defaultSelectedKey : null, props.onSelectionChange),\n    _ref2 = _slicedToArray(_ref, 2),\n    selectedKey = _ref2[0],\n    setSelectedKey = _ref2[1];\n  var selectedKeys = (0, $58Phs$useMemo)(function () {\n    return selectedKey != null ? [selectedKey] : [];\n  }, [selectedKey]);\n  var _ref3 = (0, $e72dd72e1c76a225$export$2f645645f7bca764)(_objectSpread(_objectSpread({}, props), {}, {\n      selectionMode: \"single\",\n      disallowEmptySelection: true,\n      allowDuplicateSelectionEvents: true,\n      selectedKeys: selectedKeys,\n      onSelectionChange: function onSelectionChange(keys) {\n        var _keys_values_next_value;\n        var key = (_keys_values_next_value = keys.values().next().value) !== null && _keys_values_next_value !== void 0 ? _keys_values_next_value : null;\n        // Always fire onSelectionChange, even if the key is the same\n        // as the current key (useControlledState does not).\n        if (key === selectedKey && props.onSelectionChange) props.onSelectionChange(key);\n        setSelectedKey(key);\n      }\n    })),\n    collection = _ref3.collection,\n    disabledKeys = _ref3.disabledKeys,\n    selectionManager = _ref3.selectionManager;\n  var selectedItem = selectedKey != null ? collection.getItem(selectedKey) : null;\n  return {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager,\n    selectedKey: selectedKey,\n    setSelectedKey: setSelectedKey,\n    selectedItem: selectedItem\n  };\n}\nexport { $e72dd72e1c76a225$export$2f645645f7bca764 as useListState, $a0d645289fe9b86b$export$e7f05e985daf4b5f as useSingleSelectListState, $a02d57049d202695$export$d085fb9e920b5ca7 as ListCollection };","map":{"version":3,"names":["$a02d57049d202695$export$d085fb9e920b5ca7","_Symbol$iterator","nodes","_this","_classCallCheck","keyMap","Map","iterable","visit","node","set","key","childNodes","type","_iterator","_createForOfIteratorHelper","_step","s","n","done","child","value","err","e","f","_iterator2","_step2","last","index","_iterator3","_step3","_step3$value","_slicedToArray","nextKey","prevKey","firstKey","undefined","lastKey","_createClass","_regeneratorRuntime","mark","wrap","value$","_context","prev","next","delegateYield","stop","get","size","getKeys","keys","getKeyBefore","getKeyAfter","getFirstKey","getLastKey","getItem","at","idx","_toConsumableArray","getChildren","Symbol","iterator","$e72dd72e1c76a225$export$2f645645f7bca764","props","filter","selectionState","$58Phs$useMultipleSelectionState","disabledKeys","$58Phs$useMemo","Set","factory","$58Phs$useCallback","context","suppressTextValueWarning","collection","$58Phs$useCollection","selectionManager","$58Phs$SelectionManager","cachedCollection","$58Phs$useRef","$58Phs$useEffect","focusedKey","startItem","current","cachedItemNodes","map","itemNode","itemNodes","diff","length","Math","min","max","newNode","isDisabled","setFocusedKey","$a0d645289fe9b86b$export$e7f05e985daf4b5f","_props_defaultSelectedKey","_ref","$58Phs$useControlledState","selectedKey","defaultSelectedKey","onSelectionChange","_ref2","setSelectedKey","selectedKeys","_ref3","_objectSpread","selectionMode","disallowEmptySelection","allowDuplicateSelectionEvents","_keys_values_next_value","values","selectedItem"],"sources":["C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-stately\\list\\dist\\packages\\@react-stately\\list\\src\\index.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-stately\\list\\dist\\packages\\@react-stately\\list\\src\\useListState.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-stately\\list\\dist\\packages\\@react-stately\\list\\src\\ListCollection.ts","C:\\Users\\pk117\\Desktop\\Personal\\pro10150.github.io\\node_modules\\@react-stately\\list\\dist\\packages\\@react-stately\\list\\src\\useSingleSelectListState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {ListProps, ListState} from './useListState';\nexport type {SingleSelectListProps, SingleSelectListState} from './useSingleSelectListState';\nexport {useListState} from './useListState';\nexport {useSingleSelectListState} from './useSingleSelectListState';\nexport {ListCollection} from './ListCollection';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionStateBase, Key, Node} from '@react-types/shared';\nimport {ListCollection} from './ListCollection';\nimport {MultipleSelectionStateProps, SelectionManager, useMultipleSelectionState} from '@react-stately/selection';\nimport {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface ListProps<T> extends CollectionStateBase<T>, MultipleSelectionStateProps {\n  /** Filter function to generate a filtered list of nodes. */\n  filter?: (nodes: Iterable<Node<T>>) => Iterable<Node<T>>,\n  /** @private */\n  suppressTextValueWarning?: boolean\n}\n\nexport interface ListState<T> {\n  /** A collection of items in the list. */\n  collection: Collection<Node<T>>,\n\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\n/**\n * Provides state management for list-like components. Handles building a collection\n * of items from props, and manages multiple selection state.\n */\nexport function useListState<T extends object>(props: ListProps<T>): ListState<T>  {\n  let {filter} = props;\n\n  let selectionState = useMultipleSelectionState(props);\n  let disabledKeys = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n\n  let factory = useCallback(nodes => filter ? new ListCollection(filter(nodes)) : new ListCollection(nodes as Iterable<Node<T>>), [filter]);\n  let context = useMemo(() => ({suppressTextValueWarning: props.suppressTextValueWarning}), [props.suppressTextValueWarning]);\n\n  let collection = useCollection(props, factory, context);\n\n  let selectionManager = useMemo(() =>\n    new SelectionManager(collection, selectionState)\n    , [collection, selectionState]\n  );\n\n  // Reset focused key if that item is deleted from the collection.\n  const cachedCollection = useRef(null);\n  useEffect(() => {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {\n      const startItem = cachedCollection.current.getItem(selectionState.focusedKey);\n      const cachedItemNodes = [...cachedCollection.current.getKeys()].map(\n        key => {\n          const itemNode = cachedCollection.current.getItem(key);\n          return itemNode.type === 'item' ? itemNode : null;\n        }\n      ).filter(node => node !== null);\n      const itemNodes = [...collection.getKeys()].map(\n        key => {\n          const itemNode = collection.getItem(key);\n          return itemNode.type === 'item' ? itemNode : null;\n        }\n      ).filter(node => node !== null);\n      const diff = cachedItemNodes.length - itemNodes.length;\n      let index = Math.min(\n        (\n          diff > 1 ?\n          Math.max(startItem.index - diff + 1, 0) :\n          startItem.index\n        ),\n        itemNodes.length - 1);\n      let newNode:Node<T>;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(itemNodes[index].key)) {\n          newNode = itemNodes[index];\n          break;\n        }\n        // Find next, not disabled item.\n        if (index < itemNodes.length - 1) {\n          index++;\n        // Otherwise, find previous, not disabled item.\n        } else {\n          if (index > startItem.index) {\n            index = startItem.index;\n          }\n          index--;\n        }\n      }\n      selectionState.setFocusedKey(newNode ? newNode.key : null);\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Key, Node} from '@react-types/shared';\n\nexport class ListCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key;\n  private lastKey: Key;\n\n  constructor(nodes: Iterable<Node<T>>) {\n    this.iterable = nodes;\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (node.childNodes && node.type === 'section') {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T>;\n    let index = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === 'item') {\n        node.index = index++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n\n    this.lastKey = last?.key;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.iterable;\n  }\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey : null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey : null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    return this.lastKey;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key);\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n\n  getChildren(key: Key): Iterable<Node<T>> {\n    let node = this.keyMap.get(key);\n    return node?.childNodes || [];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionStateBase, Key, Node, SingleSelection} from '@react-types/shared';\nimport {ListState, useListState} from './useListState';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo} from 'react';\n\nexport interface SingleSelectListProps<T> extends CollectionStateBase<T>, Omit<SingleSelection, 'disallowEmptySelection'> {\n  /** Filter function to generate a filtered list of nodes. */\n  filter?: (nodes: Iterable<Node<T>>) => Iterable<Node<T>>,\n  /** @private */\n  suppressTextValueWarning?: boolean\n}\n\nexport interface SingleSelectListState<T> extends ListState<T> {\n  /** The key for the currently selected item. */\n  readonly selectedKey: Key,\n\n  /** Sets the selected key. */\n  setSelectedKey(key: Key | null): void,\n\n  /** The value of the currently selected item. */\n  readonly selectedItem: Node<T>\n}\n\n/**\n * Provides state management for list-like components with single selection.\n * Handles building a collection of items from props, and manages selection state.\n */\nexport function useSingleSelectListState<T extends object>(props: SingleSelectListProps<T>): SingleSelectListState<T>  {\n  let [selectedKey, setSelectedKey] = useControlledState(props.selectedKey, props.defaultSelectedKey ?? null, props.onSelectionChange);\n  let selectedKeys = useMemo(() => selectedKey != null ? [selectedKey] : [], [selectedKey]);\n  let {collection, disabledKeys, selectionManager} = useListState({\n    ...props,\n    selectionMode: 'single',\n    disallowEmptySelection: true,\n    allowDuplicateSelectionEvents: true,\n    selectedKeys,\n    onSelectionChange: (keys: Set<Key>) => {\n      let key = keys.values().next().value ?? null;\n\n      // Always fire onSelectionChange, even if the key is the same\n      // as the current key (useControlledState does not).\n      if (key === selectedKey && props.onSelectionChange) {\n        props.onSelectionChange(key);\n      }\n\n      setSelectedKey(key);\n    }\n  });\n\n  let selectedItem = selectedKey != null\n    ? collection.getItem(selectedKey)\n    : null;\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager,\n    selectedKey,\n    setSelectedKey,\n    selectedItem\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}