{"ast":null,"code":"\"use client\";\n\n// src/use-navbar.ts\nimport _objectSpread from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"ref\", \"as\", \"parentRef\", \"height\", \"shouldHideOnScroll\", \"disableScrollHandler\", \"onScrollPositionChange\", \"isMenuOpen\", \"isMenuDefaultOpen\", \"onMenuOpenChange\", \"motionProps\", \"className\", \"classNames\"];\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { navbar } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { mergeProps, useResizeObserver } from \"@react-aria/utils\";\nimport { useScrollPosition } from \"@nextui-org/use-scroll-position\";\nimport { useControlledState } from \"@react-stately/utils\";\nfunction useNavbar(originalProps) {\n  var _a;\n  const [props, variantProps] = mapPropsVariants(originalProps, navbar.variantKeys);\n  const {\n      ref,\n      as,\n      parentRef,\n      height = \"4rem\",\n      shouldHideOnScroll = false,\n      disableScrollHandler = false,\n      onScrollPositionChange,\n      isMenuOpen: isMenuOpenProp,\n      isMenuDefaultOpen,\n      onMenuOpenChange = () => {},\n      motionProps,\n      className,\n      classNames\n    } = props,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  const Component = as || \"nav\";\n  const domRef = useDOMRef(ref);\n  const prevWidth = useRef(0);\n  const navHeight = useRef(0);\n  const [isHidden, setIsHidden] = useState(false);\n  const handleMenuOpenChange = useCallback(isOpen => {\n    onMenuOpenChange(isOpen || false);\n  }, [onMenuOpenChange]);\n  const [isMenuOpen, setIsMenuOpen] = useControlledState(isMenuOpenProp, isMenuDefaultOpen, handleMenuOpenChange);\n  const updateWidth = () => {\n    if (domRef.current) {\n      const width = domRef.current.offsetWidth;\n      if (width !== prevWidth.current) {\n        prevWidth.current = width;\n      }\n    }\n  };\n  useResizeObserver({\n    ref: domRef,\n    onResize: () => {\n      var _a2;\n      const currentWidth = (_a2 = domRef.current) == null ? void 0 : _a2.offsetWidth;\n      if (currentWidth !== prevWidth.current) {\n        updateWidth();\n        setIsMenuOpen(false);\n      }\n    }\n  });\n  useEffect(() => {\n    var _a2;\n    updateWidth();\n    navHeight.current = ((_a2 = domRef.current) == null ? void 0 : _a2.offsetHeight) || 0;\n  }, []);\n  const slots = useMemo(() => navbar(_objectSpread(_objectSpread({}, variantProps), {}, {\n    hideOnScroll: shouldHideOnScroll\n  })), [...Object.values(variantProps), shouldHideOnScroll]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  useScrollPosition({\n    elementRef: parentRef,\n    isEnabled: shouldHideOnScroll || !disableScrollHandler,\n    callback: _ref => {\n      let {\n        prevPos,\n        currPos\n      } = _ref;\n      onScrollPositionChange == null ? void 0 : onScrollPositionChange(currPos.y);\n      if (shouldHideOnScroll) {\n        setIsHidden(prev => {\n          const next = currPos.y > prevPos.y && currPos.y > navHeight.current;\n          return next !== prev ? next : prev;\n        });\n      }\n    }\n  });\n  const getBaseProps = function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread(_objectSpread({}, mergeProps(otherProps, props2)), {}, {\n      \"data-hidden\": dataAttr(isHidden),\n      \"data-menu-open\": dataAttr(isMenuOpen),\n      ref: domRef,\n      className: slots.base({\n        class: clsx(baseStyles, props2 == null ? void 0 : props2.className)\n      }),\n      style: _objectSpread(_objectSpread({\n        \"--navbar-height\": height\n      }, otherProps == null ? void 0 : otherProps.style), props2 == null ? void 0 : props2.style)\n    });\n  };\n  const getWrapperProps = function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      \"data-menu-open\": dataAttr(isMenuOpen),\n      className: slots.wrapper({\n        class: clsx(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className)\n      })\n    });\n  };\n  return {\n    Component,\n    slots,\n    domRef,\n    height,\n    isHidden,\n    disableAnimation: (_a = originalProps.disableAnimation) != null ? _a : false,\n    shouldHideOnScroll,\n    isMenuOpen,\n    classNames,\n    setIsMenuOpen,\n    motionProps,\n    getBaseProps,\n    getWrapperProps\n  };\n}\nexport { useNavbar };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","mapPropsVariants","navbar","useDOMRef","clsx","dataAttr","useCallback","useEffect","useMemo","useRef","useState","mergeProps","useResizeObserver","useScrollPosition","useControlledState","useNavbar","originalProps","_a","props","variantProps","variantKeys","ref","as","parentRef","height","shouldHideOnScroll","disableScrollHandler","onScrollPositionChange","isMenuOpen","isMenuOpenProp","isMenuDefaultOpen","onMenuOpenChange","motionProps","className","classNames","otherProps","Component","domRef","prevWidth","navHeight","isHidden","setIsHidden","handleMenuOpenChange","isOpen","setIsMenuOpen","updateWidth","current","width","offsetWidth","onResize","_a2","currentWidth","offsetHeight","slots","hideOnScroll","Object","values","baseStyles","base","elementRef","isEnabled","callback","_ref","prevPos","currPos","y","prev","next","getBaseProps","props2","arguments","length","undefined","class","style","getWrapperProps","wrapper","disableAnimation"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/@nextui-org/navbar/dist/chunk-YKB6HRJE.mjs"],"sourcesContent":["\"use client\";\r\n\r\n// src/use-navbar.ts\r\nimport { mapPropsVariants } from \"@nextui-org/system\";\r\nimport { navbar } from \"@nextui-org/theme\";\r\nimport { useDOMRef } from \"@nextui-org/react-utils\";\r\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { mergeProps, useResizeObserver } from \"@react-aria/utils\";\r\nimport { useScrollPosition } from \"@nextui-org/use-scroll-position\";\r\nimport { useControlledState } from \"@react-stately/utils\";\r\nfunction useNavbar(originalProps) {\r\n  var _a;\r\n  const [props, variantProps] = mapPropsVariants(originalProps, navbar.variantKeys);\r\n  const {\r\n    ref,\r\n    as,\r\n    parentRef,\r\n    height = \"4rem\",\r\n    shouldHideOnScroll = false,\r\n    disableScrollHandler = false,\r\n    onScrollPositionChange,\r\n    isMenuOpen: isMenuOpenProp,\r\n    isMenuDefaultOpen,\r\n    onMenuOpenChange = () => {\r\n    },\r\n    motionProps,\r\n    className,\r\n    classNames,\r\n    ...otherProps\r\n  } = props;\r\n  const Component = as || \"nav\";\r\n  const domRef = useDOMRef(ref);\r\n  const prevWidth = useRef(0);\r\n  const navHeight = useRef(0);\r\n  const [isHidden, setIsHidden] = useState(false);\r\n  const handleMenuOpenChange = useCallback(\r\n    (isOpen) => {\r\n      onMenuOpenChange(isOpen || false);\r\n    },\r\n    [onMenuOpenChange]\r\n  );\r\n  const [isMenuOpen, setIsMenuOpen] = useControlledState(\r\n    isMenuOpenProp,\r\n    isMenuDefaultOpen,\r\n    handleMenuOpenChange\r\n  );\r\n  const updateWidth = () => {\r\n    if (domRef.current) {\r\n      const width = domRef.current.offsetWidth;\r\n      if (width !== prevWidth.current) {\r\n        prevWidth.current = width;\r\n      }\r\n    }\r\n  };\r\n  useResizeObserver({\r\n    ref: domRef,\r\n    onResize: () => {\r\n      var _a2;\r\n      const currentWidth = (_a2 = domRef.current) == null ? void 0 : _a2.offsetWidth;\r\n      if (currentWidth !== prevWidth.current) {\r\n        updateWidth();\r\n        setIsMenuOpen(false);\r\n      }\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    var _a2;\r\n    updateWidth();\r\n    navHeight.current = ((_a2 = domRef.current) == null ? void 0 : _a2.offsetHeight) || 0;\r\n  }, []);\r\n  const slots = useMemo(\r\n    () => navbar({\r\n      ...variantProps,\r\n      hideOnScroll: shouldHideOnScroll\r\n    }),\r\n    [...Object.values(variantProps), shouldHideOnScroll]\r\n  );\r\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\r\n  useScrollPosition({\r\n    elementRef: parentRef,\r\n    isEnabled: shouldHideOnScroll || !disableScrollHandler,\r\n    callback: ({ prevPos, currPos }) => {\r\n      onScrollPositionChange == null ? void 0 : onScrollPositionChange(currPos.y);\r\n      if (shouldHideOnScroll) {\r\n        setIsHidden((prev) => {\r\n          const next = currPos.y > prevPos.y && currPos.y > navHeight.current;\r\n          return next !== prev ? next : prev;\r\n        });\r\n      }\r\n    }\r\n  });\r\n  const getBaseProps = (props2 = {}) => ({\r\n    ...mergeProps(otherProps, props2),\r\n    \"data-hidden\": dataAttr(isHidden),\r\n    \"data-menu-open\": dataAttr(isMenuOpen),\r\n    ref: domRef,\r\n    className: slots.base({ class: clsx(baseStyles, props2 == null ? void 0 : props2.className) }),\r\n    style: {\r\n      \"--navbar-height\": height,\r\n      ...otherProps == null ? void 0 : otherProps.style,\r\n      ...props2 == null ? void 0 : props2.style\r\n    }\r\n  });\r\n  const getWrapperProps = (props2 = {}) => ({\r\n    ...props2,\r\n    \"data-menu-open\": dataAttr(isMenuOpen),\r\n    className: slots.wrapper({ class: clsx(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className) })\r\n  });\r\n  return {\r\n    Component,\r\n    slots,\r\n    domRef,\r\n    height,\r\n    isHidden,\r\n    disableAnimation: (_a = originalProps.disableAnimation) != null ? _a : false,\r\n    shouldHideOnScroll,\r\n    isMenuOpen,\r\n    classNames,\r\n    setIsMenuOpen,\r\n    motionProps,\r\n    getBaseProps,\r\n    getWrapperProps\r\n  };\r\n}\r\n\r\nexport {\r\n  useNavbar\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}