{"ast":null,"code":"import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\r\n * |     | Unit                           |     | Unit                           |\r\n * |-----|--------------------------------|-----|--------------------------------|\r\n * |  a  | AM, PM                         |  A* |                                |\r\n * |  d  | Day of month                   |  D  |                                |\r\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\r\n * |  m  | Minute                         |  M  | Month                          |\r\n * |  s  | Second                         |  S  | Fraction of second             |\r\n * |  y  | Year (abs)                     |  Y  |                                |\r\n *\r\n * Letters marked by * are not implemented but reserved by Unicode standard.\r\n */\n\nexport var lightFormatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getMilliseconds();\n    var fractionalSeconds = Math.trunc(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};","map":{"version":3,"names":["addLeadingZeros","lightFormatters","y","date","token","signedYear","getFullYear","year","length","M","month","getMonth","String","d","getDate","a","dayPeriodEnumValue","getHours","toUpperCase","h","H","m","getMinutes","s","getSeconds","S","numberOfDigits","milliseconds","getMilliseconds","fractionalSeconds","Math","trunc","pow"],"sources":["C:/Users/pk117/Desktop/Personal/pro10150.github.io/node_modules/date-fns/_lib/format/lightFormatters.mjs"],"sourcesContent":["import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\r\n\r\n/*\r\n * |     | Unit                           |     | Unit                           |\r\n * |-----|--------------------------------|-----|--------------------------------|\r\n * |  a  | AM, PM                         |  A* |                                |\r\n * |  d  | Day of month                   |  D  |                                |\r\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\r\n * |  m  | Minute                         |  M  | Month                          |\r\n * |  s  | Second                         |  S  | Fraction of second             |\r\n * |  y  | Year (abs)                     |  Y  |                                |\r\n *\r\n * Letters marked by * are not implemented but reserved by Unicode standard.\r\n */\r\n\r\nexport const lightFormatters = {\r\n  // Year\r\n  y(date, token) {\r\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\r\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\r\n    // |----------|-------|----|-------|-------|-------|\r\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\r\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\r\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\r\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\r\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\r\n\r\n    const signedYear = date.getFullYear();\r\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\r\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\r\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\r\n  },\r\n\r\n  // Month\r\n  M(date, token) {\r\n    const month = date.getMonth();\r\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\r\n  },\r\n\r\n  // Day of the month\r\n  d(date, token) {\r\n    return addLeadingZeros(date.getDate(), token.length);\r\n  },\r\n\r\n  // AM or PM\r\n  a(date, token) {\r\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\r\n\r\n    switch (token) {\r\n      case \"a\":\r\n      case \"aa\":\r\n        return dayPeriodEnumValue.toUpperCase();\r\n      case \"aaa\":\r\n        return dayPeriodEnumValue;\r\n      case \"aaaaa\":\r\n        return dayPeriodEnumValue[0];\r\n      case \"aaaa\":\r\n      default:\r\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\r\n    }\r\n  },\r\n\r\n  // Hour [1-12]\r\n  h(date, token) {\r\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\r\n  },\r\n\r\n  // Hour [0-23]\r\n  H(date, token) {\r\n    return addLeadingZeros(date.getHours(), token.length);\r\n  },\r\n\r\n  // Minute\r\n  m(date, token) {\r\n    return addLeadingZeros(date.getMinutes(), token.length);\r\n  },\r\n\r\n  // Second\r\n  s(date, token) {\r\n    return addLeadingZeros(date.getSeconds(), token.length);\r\n  },\r\n\r\n  // Fraction of second\r\n  S(date, token) {\r\n    const numberOfDigits = token.length;\r\n    const milliseconds = date.getMilliseconds();\r\n    const fractionalSeconds = Math.trunc(\r\n      milliseconds * Math.pow(10, numberOfDigits - 3),\r\n    );\r\n    return addLeadingZeros(fractionalSeconds, token.length);\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}